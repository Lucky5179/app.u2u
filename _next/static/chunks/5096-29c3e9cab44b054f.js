!(function () {
  try {
    var e =
        "undefined" != typeof window
          ? window
          : "undefined" != typeof global
          ? global
          : "undefined" != typeof self
          ? self
          : {},
      t = new e.Error().stack;
    t &&
      ((e._sentryDebugIds = e._sentryDebugIds || {}),
      (e._sentryDebugIds[t] = "ca91c167-b6c9-4f0a-bb55-fe9602988056"),
      (e._sentryDebugIdIdentifier =
        "sentry-dbid-ca91c167-b6c9-4f0a-bb55-fe9602988056"));
  } catch (e) {}
})(),
  (self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [5096],
    {
      1360: function (e, t, n) {
        "use strict";
        function r(e, t) {
          var n = t && t.cache ? t.cache : c,
            r = t && t.serializer ? t.serializer : s;
          return (
            t && t.strategy
              ? t.strategy
              : function (e, t) {
                  var n,
                    r,
                    s = 1 === e.length ? i : o;
                  return (
                    (n = t.cache.create()),
                    (r = t.serializer),
                    s.bind(this, e, n, r)
                  );
                }
          )(e, { cache: n, serializer: r });
        }
        function i(e, t, n, r) {
          var i =
              null == r || "number" == typeof r || "boolean" == typeof r
                ? r
                : n(r),
            o = t.get(i);
          return void 0 === o && ((o = e.call(this, r)), t.set(i, o)), o;
        }
        function o(e, t, n) {
          var r = Array.prototype.slice.call(arguments, 3),
            i = n(r),
            o = t.get(i);
          return void 0 === o && ((o = e.apply(this, r)), t.set(i, o)), o;
        }
        n.r(t),
          n.d(t, {
            memoize: function () {
              return r;
            },
            strategies: function () {
              return u;
            },
          });
        var s = function () {
          return JSON.stringify(arguments);
        };
        function a() {
          this.cache = Object.create(null);
        }
        (a.prototype.get = function (e) {
          return this.cache[e];
        }),
          (a.prototype.set = function (e, t) {
            this.cache[e] = t;
          });
        var c = {
            create: function () {
              return new a();
            },
          },
          u = {
            variadic: function (e, t) {
              var n, r;
              return (
                (n = t.cache.create()),
                (r = t.serializer),
                o.bind(this, e, n, r)
              );
            },
            monadic: function (e, t) {
              var n, r;
              return (
                (n = t.cache.create()),
                (r = t.serializer),
                i.bind(this, e, n, r)
              );
            },
          };
      },
      91060: function (e, t, n) {
        let r = n(72351),
          i = n(69007),
          o = n(5929),
          s = n(90339);
        function a(e, t, n, o, s) {
          let a = [].slice.call(arguments, 1),
            c = a.length,
            u = "function" == typeof a[c - 1];
          if (!u && !r()) throw Error("Callback required as last argument");
          if (u) {
            if (c < 2) throw Error("Too few arguments provided");
            2 === c
              ? ((s = n), (n = t), (t = o = void 0))
              : 3 === c &&
                (t.getContext && void 0 === s
                  ? ((s = o), (o = void 0))
                  : ((s = o), (o = n), (n = t), (t = void 0)));
          } else {
            if (c < 1) throw Error("Too few arguments provided");
            return (
              1 === c
                ? ((n = t), (t = o = void 0))
                : 2 !== c || t.getContext || ((o = n), (n = t), (t = void 0)),
              new Promise(function (r, s) {
                try {
                  let s = i.create(n, o);
                  r(e(s, t, o));
                } catch (e) {
                  s(e);
                }
              })
            );
          }
          try {
            let r = i.create(n, o);
            s(null, e(r, t, o));
          } catch (e) {
            s(e);
          }
        }
        (t.create = i.create),
          (t.toCanvas = a.bind(null, o.render)),
          (t.toDataURL = a.bind(null, o.renderToDataURL)),
          (t.toString = a.bind(null, function (e, t, n) {
            return s.render(e, n);
          }));
      },
      72351: function (e) {
        e.exports = function () {
          return (
            "function" == typeof Promise &&
            Promise.prototype &&
            Promise.prototype.then
          );
        };
      },
      98067: function (e, t, n) {
        let r = n(51203).getSymbolSize;
        (t.getRowColCoords = function (e) {
          if (1 === e) return [];
          let t = Math.floor(e / 7) + 2,
            n = r(e),
            i = 145 === n ? 26 : 2 * Math.ceil((n - 13) / (2 * t - 2)),
            o = [n - 7];
          for (let e = 1; e < t - 1; e++) o[e] = o[e - 1] - i;
          return o.push(6), o.reverse();
        }),
          (t.getPositions = function (e) {
            let n = [],
              r = t.getRowColCoords(e),
              i = r.length;
            for (let e = 0; e < i; e++)
              for (let t = 0; t < i; t++)
                (0 !== e || 0 !== t) &&
                  (0 !== e || t !== i - 1) &&
                  (e !== i - 1 || 0 !== t) &&
                  n.push([r[e], r[t]]);
            return n;
          });
      },
      63464: function (e, t, n) {
        let r = n(42894),
          i = [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            " ",
            "$",
            "%",
            "*",
            "+",
            "-",
            ".",
            "/",
            ":",
          ];
        function o(e) {
          (this.mode = r.ALPHANUMERIC), (this.data = e);
        }
        (o.getBitsLength = function (e) {
          return 11 * Math.floor(e / 2) + (e % 2) * 6;
        }),
          (o.prototype.getLength = function () {
            return this.data.length;
          }),
          (o.prototype.getBitsLength = function () {
            return o.getBitsLength(this.data.length);
          }),
          (o.prototype.write = function (e) {
            let t;
            for (t = 0; t + 2 <= this.data.length; t += 2) {
              let n = 45 * i.indexOf(this.data[t]);
              (n += i.indexOf(this.data[t + 1])), e.put(n, 11);
            }
            this.data.length % 2 && e.put(i.indexOf(this.data[t]), 6);
          }),
          (e.exports = o);
      },
      37675: function (e) {
        function t() {
          (this.buffer = []), (this.length = 0);
        }
        (t.prototype = {
          get: function (e) {
            return (
              ((this.buffer[Math.floor(e / 8)] >>> (7 - (e % 8))) & 1) == 1
            );
          },
          put: function (e, t) {
            for (let n = 0; n < t; n++)
              this.putBit(((e >>> (t - n - 1)) & 1) == 1);
          },
          getLengthInBits: function () {
            return this.length;
          },
          putBit: function (e) {
            let t = Math.floor(this.length / 8);
            this.buffer.length <= t && this.buffer.push(0),
              e && (this.buffer[t] |= 128 >>> this.length % 8),
              this.length++;
          },
        }),
          (e.exports = t);
      },
      60587: function (e) {
        function t(e) {
          if (!e || e < 1)
            throw Error("BitMatrix size must be defined and greater than 0");
          (this.size = e),
            (this.data = new Uint8Array(e * e)),
            (this.reservedBit = new Uint8Array(e * e));
        }
        (t.prototype.set = function (e, t, n, r) {
          let i = e * this.size + t;
          (this.data[i] = n), r && (this.reservedBit[i] = !0);
        }),
          (t.prototype.get = function (e, t) {
            return this.data[e * this.size + t];
          }),
          (t.prototype.xor = function (e, t, n) {
            this.data[e * this.size + t] ^= n;
          }),
          (t.prototype.isReserved = function (e, t) {
            return this.reservedBit[e * this.size + t];
          }),
          (e.exports = t);
      },
      62917: function (e, t, n) {
        let r = n(42894);
        function i(e) {
          (this.mode = r.BYTE),
            "string" == typeof e
              ? (this.data = new TextEncoder().encode(e))
              : (this.data = new Uint8Array(e));
        }
        (i.getBitsLength = function (e) {
          return 8 * e;
        }),
          (i.prototype.getLength = function () {
            return this.data.length;
          }),
          (i.prototype.getBitsLength = function () {
            return i.getBitsLength(this.data.length);
          }),
          (i.prototype.write = function (e) {
            for (let t = 0, n = this.data.length; t < n; t++)
              e.put(this.data[t], 8);
          }),
          (e.exports = i);
      },
      90534: function (e, t, n) {
        let r = n(20011),
          i = [
            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4,
            4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4,
            8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16,
            6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17,
            23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29,
            35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45,
            15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19,
            37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45,
            62, 74, 24, 47, 65, 77, 25, 49, 68, 81,
          ],
          o = [
            7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26,
            48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60,
            110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260,
            308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432,
            144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196,
            364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476,
            690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870,
            1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050,
            1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290,
            1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530,
            1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770,
            2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040,
            2430,
          ];
        (t.getBlocksCount = function (e, t) {
          switch (t) {
            case r.L:
              return i[(e - 1) * 4 + 0];
            case r.M:
              return i[(e - 1) * 4 + 1];
            case r.Q:
              return i[(e - 1) * 4 + 2];
            case r.H:
              return i[(e - 1) * 4 + 3];
            default:
              return;
          }
        }),
          (t.getTotalCodewordsCount = function (e, t) {
            switch (t) {
              case r.L:
                return o[(e - 1) * 4 + 0];
              case r.M:
                return o[(e - 1) * 4 + 1];
              case r.Q:
                return o[(e - 1) * 4 + 2];
              case r.H:
                return o[(e - 1) * 4 + 3];
              default:
                return;
            }
          });
      },
      20011: function (e, t) {
        (t.L = { bit: 1 }),
          (t.M = { bit: 0 }),
          (t.Q = { bit: 3 }),
          (t.H = { bit: 2 }),
          (t.isValid = function (e) {
            return e && void 0 !== e.bit && e.bit >= 0 && e.bit < 4;
          }),
          (t.from = function (e, n) {
            if (t.isValid(e)) return e;
            try {
              return (function (e) {
                if ("string" != typeof e) throw Error("Param is not a string");
                switch (e.toLowerCase()) {
                  case "l":
                  case "low":
                    return t.L;
                  case "m":
                  case "medium":
                    return t.M;
                  case "q":
                  case "quartile":
                    return t.Q;
                  case "h":
                  case "high":
                    return t.H;
                  default:
                    throw Error("Unknown EC Level: " + e);
                }
              })(e);
            } catch (e) {
              return n;
            }
          });
      },
      85083: function (e, t, n) {
        let r = n(51203).getSymbolSize;
        t.getPositions = function (e) {
          let t = r(e);
          return [
            [0, 0],
            [t - 7, 0],
            [0, t - 7],
          ];
        };
      },
      88157: function (e, t, n) {
        let r = n(51203),
          i = r.getBCHDigit(1335);
        t.getEncodedBits = function (e, t) {
          let n = (e.bit << 3) | t,
            o = n << 10;
          for (; r.getBCHDigit(o) - i >= 0; )
            o ^= 1335 << (r.getBCHDigit(o) - i);
          return ((n << 10) | o) ^ 21522;
        };
      },
      90171: function (e, t) {
        let n = new Uint8Array(512),
          r = new Uint8Array(256);
        (function () {
          let e = 1;
          for (let t = 0; t < 255; t++)
            (n[t] = e), (r[e] = t), 256 & (e <<= 1) && (e ^= 285);
          for (let e = 255; e < 512; e++) n[e] = n[e - 255];
        })(),
          (t.log = function (e) {
            if (e < 1) throw Error("log(" + e + ")");
            return r[e];
          }),
          (t.exp = function (e) {
            return n[e];
          }),
          (t.mul = function (e, t) {
            return 0 === e || 0 === t ? 0 : n[r[e] + r[t]];
          });
      },
      71316: function (e, t, n) {
        let r = n(42894),
          i = n(51203);
        function o(e) {
          (this.mode = r.KANJI), (this.data = e);
        }
        (o.getBitsLength = function (e) {
          return 13 * e;
        }),
          (o.prototype.getLength = function () {
            return this.data.length;
          }),
          (o.prototype.getBitsLength = function () {
            return o.getBitsLength(this.data.length);
          }),
          (o.prototype.write = function (e) {
            let t;
            for (t = 0; t < this.data.length; t++) {
              let n = i.toSJIS(this.data[t]);
              if (n >= 33088 && n <= 40956) n -= 33088;
              else if (n >= 57408 && n <= 60351) n -= 49472;
              else
                throw Error(
                  "Invalid SJIS character: " +
                    this.data[t] +
                    "\nMake sure your charset is UTF-8"
                );
              (n = ((n >>> 8) & 255) * 192 + (255 & n)), e.put(n, 13);
            }
          }),
          (e.exports = o);
      },
      72374: function (e, t) {
        t.Patterns = {
          PATTERN000: 0,
          PATTERN001: 1,
          PATTERN010: 2,
          PATTERN011: 3,
          PATTERN100: 4,
          PATTERN101: 5,
          PATTERN110: 6,
          PATTERN111: 7,
        };
        let n = { N1: 3, N2: 3, N3: 40, N4: 10 };
        (t.isValid = function (e) {
          return null != e && "" !== e && !isNaN(e) && e >= 0 && e <= 7;
        }),
          (t.from = function (e) {
            return t.isValid(e) ? parseInt(e, 10) : void 0;
          }),
          (t.getPenaltyN1 = function (e) {
            let t = e.size,
              r = 0,
              i = 0,
              o = 0,
              s = null,
              a = null;
            for (let c = 0; c < t; c++) {
              (i = o = 0), (s = a = null);
              for (let u = 0; u < t; u++) {
                let t = e.get(c, u);
                t === s
                  ? i++
                  : (i >= 5 && (r += n.N1 + (i - 5)), (s = t), (i = 1)),
                  (t = e.get(u, c)) === a
                    ? o++
                    : (o >= 5 && (r += n.N1 + (o - 5)), (a = t), (o = 1));
              }
              i >= 5 && (r += n.N1 + (i - 5)), o >= 5 && (r += n.N1 + (o - 5));
            }
            return r;
          }),
          (t.getPenaltyN2 = function (e) {
            let t = e.size,
              r = 0;
            for (let n = 0; n < t - 1; n++)
              for (let i = 0; i < t - 1; i++) {
                let t =
                  e.get(n, i) +
                  e.get(n, i + 1) +
                  e.get(n + 1, i) +
                  e.get(n + 1, i + 1);
                (4 === t || 0 === t) && r++;
              }
            return r * n.N2;
          }),
          (t.getPenaltyN3 = function (e) {
            let t = e.size,
              r = 0,
              i = 0,
              o = 0;
            for (let n = 0; n < t; n++) {
              i = o = 0;
              for (let s = 0; s < t; s++)
                (i = ((i << 1) & 2047) | e.get(n, s)),
                  s >= 10 && (1488 === i || 93 === i) && r++,
                  (o = ((o << 1) & 2047) | e.get(s, n)),
                  s >= 10 && (1488 === o || 93 === o) && r++;
            }
            return r * n.N3;
          }),
          (t.getPenaltyN4 = function (e) {
            let t = 0,
              r = e.data.length;
            for (let n = 0; n < r; n++) t += e.data[n];
            return Math.abs(Math.ceil((100 * t) / r / 5) - 10) * n.N4;
          }),
          (t.applyMask = function (e, n) {
            let r = n.size;
            for (let i = 0; i < r; i++)
              for (let o = 0; o < r; o++)
                n.isReserved(o, i) ||
                  n.xor(
                    o,
                    i,
                    (function (e, n, r) {
                      switch (e) {
                        case t.Patterns.PATTERN000:
                          return (n + r) % 2 == 0;
                        case t.Patterns.PATTERN001:
                          return n % 2 == 0;
                        case t.Patterns.PATTERN010:
                          return r % 3 == 0;
                        case t.Patterns.PATTERN011:
                          return (n + r) % 3 == 0;
                        case t.Patterns.PATTERN100:
                          return (
                            (Math.floor(n / 2) + Math.floor(r / 3)) % 2 == 0
                          );
                        case t.Patterns.PATTERN101:
                          return ((n * r) % 2) + ((n * r) % 3) == 0;
                        case t.Patterns.PATTERN110:
                          return (((n * r) % 2) + ((n * r) % 3)) % 2 == 0;
                        case t.Patterns.PATTERN111:
                          return (((n * r) % 3) + ((n + r) % 2)) % 2 == 0;
                        default:
                          throw Error("bad maskPattern:" + e);
                      }
                    })(e, o, i)
                  );
          }),
          (t.getBestMask = function (e, n) {
            let r = Object.keys(t.Patterns).length,
              i = 0,
              o = 1 / 0;
            for (let s = 0; s < r; s++) {
              n(s), t.applyMask(s, e);
              let r =
                t.getPenaltyN1(e) +
                t.getPenaltyN2(e) +
                t.getPenaltyN3(e) +
                t.getPenaltyN4(e);
              t.applyMask(s, e), r < o && ((o = r), (i = s));
            }
            return i;
          });
      },
      42894: function (e, t, n) {
        let r = n(41678),
          i = n(55794);
        (t.NUMERIC = { id: "Numeric", bit: 1, ccBits: [10, 12, 14] }),
          (t.ALPHANUMERIC = {
            id: "Alphanumeric",
            bit: 2,
            ccBits: [9, 11, 13],
          }),
          (t.BYTE = { id: "Byte", bit: 4, ccBits: [8, 16, 16] }),
          (t.KANJI = { id: "Kanji", bit: 8, ccBits: [8, 10, 12] }),
          (t.MIXED = { bit: -1 }),
          (t.getCharCountIndicator = function (e, t) {
            if (!e.ccBits) throw Error("Invalid mode: " + e);
            if (!r.isValid(t)) throw Error("Invalid version: " + t);
            return t >= 1 && t < 10
              ? e.ccBits[0]
              : t < 27
              ? e.ccBits[1]
              : e.ccBits[2];
          }),
          (t.getBestModeForData = function (e) {
            return i.testNumeric(e)
              ? t.NUMERIC
              : i.testAlphanumeric(e)
              ? t.ALPHANUMERIC
              : i.testKanji(e)
              ? t.KANJI
              : t.BYTE;
          }),
          (t.toString = function (e) {
            if (e && e.id) return e.id;
            throw Error("Invalid mode");
          }),
          (t.isValid = function (e) {
            return e && e.bit && e.ccBits;
          }),
          (t.from = function (e, n) {
            if (t.isValid(e)) return e;
            try {
              return (function (e) {
                if ("string" != typeof e) throw Error("Param is not a string");
                switch (e.toLowerCase()) {
                  case "numeric":
                    return t.NUMERIC;
                  case "alphanumeric":
                    return t.ALPHANUMERIC;
                  case "kanji":
                    return t.KANJI;
                  case "byte":
                    return t.BYTE;
                  default:
                    throw Error("Unknown mode: " + e);
                }
              })(e);
            } catch (e) {
              return n;
            }
          });
      },
      41639: function (e, t, n) {
        let r = n(42894);
        function i(e) {
          (this.mode = r.NUMERIC), (this.data = e.toString());
        }
        (i.getBitsLength = function (e) {
          return 10 * Math.floor(e / 3) + (e % 3 ? (e % 3) * 3 + 1 : 0);
        }),
          (i.prototype.getLength = function () {
            return this.data.length;
          }),
          (i.prototype.getBitsLength = function () {
            return i.getBitsLength(this.data.length);
          }),
          (i.prototype.write = function (e) {
            let t, n;
            for (t = 0; t + 3 <= this.data.length; t += 3)
              (n = parseInt(this.data.substr(t, 3), 10)), e.put(n, 10);
            let r = this.data.length - t;
            r > 0 &&
              ((n = parseInt(this.data.substr(t), 10)), e.put(n, 3 * r + 1));
          }),
          (e.exports = i);
      },
      62883: function (e, t, n) {
        let r = n(90171);
        (t.mul = function (e, t) {
          let n = new Uint8Array(e.length + t.length - 1);
          for (let i = 0; i < e.length; i++)
            for (let o = 0; o < t.length; o++) n[i + o] ^= r.mul(e[i], t[o]);
          return n;
        }),
          (t.mod = function (e, t) {
            let n = new Uint8Array(e);
            for (; n.length - t.length >= 0; ) {
              let e = n[0];
              for (let i = 0; i < t.length; i++) n[i] ^= r.mul(t[i], e);
              let i = 0;
              for (; i < n.length && 0 === n[i]; ) i++;
              n = n.slice(i);
            }
            return n;
          }),
          (t.generateECPolynomial = function (e) {
            let n = new Uint8Array([1]);
            for (let i = 0; i < e; i++)
              n = t.mul(n, new Uint8Array([1, r.exp(i)]));
            return n;
          });
      },
      69007: function (e, t, n) {
        let r = n(51203),
          i = n(20011),
          o = n(37675),
          s = n(60587),
          a = n(98067),
          c = n(85083),
          u = n(72374),
          l = n(90534),
          f = n(55487),
          d = n(38496),
          h = n(88157),
          p = n(42894),
          m = n(54810);
        function g(e, t, n) {
          let r, i;
          let o = e.size,
            s = h.getEncodedBits(t, n);
          for (r = 0; r < 15; r++)
            (i = ((s >> r) & 1) == 1),
              r < 6
                ? e.set(r, 8, i, !0)
                : r < 8
                ? e.set(r + 1, 8, i, !0)
                : e.set(o - 15 + r, 8, i, !0),
              r < 8
                ? e.set(8, o - r - 1, i, !0)
                : r < 9
                ? e.set(8, 15 - r - 1 + 1, i, !0)
                : e.set(8, 15 - r - 1, i, !0);
          e.set(o - 8, 8, 1, !0);
        }
        t.create = function (e, t) {
          let n, h;
          if (void 0 === e || "" === e) throw Error("No input text");
          let y = i.M;
          return (
            void 0 !== t &&
              ((y = i.from(t.errorCorrectionLevel, i.M)),
              (n = d.from(t.version)),
              (h = u.from(t.maskPattern)),
              t.toSJISFunc && r.setToSJISFunction(t.toSJISFunc)),
            (function (e, t, n, i) {
              let h;
              if (Array.isArray(e)) h = m.fromArray(e);
              else if ("string" == typeof e) {
                let r = t;
                if (!r) {
                  let t = m.rawSplit(e);
                  r = d.getBestVersionForData(t, n);
                }
                h = m.fromString(e, r || 40);
              } else throw Error("Invalid data");
              let y = d.getBestVersionForData(h, n);
              if (!y)
                throw Error(
                  "The amount of data is too big to be stored in a QR Code"
                );
              if (t) {
                if (t < y)
                  throw Error(
                    "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " +
                      y +
                      ".\n"
                  );
              } else t = y;
              let b = (function (e, t, n) {
                  let i = new o();
                  n.forEach(function (t) {
                    i.put(t.mode.bit, 4),
                      i.put(t.getLength(), p.getCharCountIndicator(t.mode, e)),
                      t.write(i);
                  });
                  let s =
                    (r.getSymbolTotalCodewords(e) -
                      l.getTotalCodewordsCount(e, t)) *
                    8;
                  for (
                    i.getLengthInBits() + 4 <= s && i.put(0, 4);
                    i.getLengthInBits() % 8 != 0;

                  )
                    i.putBit(0);
                  let a = (s - i.getLengthInBits()) / 8;
                  for (let e = 0; e < a; e++) i.put(e % 2 ? 17 : 236, 8);
                  return (function (e, t, n) {
                    let i, o;
                    let s = r.getSymbolTotalCodewords(t),
                      a = s - l.getTotalCodewordsCount(t, n),
                      c = l.getBlocksCount(t, n),
                      u = s % c,
                      d = c - u,
                      h = Math.floor(s / c),
                      p = Math.floor(a / c),
                      m = p + 1,
                      g = h - p,
                      y = new f(g),
                      b = 0,
                      w = Array(c),
                      v = Array(c),
                      A = 0,
                      E = new Uint8Array(e.buffer);
                    for (let e = 0; e < c; e++) {
                      let t = e < d ? p : m;
                      (w[e] = E.slice(b, b + t)),
                        (v[e] = y.encode(w[e])),
                        (b += t),
                        (A = Math.max(A, t));
                    }
                    let C = new Uint8Array(s),
                      x = 0;
                    for (i = 0; i < A; i++)
                      for (o = 0; o < c; o++)
                        i < w[o].length && (C[x++] = w[o][i]);
                    for (i = 0; i < g; i++)
                      for (o = 0; o < c; o++) C[x++] = v[o][i];
                    return C;
                  })(i, e, t);
                })(t, n, h),
                w = new s(r.getSymbolSize(t));
              return (
                (function (e, t) {
                  let n = e.size,
                    r = c.getPositions(t);
                  for (let t = 0; t < r.length; t++) {
                    let i = r[t][0],
                      o = r[t][1];
                    for (let t = -1; t <= 7; t++)
                      if (!(i + t <= -1) && !(n <= i + t))
                        for (let r = -1; r <= 7; r++)
                          o + r <= -1 ||
                            n <= o + r ||
                            ((t >= 0 && t <= 6 && (0 === r || 6 === r)) ||
                            (r >= 0 && r <= 6 && (0 === t || 6 === t)) ||
                            (t >= 2 && t <= 4 && r >= 2 && r <= 4)
                              ? e.set(i + t, o + r, !0, !0)
                              : e.set(i + t, o + r, !1, !0));
                  }
                })(w, t),
                (function (e) {
                  let t = e.size;
                  for (let n = 8; n < t - 8; n++) {
                    let t = n % 2 == 0;
                    e.set(n, 6, t, !0), e.set(6, n, t, !0);
                  }
                })(w),
                (function (e, t) {
                  let n = a.getPositions(t);
                  for (let t = 0; t < n.length; t++) {
                    let r = n[t][0],
                      i = n[t][1];
                    for (let t = -2; t <= 2; t++)
                      for (let n = -2; n <= 2; n++)
                        -2 === t ||
                        2 === t ||
                        -2 === n ||
                        2 === n ||
                        (0 === t && 0 === n)
                          ? e.set(r + t, i + n, !0, !0)
                          : e.set(r + t, i + n, !1, !0);
                  }
                })(w, t),
                g(w, n, 0),
                t >= 7 &&
                  (function (e, t) {
                    let n, r, i;
                    let o = e.size,
                      s = d.getEncodedBits(t);
                    for (let t = 0; t < 18; t++)
                      (n = Math.floor(t / 3)),
                        (r = (t % 3) + o - 8 - 3),
                        (i = ((s >> t) & 1) == 1),
                        e.set(n, r, i, !0),
                        e.set(r, n, i, !0);
                  })(w, t),
                (function (e, t) {
                  let n = e.size,
                    r = -1,
                    i = n - 1,
                    o = 7,
                    s = 0;
                  for (let a = n - 1; a > 0; a -= 2)
                    for (6 === a && a--; ; ) {
                      for (let n = 0; n < 2; n++)
                        if (!e.isReserved(i, a - n)) {
                          let r = !1;
                          s < t.length && (r = ((t[s] >>> o) & 1) == 1),
                            e.set(i, a - n, r),
                            -1 == --o && (s++, (o = 7));
                        }
                      if ((i += r) < 0 || n <= i) {
                        (i -= r), (r = -r);
                        break;
                      }
                    }
                })(w, b),
                isNaN(i) && (i = u.getBestMask(w, g.bind(null, w, n))),
                u.applyMask(i, w),
                g(w, n, i),
                {
                  modules: w,
                  version: t,
                  errorCorrectionLevel: n,
                  maskPattern: i,
                  segments: h,
                }
              );
            })(e, n, y, h)
          );
        };
      },
      55487: function (e, t, n) {
        let r = n(62883);
        function i(e) {
          (this.genPoly = void 0),
            (this.degree = e),
            this.degree && this.initialize(this.degree);
        }
        (i.prototype.initialize = function (e) {
          (this.degree = e),
            (this.genPoly = r.generateECPolynomial(this.degree));
        }),
          (i.prototype.encode = function (e) {
            if (!this.genPoly) throw Error("Encoder not initialized");
            let t = new Uint8Array(e.length + this.degree);
            t.set(e);
            let n = r.mod(t, this.genPoly),
              i = this.degree - n.length;
            if (i > 0) {
              let e = new Uint8Array(this.degree);
              return e.set(n, i), e;
            }
            return n;
          }),
          (e.exports = i);
      },
      55794: function (e, t) {
        let n = "[0-9]+",
          r =
            "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+",
          i =
            "(?:(?![A-Z0-9 $%*+\\-./:]|" +
            (r = r.replace(/u/g, "\\u")) +
            ")(?:.|[\r\n]))+";
        (t.KANJI = RegExp(r, "g")),
          (t.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g")),
          (t.BYTE = RegExp(i, "g")),
          (t.NUMERIC = RegExp(n, "g")),
          (t.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g"));
        let o = RegExp("^" + r + "$"),
          s = RegExp("^" + n + "$"),
          a = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
        (t.testKanji = function (e) {
          return o.test(e);
        }),
          (t.testNumeric = function (e) {
            return s.test(e);
          }),
          (t.testAlphanumeric = function (e) {
            return a.test(e);
          });
      },
      54810: function (e, t, n) {
        let r = n(42894),
          i = n(41639),
          o = n(63464),
          s = n(62917),
          a = n(71316),
          c = n(55794),
          u = n(51203),
          l = n(46946);
        function f(e) {
          return unescape(encodeURIComponent(e)).length;
        }
        function d(e, t, n) {
          let r;
          let i = [];
          for (; null !== (r = e.exec(n)); )
            i.push({
              data: r[0],
              index: r.index,
              mode: t,
              length: r[0].length,
            });
          return i;
        }
        function h(e) {
          let t, n;
          let i = d(c.NUMERIC, r.NUMERIC, e),
            o = d(c.ALPHANUMERIC, r.ALPHANUMERIC, e);
          return (
            u.isKanjiModeEnabled()
              ? ((t = d(c.BYTE, r.BYTE, e)), (n = d(c.KANJI, r.KANJI, e)))
              : ((t = d(c.BYTE_KANJI, r.BYTE, e)), (n = [])),
            i
              .concat(o, t, n)
              .sort(function (e, t) {
                return e.index - t.index;
              })
              .map(function (e) {
                return { data: e.data, mode: e.mode, length: e.length };
              })
          );
        }
        function p(e, t) {
          switch (t) {
            case r.NUMERIC:
              return i.getBitsLength(e);
            case r.ALPHANUMERIC:
              return o.getBitsLength(e);
            case r.KANJI:
              return a.getBitsLength(e);
            case r.BYTE:
              return s.getBitsLength(e);
          }
        }
        function m(e, t) {
          let n;
          let c = r.getBestModeForData(e);
          if ((n = r.from(t, c)) !== r.BYTE && n.bit < c.bit)
            throw Error(
              '"' +
                e +
                '" cannot be encoded with mode ' +
                r.toString(n) +
                ".\n Suggested mode is: " +
                r.toString(c)
            );
          switch (
            (n !== r.KANJI || u.isKanjiModeEnabled() || (n = r.BYTE), n)
          ) {
            case r.NUMERIC:
              return new i(e);
            case r.ALPHANUMERIC:
              return new o(e);
            case r.KANJI:
              return new a(e);
            case r.BYTE:
              return new s(e);
          }
        }
        (t.fromArray = function (e) {
          return e.reduce(function (e, t) {
            return (
              "string" == typeof t
                ? e.push(m(t, null))
                : t.data && e.push(m(t.data, t.mode)),
              e
            );
          }, []);
        }),
          (t.fromString = function (e, n) {
            let i = (function (e, t) {
                let n = {},
                  i = { start: {} },
                  o = ["start"];
                for (let s = 0; s < e.length; s++) {
                  let a = e[s],
                    c = [];
                  for (let e = 0; e < a.length; e++) {
                    let u = a[e],
                      l = "" + s + e;
                    c.push(l), (n[l] = { node: u, lastCount: 0 }), (i[l] = {});
                    for (let e = 0; e < o.length; e++) {
                      let s = o[e];
                      n[s] && n[s].node.mode === u.mode
                        ? ((i[s][l] =
                            p(n[s].lastCount + u.length, u.mode) -
                            p(n[s].lastCount, u.mode)),
                          (n[s].lastCount += u.length))
                        : (n[s] && (n[s].lastCount = u.length),
                          (i[s][l] =
                            p(u.length, u.mode) +
                            4 +
                            r.getCharCountIndicator(u.mode, t)));
                    }
                  }
                  o = c;
                }
                for (let e = 0; e < o.length; e++) i[o[e]].end = 0;
                return { map: i, table: n };
              })(
                (function (e) {
                  let t = [];
                  for (let n = 0; n < e.length; n++) {
                    let i = e[n];
                    switch (i.mode) {
                      case r.NUMERIC:
                        t.push([
                          i,
                          {
                            data: i.data,
                            mode: r.ALPHANUMERIC,
                            length: i.length,
                          },
                          { data: i.data, mode: r.BYTE, length: i.length },
                        ]);
                        break;
                      case r.ALPHANUMERIC:
                        t.push([
                          i,
                          { data: i.data, mode: r.BYTE, length: i.length },
                        ]);
                        break;
                      case r.KANJI:
                        t.push([
                          i,
                          { data: i.data, mode: r.BYTE, length: f(i.data) },
                        ]);
                        break;
                      case r.BYTE:
                        t.push([
                          { data: i.data, mode: r.BYTE, length: f(i.data) },
                        ]);
                    }
                  }
                  return t;
                })(h(e, u.isKanjiModeEnabled())),
                n
              ),
              o = l.find_path(i.map, "start", "end"),
              s = [];
            for (let e = 1; e < o.length - 1; e++) s.push(i.table[o[e]].node);
            return t.fromArray(
              s.reduce(function (e, t) {
                let n = e.length - 1 >= 0 ? e[e.length - 1] : null;
                return (
                  n && n.mode === t.mode
                    ? (e[e.length - 1].data += t.data)
                    : e.push(t),
                  e
                );
              }, [])
            );
          }),
          (t.rawSplit = function (e) {
            return t.fromArray(h(e, u.isKanjiModeEnabled()));
          });
      },
      51203: function (e, t) {
        let n;
        let r = [
          0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581,
          655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706,
          1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196,
          3362, 3532, 3706,
        ];
        (t.getSymbolSize = function (e) {
          if (!e) throw Error('"version" cannot be null or undefined');
          if (e < 1 || e > 40)
            throw Error('"version" should be in range from 1 to 40');
          return 4 * e + 17;
        }),
          (t.getSymbolTotalCodewords = function (e) {
            return r[e];
          }),
          (t.getBCHDigit = function (e) {
            let t = 0;
            for (; 0 !== e; ) t++, (e >>>= 1);
            return t;
          }),
          (t.setToSJISFunction = function (e) {
            if ("function" != typeof e)
              throw Error('"toSJISFunc" is not a valid function.');
            n = e;
          }),
          (t.isKanjiModeEnabled = function () {
            return void 0 !== n;
          }),
          (t.toSJIS = function (e) {
            return n(e);
          });
      },
      41678: function (e, t) {
        t.isValid = function (e) {
          return !isNaN(e) && e >= 1 && e <= 40;
        };
      },
      38496: function (e, t, n) {
        let r = n(51203),
          i = n(90534),
          o = n(20011),
          s = n(42894),
          a = n(41678),
          c = r.getBCHDigit(7973);
        function u(e, t) {
          return s.getCharCountIndicator(e, t) + 4;
        }
        (t.from = function (e, t) {
          return a.isValid(e) ? parseInt(e, 10) : t;
        }),
          (t.getCapacity = function (e, t, n) {
            if (!a.isValid(e)) throw Error("Invalid QR Code version");
            void 0 === n && (n = s.BYTE);
            let o =
              (r.getSymbolTotalCodewords(e) - i.getTotalCodewordsCount(e, t)) *
              8;
            if (n === s.MIXED) return o;
            let c = o - u(n, e);
            switch (n) {
              case s.NUMERIC:
                return Math.floor((c / 10) * 3);
              case s.ALPHANUMERIC:
                return Math.floor((c / 11) * 2);
              case s.KANJI:
                return Math.floor(c / 13);
              case s.BYTE:
              default:
                return Math.floor(c / 8);
            }
          }),
          (t.getBestVersionForData = function (e, n) {
            let r;
            let i = o.from(n, o.M);
            if (Array.isArray(e)) {
              if (e.length > 1)
                return (function (e, n) {
                  for (let r = 1; r <= 40; r++)
                    if (
                      (function (e, t) {
                        let n = 0;
                        return (
                          e.forEach(function (e) {
                            let r = u(e.mode, t);
                            n += r + e.getBitsLength();
                          }),
                          n
                        );
                      })(e, r) <= t.getCapacity(r, n, s.MIXED)
                    )
                      return r;
                })(e, i);
              if (0 === e.length) return 1;
              r = e[0];
            } else r = e;
            return (function (e, n, r) {
              for (let i = 1; i <= 40; i++)
                if (n <= t.getCapacity(i, r, e)) return i;
            })(r.mode, r.getLength(), i);
          }),
          (t.getEncodedBits = function (e) {
            if (!a.isValid(e) || e < 7) throw Error("Invalid QR Code version");
            let t = e << 12;
            for (; r.getBCHDigit(t) - c >= 0; )
              t ^= 7973 << (r.getBCHDigit(t) - c);
            return (e << 12) | t;
          });
      },
      5929: function (e, t, n) {
        let r = n(10098);
        (t.render = function (e, t, n) {
          var i;
          let o = n,
            s = t;
          void 0 !== o || (t && t.getContext) || ((o = t), (t = void 0)),
            t ||
              (s = (function () {
                try {
                  return document.createElement("canvas");
                } catch (e) {
                  throw Error("You need to specify a canvas element");
                }
              })()),
            (o = r.getOptions(o));
          let a = r.getImageWidth(e.modules.size, o),
            c = s.getContext("2d"),
            u = c.createImageData(a, a);
          return (
            r.qrToImageData(u.data, e, o),
            (i = s),
            c.clearRect(0, 0, i.width, i.height),
            i.style || (i.style = {}),
            (i.height = a),
            (i.width = a),
            (i.style.height = a + "px"),
            (i.style.width = a + "px"),
            c.putImageData(u, 0, 0),
            s
          );
        }),
          (t.renderToDataURL = function (e, n, r) {
            let i = r;
            void 0 !== i || (n && n.getContext) || ((i = n), (n = void 0)),
              i || (i = {});
            let o = t.render(e, n, i),
              s = i.type || "image/png",
              a = i.rendererOpts || {};
            return o.toDataURL(s, a.quality);
          });
      },
      90339: function (e, t, n) {
        let r = n(10098);
        function i(e, t) {
          let n = e.a / 255,
            r = t + '="' + e.hex + '"';
          return n < 1
            ? r + " " + t + '-opacity="' + n.toFixed(2).slice(1) + '"'
            : r;
        }
        function o(e, t, n) {
          let r = e + t;
          return void 0 !== n && (r += " " + n), r;
        }
        t.render = function (e, t, n) {
          let s = r.getOptions(t),
            a = e.modules.size,
            c = e.modules.data,
            u = a + 2 * s.margin,
            l = s.color.light.a
              ? "<path " +
                i(s.color.light, "fill") +
                ' d="M0 0h' +
                u +
                "v" +
                u +
                'H0z"/>'
              : "",
            f =
              "<path " +
              i(s.color.dark, "stroke") +
              ' d="' +
              (function (e, t, n) {
                let r = "",
                  i = 0,
                  s = !1,
                  a = 0;
                for (let c = 0; c < e.length; c++) {
                  let u = Math.floor(c % t),
                    l = Math.floor(c / t);
                  u || s || (s = !0),
                    e[c]
                      ? (a++,
                        (c > 0 && u > 0 && e[c - 1]) ||
                          ((r += s ? o("M", u + n, 0.5 + l + n) : o("m", i, 0)),
                          (i = 0),
                          (s = !1)),
                        (u + 1 < t && e[c + 1]) || ((r += o("h", a)), (a = 0)))
                      : i++;
                }
                return r;
              })(c, a, s.margin) +
              '"/>',
            d =
              '<svg xmlns="http://www.w3.org/2000/svg" ' +
              (s.width
                ? 'width="' + s.width + '" height="' + s.width + '" '
                : "") +
              ('viewBox="0 0 ' + u) +
              " " +
              u +
              '" shape-rendering="crispEdges">' +
              l +
              f +
              "</svg>\n";
          return "function" == typeof n && n(null, d), d;
        };
      },
      10098: function (e, t) {
        function n(e) {
          if (
            ("number" == typeof e && (e = e.toString()), "string" != typeof e)
          )
            throw Error("Color should be defined as hex string");
          let t = e.slice().replace("#", "").split("");
          if (t.length < 3 || 5 === t.length || t.length > 8)
            throw Error("Invalid hex color: " + e);
          (3 === t.length || 4 === t.length) &&
            (t = Array.prototype.concat.apply(
              [],
              t.map(function (e) {
                return [e, e];
              })
            )),
            6 === t.length && t.push("F", "F");
          let n = parseInt(t.join(""), 16);
          return {
            r: (n >> 24) & 255,
            g: (n >> 16) & 255,
            b: (n >> 8) & 255,
            a: 255 & n,
            hex: "#" + t.slice(0, 6).join(""),
          };
        }
        (t.getOptions = function (e) {
          e || (e = {}), e.color || (e.color = {});
          let t =
              void 0 === e.margin || null === e.margin || e.margin < 0
                ? 4
                : e.margin,
            r = e.width && e.width >= 21 ? e.width : void 0,
            i = e.scale || 4;
          return {
            width: r,
            scale: r ? 4 : i,
            margin: t,
            color: {
              dark: n(e.color.dark || "#000000ff"),
              light: n(e.color.light || "#ffffffff"),
            },
            type: e.type,
            rendererOpts: e.rendererOpts || {},
          };
        }),
          (t.getScale = function (e, t) {
            return t.width && t.width >= e + 2 * t.margin
              ? t.width / (e + 2 * t.margin)
              : t.scale;
          }),
          (t.getImageWidth = function (e, n) {
            let r = t.getScale(e, n);
            return Math.floor((e + 2 * n.margin) * r);
          }),
          (t.qrToImageData = function (e, n, r) {
            let i = n.modules.size,
              o = n.modules.data,
              s = t.getScale(i, r),
              a = Math.floor((i + 2 * r.margin) * s),
              c = r.margin * s,
              u = [r.color.light, r.color.dark];
            for (let t = 0; t < a; t++)
              for (let n = 0; n < a; n++) {
                let l = (t * a + n) * 4,
                  f = r.color.light;
                t >= c &&
                  n >= c &&
                  t < a - c &&
                  n < a - c &&
                  (f =
                    u[
                      o[Math.floor((t - c) / s) * i + Math.floor((n - c) / s)]
                        ? 1
                        : 0
                    ]),
                  (e[l++] = f.r),
                  (e[l++] = f.g),
                  (e[l++] = f.b),
                  (e[l] = f.a);
              }
          });
      },
      76327: function (e, t, n) {
        "use strict";
        function r(e) {
          var t = e.match(/^var\((.*)\)$/);
          return t ? t[1] : e;
        }
        function i(e, t) {
          var n = {};
          if ("object" == typeof t)
            !(function e(t, n) {
              var r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : [],
                i = {};
              for (var o in t) {
                var s = t[o],
                  a = [...r, o];
                "string" == typeof s || "number" == typeof s || null == s
                  ? (i[o] = n(s, a))
                  : "object" != typeof s || Array.isArray(s)
                  ? console.warn(
                      'Skipping invalid key "'
                        .concat(
                          a.join("."),
                          '". Should be a string, number, null or object. Received: "'
                        )
                        .concat(Array.isArray(s) ? "Array" : typeof s, '"')
                    )
                  : (i[o] = e(s, n, a));
              }
              return i;
            })(t, (t, i) => {
              null != t &&
                (n[
                  r(
                    (function (e, t) {
                      var n = e;
                      for (var r of t) {
                        if (!(r in n))
                          throw Error(
                            "Path ".concat(
                              t.join(" -> "),
                              " does not exist in object"
                            )
                          );
                        n = n[r];
                      }
                      return n;
                    })(e, i)
                  )
                ] = String(t));
            });
          else
            for (var i in e) {
              var o = e[i];
              null != o && (n[r(i)] = o);
            }
          return (
            Object.defineProperty(n, "toString", {
              value: function () {
                return Object.keys(this)
                  .map((e) => "".concat(e, ":").concat(this[e]))
                  .join(";");
              },
              writable: !1,
            }),
            n
          );
        }
        n.d(t, {
          L: function () {
            return i;
          },
        });
      },
      11344: function (e, t, n) {
        "use strict";
        function r(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function i(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? r(Object(n), !0).forEach(function (t) {
                  !(function (e, t, n) {
                    var r;
                    (t =
                      "symbol" ==
                      typeof (r = (function (e, t) {
                        if ("object" != typeof e || !e) return e;
                        var n = e[Symbol.toPrimitive];
                        if (void 0 !== n) {
                          var r = n.call(e, t || "default");
                          if ("object" != typeof r) return r;
                          throw TypeError(
                            "@@toPrimitive must return a primitive value."
                          );
                        }
                        return ("string" === t ? String : Number)(e);
                      })(t, "string"))
                        ? r
                        : String(r)) in e
                      ? Object.defineProperty(e, t, {
                          value: n,
                          enumerable: !0,
                          configurable: !0,
                          writable: !0,
                        })
                      : (e[t] = n);
                  })(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : r(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        n.d(t, {
          $: function () {
            return a;
          },
        });
        var o = (e) =>
            function () {
              for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                n[r] = arguments[r];
              var o = Object.assign({}, ...n.map((e) => e.styles)),
                s = Object.keys(o),
                a = s.filter((e) => "mappings" in o[e]);
              return Object.assign(
                (t) => {
                  var n = [],
                    r = {},
                    s = i({}, t),
                    c = !1;
                  for (var u of a) {
                    var l = t[u];
                    if (null != l)
                      for (var f of ((c = !0), o[u].mappings))
                        (r[f] = l), null == s[f] && delete s[f];
                  }
                  var d = c ? i(i({}, r), s) : t;
                  for (var h in d)
                    if (
                      (function () {
                        var e = d[h],
                          t = o[h];
                        try {
                          if (t.mappings) return 1;
                          if ("string" == typeof e || "number" == typeof e)
                            n.push(t.values[e].defaultClass);
                          else if (Array.isArray(e))
                            for (var r = 0; r < e.length; r++) {
                              var i = e[r];
                              if (null != i) {
                                var s = t.responsiveArray[r];
                                n.push(t.values[i].conditions[s]);
                              }
                            }
                          else
                            for (var a in e) {
                              var c = e[a];
                              null != c && n.push(t.values[c].conditions[a]);
                            }
                        } catch (e) {
                          throw e;
                        }
                      })()
                    )
                      continue;
                  return e(n.join(" "));
                },
                { properties: new Set(s) }
              );
            },
          s = (e) => e,
          a = function () {
            return o(s)(...arguments);
          };
      },
      96945: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return o;
          },
          M: function () {
            return i;
          },
        });
        var r = function (e, t) {
          return (
            Object.defineProperty(e, "__recipe__", { value: t, writable: !1 }),
            e
          );
        };
        function i(e) {
          var { conditions: t } = e;
          if (!t) throw Error("Styles have no conditions");
          return r(
            function (e) {
              if (
                "string" == typeof e ||
                "number" == typeof e ||
                "boolean" == typeof e
              ) {
                if (!t.defaultCondition) throw Error("No default condition");
                return { [t.defaultCondition]: e };
              }
              if (Array.isArray(e)) {
                if (!("responsiveArray" in t))
                  throw Error("Responsive arrays are not supported");
                var n = {};
                for (var r in t.responsiveArray)
                  null != e[r] && (n[t.responsiveArray[r]] = e[r]);
                return n;
              }
              return e;
            },
            {
              importPath: "@vanilla-extract/sprinkles/createUtils",
              importName: "createNormalizeValueFn",
              args: [{ conditions: e.conditions }],
            }
          );
        }
        function o(e) {
          var { conditions: t } = e;
          if (!t) throw Error("Styles have no conditions");
          var n = i(e);
          return r(
            function (e, r) {
              if (
                "string" == typeof e ||
                "number" == typeof e ||
                "boolean" == typeof e
              ) {
                if (!t.defaultCondition) throw Error("No default condition");
                return r(e, t.defaultCondition);
              }
              var i = Array.isArray(e) ? n(e) : e,
                o = {};
              for (var s in i) null != i[s] && (o[s] = r(i[s], s));
              return o;
            },
            {
              importPath: "@vanilla-extract/sprinkles/createUtils",
              importName: "createMapValueFn",
              args: [{ conditions: e.conditions }],
            }
          );
        }
      },
      59196: function (e, t) {
        "use strict";
        (t.byteLength = function (e) {
          var t = c(e),
            n = t[0],
            r = t[1];
          return ((n + r) * 3) / 4 - r;
        }),
          (t.toByteArray = function (e) {
            var t,
              n,
              o = c(e),
              s = o[0],
              a = o[1],
              u = new i(((s + a) * 3) / 4 - a),
              l = 0,
              f = a > 0 ? s - 4 : s;
            for (n = 0; n < f; n += 4)
              (t =
                (r[e.charCodeAt(n)] << 18) |
                (r[e.charCodeAt(n + 1)] << 12) |
                (r[e.charCodeAt(n + 2)] << 6) |
                r[e.charCodeAt(n + 3)]),
                (u[l++] = (t >> 16) & 255),
                (u[l++] = (t >> 8) & 255),
                (u[l++] = 255 & t);
            return (
              2 === a &&
                ((t =
                  (r[e.charCodeAt(n)] << 2) | (r[e.charCodeAt(n + 1)] >> 4)),
                (u[l++] = 255 & t)),
              1 === a &&
                ((t =
                  (r[e.charCodeAt(n)] << 10) |
                  (r[e.charCodeAt(n + 1)] << 4) |
                  (r[e.charCodeAt(n + 2)] >> 2)),
                (u[l++] = (t >> 8) & 255),
                (u[l++] = 255 & t)),
              u
            );
          }),
          (t.fromByteArray = function (e) {
            for (
              var t, r = e.length, i = r % 3, o = [], s = 0, a = r - i;
              s < a;
              s += 16383
            )
              o.push(
                (function (e, t, r) {
                  for (var i, o = [], s = t; s < r; s += 3)
                    o.push(
                      n[
                        ((i =
                          ((e[s] << 16) & 16711680) +
                          ((e[s + 1] << 8) & 65280) +
                          (255 & e[s + 2])) >>
                          18) &
                          63
                      ] +
                        n[(i >> 12) & 63] +
                        n[(i >> 6) & 63] +
                        n[63 & i]
                    );
                  return o.join("");
                })(e, s, s + 16383 > a ? a : s + 16383)
              );
            return (
              1 === i
                ? o.push(n[(t = e[r - 1]) >> 2] + n[(t << 4) & 63] + "==")
                : 2 === i &&
                  o.push(
                    n[(t = (e[r - 2] << 8) + e[r - 1]) >> 10] +
                      n[(t >> 4) & 63] +
                      n[(t << 2) & 63] +
                      "="
                  ),
              o.join("")
            );
          });
        for (
          var n = [],
            r = [],
            i = "undefined" != typeof Uint8Array ? Uint8Array : Array,
            o =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            s = 0,
            a = o.length;
          s < a;
          ++s
        )
          (n[s] = o[s]), (r[o.charCodeAt(s)] = s);
        function c(e) {
          var t = e.length;
          if (t % 4 > 0)
            throw Error("Invalid string. Length must be a multiple of 4");
          var n = e.indexOf("=");
          -1 === n && (n = t);
          var r = n === t ? 0 : 4 - (n % 4);
          return [n, r];
        }
        (r["-".charCodeAt(0)] = 62), (r["_".charCodeAt(0)] = 63);
      },
      82957: function (e, t, n) {
        "use strict";
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <https://feross.org>
         * @license  MIT
         */ let r = n(59196),
          i = n(68848),
          o =
            "function" == typeof Symbol && "function" == typeof Symbol.for
              ? Symbol.for("nodejs.util.inspect.custom")
              : null;
        function s(e) {
          if (e > 2147483647)
            throw RangeError(
              'The value "' + e + '" is invalid for option "size"'
            );
          let t = new Uint8Array(e);
          return Object.setPrototypeOf(t, a.prototype), t;
        }
        function a(e, t, n) {
          if ("number" == typeof e) {
            if ("string" == typeof t)
              throw TypeError(
                'The "string" argument must be of type string. Received type number'
              );
            return l(e);
          }
          return c(e, t, n);
        }
        function c(e, t, n) {
          if ("string" == typeof e)
            return (function (e, t) {
              if (
                (("string" != typeof t || "" === t) && (t = "utf8"),
                !a.isEncoding(t))
              )
                throw TypeError("Unknown encoding: " + t);
              let n = 0 | p(e, t),
                r = s(n),
                i = r.write(e, t);
              return i !== n && (r = r.slice(0, i)), r;
            })(e, t);
          if (ArrayBuffer.isView(e))
            return (function (e) {
              if (U(e, Uint8Array)) {
                let t = new Uint8Array(e);
                return d(t.buffer, t.byteOffset, t.byteLength);
              }
              return f(e);
            })(e);
          if (null == e)
            throw TypeError(
              "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                typeof e
            );
          if (
            U(e, ArrayBuffer) ||
            (e && U(e.buffer, ArrayBuffer)) ||
            ("undefined" != typeof SharedArrayBuffer &&
              (U(e, SharedArrayBuffer) ||
                (e && U(e.buffer, SharedArrayBuffer))))
          )
            return d(e, t, n);
          if ("number" == typeof e)
            throw TypeError(
              'The "value" argument must not be of type number. Received type number'
            );
          let r = e.valueOf && e.valueOf();
          if (null != r && r !== e) return a.from(r, t, n);
          let i = (function (e) {
            var t;
            if (a.isBuffer(e)) {
              let t = 0 | h(e.length),
                n = s(t);
              return 0 === n.length || e.copy(n, 0, 0, t), n;
            }
            return void 0 !== e.length
              ? "number" != typeof e.length || (t = e.length) != t
                ? s(0)
                : f(e)
              : "Buffer" === e.type && Array.isArray(e.data)
              ? f(e.data)
              : void 0;
          })(e);
          if (i) return i;
          if (
            "undefined" != typeof Symbol &&
            null != Symbol.toPrimitive &&
            "function" == typeof e[Symbol.toPrimitive]
          )
            return a.from(e[Symbol.toPrimitive]("string"), t, n);
          throw TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
              typeof e
          );
        }
        function u(e) {
          if ("number" != typeof e)
            throw TypeError('"size" argument must be of type number');
          if (e < 0)
            throw RangeError(
              'The value "' + e + '" is invalid for option "size"'
            );
        }
        function l(e) {
          return u(e), s(e < 0 ? 0 : 0 | h(e));
        }
        function f(e) {
          let t = e.length < 0 ? 0 : 0 | h(e.length),
            n = s(t);
          for (let r = 0; r < t; r += 1) n[r] = 255 & e[r];
          return n;
        }
        function d(e, t, n) {
          let r;
          if (t < 0 || e.byteLength < t)
            throw RangeError('"offset" is outside of buffer bounds');
          if (e.byteLength < t + (n || 0))
            throw RangeError('"length" is outside of buffer bounds');
          return (
            Object.setPrototypeOf(
              (r =
                void 0 === t && void 0 === n
                  ? new Uint8Array(e)
                  : void 0 === n
                  ? new Uint8Array(e, t)
                  : new Uint8Array(e, t, n)),
              a.prototype
            ),
            r
          );
        }
        function h(e) {
          if (e >= 2147483647)
            throw RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes"
            );
          return 0 | e;
        }
        function p(e, t) {
          if (a.isBuffer(e)) return e.length;
          if (ArrayBuffer.isView(e) || U(e, ArrayBuffer)) return e.byteLength;
          if ("string" != typeof e)
            throw TypeError(
              'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                typeof e
            );
          let n = e.length,
            r = arguments.length > 2 && !0 === arguments[2];
          if (!r && 0 === n) return 0;
          let i = !1;
          for (;;)
            switch (t) {
              case "ascii":
              case "latin1":
              case "binary":
                return n;
              case "utf8":
              case "utf-8":
                return M(e).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * n;
              case "hex":
                return n >>> 1;
              case "base64":
                return L(e).length;
              default:
                if (i) return r ? -1 : M(e).length;
                (t = ("" + t).toLowerCase()), (i = !0);
            }
        }
        function m(e, t, n) {
          let i = !1;
          if (
            ((void 0 === t || t < 0) && (t = 0),
            t > this.length ||
              ((void 0 === n || n > this.length) && (n = this.length),
              n <= 0 || (n >>>= 0) <= (t >>>= 0)))
          )
            return "";
          for (e || (e = "utf8"); ; )
            switch (e) {
              case "hex":
                return (function (e, t, n) {
                  let r = e.length;
                  (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
                  let i = "";
                  for (let r = t; r < n; ++r) i += D[e[r]];
                  return i;
                })(this, t, n);
              case "utf8":
              case "utf-8":
                return w(this, t, n);
              case "ascii":
                return (function (e, t, n) {
                  let r = "";
                  n = Math.min(e.length, n);
                  for (let i = t; i < n; ++i)
                    r += String.fromCharCode(127 & e[i]);
                  return r;
                })(this, t, n);
              case "latin1":
              case "binary":
                return (function (e, t, n) {
                  let r = "";
                  n = Math.min(e.length, n);
                  for (let i = t; i < n; ++i) r += String.fromCharCode(e[i]);
                  return r;
                })(this, t, n);
              case "base64":
                var o, s;
                return (
                  (o = t),
                  (s = n),
                  0 === o && s === this.length
                    ? r.fromByteArray(this)
                    : r.fromByteArray(this.slice(o, s))
                );
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return (function (e, t, n) {
                  let r = e.slice(t, n),
                    i = "";
                  for (let e = 0; e < r.length - 1; e += 2)
                    i += String.fromCharCode(r[e] + 256 * r[e + 1]);
                  return i;
                })(this, t, n);
              default:
                if (i) throw TypeError("Unknown encoding: " + e);
                (e = (e + "").toLowerCase()), (i = !0);
            }
        }
        function g(e, t, n) {
          let r = e[t];
          (e[t] = e[n]), (e[n] = r);
        }
        function y(e, t, n, r, i) {
          var o;
          if (0 === e.length) return -1;
          if (
            ("string" == typeof n
              ? ((r = n), (n = 0))
              : n > 2147483647
              ? (n = 2147483647)
              : n < -2147483648 && (n = -2147483648),
            (o = n = +n) != o && (n = i ? 0 : e.length - 1),
            n < 0 && (n = e.length + n),
            n >= e.length)
          ) {
            if (i) return -1;
            n = e.length - 1;
          } else if (n < 0) {
            if (!i) return -1;
            n = 0;
          }
          if (("string" == typeof t && (t = a.from(t, r)), a.isBuffer(t)))
            return 0 === t.length ? -1 : b(e, t, n, r, i);
          if ("number" == typeof t)
            return ((t &= 255),
            "function" == typeof Uint8Array.prototype.indexOf)
              ? i
                ? Uint8Array.prototype.indexOf.call(e, t, n)
                : Uint8Array.prototype.lastIndexOf.call(e, t, n)
              : b(e, [t], n, r, i);
          throw TypeError("val must be string, number or Buffer");
        }
        function b(e, t, n, r, i) {
          let o,
            s = 1,
            a = e.length,
            c = t.length;
          if (
            void 0 !== r &&
            ("ucs2" === (r = String(r).toLowerCase()) ||
              "ucs-2" === r ||
              "utf16le" === r ||
              "utf-16le" === r)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (s = 2), (a /= 2), (c /= 2), (n /= 2);
          }
          function u(e, t) {
            return 1 === s ? e[t] : e.readUInt16BE(t * s);
          }
          if (i) {
            let r = -1;
            for (o = n; o < a; o++)
              if (u(e, o) === u(t, -1 === r ? 0 : o - r)) {
                if ((-1 === r && (r = o), o - r + 1 === c)) return r * s;
              } else -1 !== r && (o -= o - r), (r = -1);
          } else
            for (n + c > a && (n = a - c), o = n; o >= 0; o--) {
              let n = !0;
              for (let r = 0; r < c; r++)
                if (u(e, o + r) !== u(t, r)) {
                  n = !1;
                  break;
                }
              if (n) return o;
            }
          return -1;
        }
        function w(e, t, n) {
          n = Math.min(e.length, n);
          let r = [],
            i = t;
          for (; i < n; ) {
            let t = e[i],
              o = null,
              s = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
            if (i + s <= n) {
              let n, r, a, c;
              switch (s) {
                case 1:
                  t < 128 && (o = t);
                  break;
                case 2:
                  (192 & (n = e[i + 1])) == 128 &&
                    (c = ((31 & t) << 6) | (63 & n)) > 127 &&
                    (o = c);
                  break;
                case 3:
                  (n = e[i + 1]),
                    (r = e[i + 2]),
                    (192 & n) == 128 &&
                      (192 & r) == 128 &&
                      (c = ((15 & t) << 12) | ((63 & n) << 6) | (63 & r)) >
                        2047 &&
                      (c < 55296 || c > 57343) &&
                      (o = c);
                  break;
                case 4:
                  (n = e[i + 1]),
                    (r = e[i + 2]),
                    (a = e[i + 3]),
                    (192 & n) == 128 &&
                      (192 & r) == 128 &&
                      (192 & a) == 128 &&
                      (c =
                        ((15 & t) << 18) |
                        ((63 & n) << 12) |
                        ((63 & r) << 6) |
                        (63 & a)) > 65535 &&
                      c < 1114112 &&
                      (o = c);
              }
            }
            null === o
              ? ((o = 65533), (s = 1))
              : o > 65535 &&
                ((o -= 65536),
                r.push(((o >>> 10) & 1023) | 55296),
                (o = 56320 | (1023 & o))),
              r.push(o),
              (i += s);
          }
          return (function (e) {
            let t = e.length;
            if (t <= 4096) return String.fromCharCode.apply(String, e);
            let n = "",
              r = 0;
            for (; r < t; )
              n += String.fromCharCode.apply(String, e.slice(r, (r += 4096)));
            return n;
          })(r);
        }
        function v(e, t, n) {
          if (e % 1 != 0 || e < 0) throw RangeError("offset is not uint");
          if (e + t > n)
            throw RangeError("Trying to access beyond buffer length");
        }
        function A(e, t, n, r, i, o) {
          if (!a.isBuffer(e))
            throw TypeError('"buffer" argument must be a Buffer instance');
          if (t > i || t < o)
            throw RangeError('"value" argument is out of bounds');
          if (n + r > e.length) throw RangeError("Index out of range");
        }
        function E(e, t, n, r, i) {
          O(t, r, i, e, n, 7);
          let o = Number(t & BigInt(4294967295));
          (e[n++] = o),
            (o >>= 8),
            (e[n++] = o),
            (o >>= 8),
            (e[n++] = o),
            (o >>= 8),
            (e[n++] = o);
          let s = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (
            (e[n++] = s),
            (s >>= 8),
            (e[n++] = s),
            (s >>= 8),
            (e[n++] = s),
            (s >>= 8),
            (e[n++] = s),
            n
          );
        }
        function C(e, t, n, r, i) {
          O(t, r, i, e, n, 7);
          let o = Number(t & BigInt(4294967295));
          (e[n + 7] = o),
            (o >>= 8),
            (e[n + 6] = o),
            (o >>= 8),
            (e[n + 5] = o),
            (o >>= 8),
            (e[n + 4] = o);
          let s = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (
            (e[n + 3] = s),
            (s >>= 8),
            (e[n + 2] = s),
            (s >>= 8),
            (e[n + 1] = s),
            (s >>= 8),
            (e[n] = s),
            n + 8
          );
        }
        function x(e, t, n, r, i, o) {
          if (n + r > e.length || n < 0) throw RangeError("Index out of range");
        }
        function B(e, t, n, r, o) {
          return (
            (t = +t),
            (n >>>= 0),
            o || x(e, t, n, 4, 34028234663852886e22, -34028234663852886e22),
            i.write(e, t, n, r, 23, 4),
            n + 4
          );
        }
        function I(e, t, n, r, o) {
          return (
            (t = +t),
            (n >>>= 0),
            o || x(e, t, n, 8, 17976931348623157e292, -17976931348623157e292),
            i.write(e, t, n, r, 52, 8),
            n + 8
          );
        }
        (t.lW = a),
          (t.h2 = 50),
          (a.TYPED_ARRAY_SUPPORT = (function () {
            try {
              let e = new Uint8Array(1),
                t = {
                  foo: function () {
                    return 42;
                  },
                };
              return (
                Object.setPrototypeOf(t, Uint8Array.prototype),
                Object.setPrototypeOf(e, t),
                42 === e.foo()
              );
            } catch (e) {
              return !1;
            }
          })()),
          a.TYPED_ARRAY_SUPPORT ||
            "undefined" == typeof console ||
            "function" != typeof console.error ||
            console.error(
              "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
            ),
          Object.defineProperty(a.prototype, "parent", {
            enumerable: !0,
            get: function () {
              if (a.isBuffer(this)) return this.buffer;
            },
          }),
          Object.defineProperty(a.prototype, "offset", {
            enumerable: !0,
            get: function () {
              if (a.isBuffer(this)) return this.byteOffset;
            },
          }),
          (a.poolSize = 8192),
          (a.from = function (e, t, n) {
            return c(e, t, n);
          }),
          Object.setPrototypeOf(a.prototype, Uint8Array.prototype),
          Object.setPrototypeOf(a, Uint8Array),
          (a.alloc = function (e, t, n) {
            return (u(e), e <= 0)
              ? s(e)
              : void 0 !== t
              ? "string" == typeof n
                ? s(e).fill(t, n)
                : s(e).fill(t)
              : s(e);
          }),
          (a.allocUnsafe = function (e) {
            return l(e);
          }),
          (a.allocUnsafeSlow = function (e) {
            return l(e);
          }),
          (a.isBuffer = function (e) {
            return null != e && !0 === e._isBuffer && e !== a.prototype;
          }),
          (a.compare = function (e, t) {
            if (
              (U(e, Uint8Array) && (e = a.from(e, e.offset, e.byteLength)),
              U(t, Uint8Array) && (t = a.from(t, t.offset, t.byteLength)),
              !a.isBuffer(e) || !a.isBuffer(t))
            )
              throw TypeError(
                'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
              );
            if (e === t) return 0;
            let n = e.length,
              r = t.length;
            for (let i = 0, o = Math.min(n, r); i < o; ++i)
              if (e[i] !== t[i]) {
                (n = e[i]), (r = t[i]);
                break;
              }
            return n < r ? -1 : r < n ? 1 : 0;
          }),
          (a.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (a.concat = function (e, t) {
            let n;
            if (!Array.isArray(e))
              throw TypeError('"list" argument must be an Array of Buffers');
            if (0 === e.length) return a.alloc(0);
            if (void 0 === t)
              for (n = 0, t = 0; n < e.length; ++n) t += e[n].length;
            let r = a.allocUnsafe(t),
              i = 0;
            for (n = 0; n < e.length; ++n) {
              let t = e[n];
              if (U(t, Uint8Array))
                i + t.length > r.length
                  ? (a.isBuffer(t) || (t = a.from(t)), t.copy(r, i))
                  : Uint8Array.prototype.set.call(r, t, i);
              else if (a.isBuffer(t)) t.copy(r, i);
              else
                throw TypeError('"list" argument must be an Array of Buffers');
              i += t.length;
            }
            return r;
          }),
          (a.byteLength = p),
          (a.prototype._isBuffer = !0),
          (a.prototype.swap16 = function () {
            let e = this.length;
            if (e % 2 != 0)
              throw RangeError("Buffer size must be a multiple of 16-bits");
            for (let t = 0; t < e; t += 2) g(this, t, t + 1);
            return this;
          }),
          (a.prototype.swap32 = function () {
            let e = this.length;
            if (e % 4 != 0)
              throw RangeError("Buffer size must be a multiple of 32-bits");
            for (let t = 0; t < e; t += 4)
              g(this, t, t + 3), g(this, t + 1, t + 2);
            return this;
          }),
          (a.prototype.swap64 = function () {
            let e = this.length;
            if (e % 8 != 0)
              throw RangeError("Buffer size must be a multiple of 64-bits");
            for (let t = 0; t < e; t += 8)
              g(this, t, t + 7),
                g(this, t + 1, t + 6),
                g(this, t + 2, t + 5),
                g(this, t + 3, t + 4);
            return this;
          }),
          (a.prototype.toString = function () {
            let e = this.length;
            return 0 === e
              ? ""
              : 0 == arguments.length
              ? w(this, 0, e)
              : m.apply(this, arguments);
          }),
          (a.prototype.toLocaleString = a.prototype.toString),
          (a.prototype.equals = function (e) {
            if (!a.isBuffer(e)) throw TypeError("Argument must be a Buffer");
            return this === e || 0 === a.compare(this, e);
          }),
          (a.prototype.inspect = function () {
            let e = "",
              n = t.h2;
            return (
              (e = this.toString("hex", 0, n)
                .replace(/(.{2})/g, "$1 ")
                .trim()),
              this.length > n && (e += " ... "),
              "<Buffer " + e + ">"
            );
          }),
          o && (a.prototype[o] = a.prototype.inspect),
          (a.prototype.compare = function (e, t, n, r, i) {
            if (
              (U(e, Uint8Array) && (e = a.from(e, e.offset, e.byteLength)),
              !a.isBuffer(e))
            )
              throw TypeError(
                'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                  typeof e
              );
            if (
              (void 0 === t && (t = 0),
              void 0 === n && (n = e ? e.length : 0),
              void 0 === r && (r = 0),
              void 0 === i && (i = this.length),
              t < 0 || n > e.length || r < 0 || i > this.length)
            )
              throw RangeError("out of range index");
            if (r >= i && t >= n) return 0;
            if (r >= i) return -1;
            if (t >= n) return 1;
            if (((t >>>= 0), (n >>>= 0), (r >>>= 0), (i >>>= 0), this === e))
              return 0;
            let o = i - r,
              s = n - t,
              c = Math.min(o, s),
              u = this.slice(r, i),
              l = e.slice(t, n);
            for (let e = 0; e < c; ++e)
              if (u[e] !== l[e]) {
                (o = u[e]), (s = l[e]);
                break;
              }
            return o < s ? -1 : s < o ? 1 : 0;
          }),
          (a.prototype.includes = function (e, t, n) {
            return -1 !== this.indexOf(e, t, n);
          }),
          (a.prototype.indexOf = function (e, t, n) {
            return y(this, e, t, n, !0);
          }),
          (a.prototype.lastIndexOf = function (e, t, n) {
            return y(this, e, t, n, !1);
          }),
          (a.prototype.write = function (e, t, n, r) {
            var i, o, s, a, c, u, l, f;
            if (void 0 === t) (r = "utf8"), (n = this.length), (t = 0);
            else if (void 0 === n && "string" == typeof t)
              (r = t), (n = this.length), (t = 0);
            else if (isFinite(t))
              (t >>>= 0),
                isFinite(n)
                  ? ((n >>>= 0), void 0 === r && (r = "utf8"))
                  : ((r = n), (n = void 0));
            else
              throw Error(
                "Buffer.write(string, encoding, offset[, length]) is no longer supported"
              );
            let d = this.length - t;
            if (
              ((void 0 === n || n > d) && (n = d),
              (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
            )
              throw RangeError("Attempt to write outside buffer bounds");
            r || (r = "utf8");
            let h = !1;
            for (;;)
              switch (r) {
                case "hex":
                  return (function (e, t, n, r) {
                    let i;
                    n = Number(n) || 0;
                    let o = e.length - n;
                    r ? (r = Number(r)) > o && (r = o) : (r = o);
                    let s = t.length;
                    for (r > s / 2 && (r = s / 2), i = 0; i < r; ++i) {
                      let r = parseInt(t.substr(2 * i, 2), 16);
                      if (r != r) break;
                      e[n + i] = r;
                    }
                    return i;
                  })(this, e, t, n);
                case "utf8":
                case "utf-8":
                  return (i = t), (o = n), F(M(e, this.length - i), this, i, o);
                case "ascii":
                case "latin1":
                case "binary":
                  return (
                    (s = t),
                    (a = n),
                    F(
                      (function (e) {
                        let t = [];
                        for (let n = 0; n < e.length; ++n)
                          t.push(255 & e.charCodeAt(n));
                        return t;
                      })(e),
                      this,
                      s,
                      a
                    )
                  );
                case "base64":
                  return (c = t), (u = n), F(L(e), this, c, u);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return (
                    (l = t),
                    (f = n),
                    F(
                      (function (e, t) {
                        let n, r;
                        let i = [];
                        for (let o = 0; o < e.length && !((t -= 2) < 0); ++o)
                          (r = (n = e.charCodeAt(o)) >> 8),
                            i.push(n % 256),
                            i.push(r);
                        return i;
                      })(e, this.length - l),
                      this,
                      l,
                      f
                    )
                  );
                default:
                  if (h) throw TypeError("Unknown encoding: " + r);
                  (r = ("" + r).toLowerCase()), (h = !0);
              }
          }),
          (a.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          }),
          (a.prototype.slice = function (e, t) {
            let n = this.length;
            (e = ~~e),
              (t = void 0 === t ? n : ~~t),
              e < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n),
              t < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n),
              t < e && (t = e);
            let r = this.subarray(e, t);
            return Object.setPrototypeOf(r, a.prototype), r;
          }),
          (a.prototype.readUintLE = a.prototype.readUIntLE =
            function (e, t, n) {
              (e >>>= 0), (t >>>= 0), n || v(e, t, this.length);
              let r = this[e],
                i = 1,
                o = 0;
              for (; ++o < t && (i *= 256); ) r += this[e + o] * i;
              return r;
            }),
          (a.prototype.readUintBE = a.prototype.readUIntBE =
            function (e, t, n) {
              (e >>>= 0), (t >>>= 0), n || v(e, t, this.length);
              let r = this[e + --t],
                i = 1;
              for (; t > 0 && (i *= 256); ) r += this[e + --t] * i;
              return r;
            }),
          (a.prototype.readUint8 = a.prototype.readUInt8 =
            function (e, t) {
              return (e >>>= 0), t || v(e, 1, this.length), this[e];
            }),
          (a.prototype.readUint16LE = a.prototype.readUInt16LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || v(e, 2, this.length),
                this[e] | (this[e + 1] << 8)
              );
            }),
          (a.prototype.readUint16BE = a.prototype.readUInt16BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || v(e, 2, this.length),
                (this[e] << 8) | this[e + 1]
              );
            }),
          (a.prototype.readUint32LE = a.prototype.readUInt32LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || v(e, 4, this.length),
                (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                  16777216 * this[e + 3]
              );
            }),
          (a.prototype.readUint32BE = a.prototype.readUInt32BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || v(e, 4, this.length),
                16777216 * this[e] +
                  ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
              );
            }),
          (a.prototype.readBigUInt64LE = _(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            (void 0 === t || void 0 === n) && R(e, this.length - 8);
            let r =
                t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e],
              i =
                this[++e] + 256 * this[++e] + 65536 * this[++e] + 16777216 * n;
            return BigInt(r) + (BigInt(i) << BigInt(32));
          })),
          (a.prototype.readBigUInt64BE = _(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            (void 0 === t || void 0 === n) && R(e, this.length - 8);
            let r =
                16777216 * t + 65536 * this[++e] + 256 * this[++e] + this[++e],
              i =
                16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + n;
            return (BigInt(r) << BigInt(32)) + BigInt(i);
          })),
          (a.prototype.readIntLE = function (e, t, n) {
            (e >>>= 0), (t >>>= 0), n || v(e, t, this.length);
            let r = this[e],
              i = 1,
              o = 0;
            for (; ++o < t && (i *= 256); ) r += this[e + o] * i;
            return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
          }),
          (a.prototype.readIntBE = function (e, t, n) {
            (e >>>= 0), (t >>>= 0), n || v(e, t, this.length);
            let r = t,
              i = 1,
              o = this[e + --r];
            for (; r > 0 && (i *= 256); ) o += this[e + --r] * i;
            return o >= (i *= 128) && (o -= Math.pow(2, 8 * t)), o;
          }),
          (a.prototype.readInt8 = function (e, t) {
            return ((e >>>= 0), t || v(e, 1, this.length), 128 & this[e])
              ? -((255 - this[e] + 1) * 1)
              : this[e];
          }),
          (a.prototype.readInt16LE = function (e, t) {
            (e >>>= 0), t || v(e, 2, this.length);
            let n = this[e] | (this[e + 1] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (a.prototype.readInt16BE = function (e, t) {
            (e >>>= 0), t || v(e, 2, this.length);
            let n = this[e + 1] | (this[e] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (a.prototype.readInt32LE = function (e, t) {
            return (
              (e >>>= 0),
              t || v(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (a.prototype.readInt32BE = function (e, t) {
            return (
              (e >>>= 0),
              t || v(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (a.prototype.readBigInt64LE = _(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            return (
              (void 0 === t || void 0 === n) && R(e, this.length - 8),
              (BigInt(
                this[e + 4] +
                  256 * this[e + 5] +
                  65536 * this[e + 6] +
                  (n << 24)
              ) <<
                BigInt(32)) +
                BigInt(
                  t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e]
                )
            );
          })),
          (a.prototype.readBigInt64BE = _(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            return (
              (void 0 === t || void 0 === n) && R(e, this.length - 8),
              (BigInt(
                (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e]
              ) <<
                BigInt(32)) +
                BigInt(
                  16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + n
                )
            );
          })),
          (a.prototype.readFloatLE = function (e, t) {
            return (
              (e >>>= 0), t || v(e, 4, this.length), i.read(this, e, !0, 23, 4)
            );
          }),
          (a.prototype.readFloatBE = function (e, t) {
            return (
              (e >>>= 0), t || v(e, 4, this.length), i.read(this, e, !1, 23, 4)
            );
          }),
          (a.prototype.readDoubleLE = function (e, t) {
            return (
              (e >>>= 0), t || v(e, 8, this.length), i.read(this, e, !0, 52, 8)
            );
          }),
          (a.prototype.readDoubleBE = function (e, t) {
            return (
              (e >>>= 0), t || v(e, 8, this.length), i.read(this, e, !1, 52, 8)
            );
          }),
          (a.prototype.writeUintLE = a.prototype.writeUIntLE =
            function (e, t, n, r) {
              if (((e = +e), (t >>>= 0), (n >>>= 0), !r)) {
                let r = Math.pow(2, 8 * n) - 1;
                A(this, e, t, n, r, 0);
              }
              let i = 1,
                o = 0;
              for (this[t] = 255 & e; ++o < n && (i *= 256); )
                this[t + o] = (e / i) & 255;
              return t + n;
            }),
          (a.prototype.writeUintBE = a.prototype.writeUIntBE =
            function (e, t, n, r) {
              if (((e = +e), (t >>>= 0), (n >>>= 0), !r)) {
                let r = Math.pow(2, 8 * n) - 1;
                A(this, e, t, n, r, 0);
              }
              let i = n - 1,
                o = 1;
              for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); )
                this[t + i] = (e / o) & 255;
              return t + n;
            }),
          (a.prototype.writeUint8 = a.prototype.writeUInt8 =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || A(this, e, t, 1, 255, 0),
                (this[t] = 255 & e),
                t + 1
              );
            }),
          (a.prototype.writeUint16LE = a.prototype.writeUInt16LE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || A(this, e, t, 2, 65535, 0),
                (this[t] = 255 & e),
                (this[t + 1] = e >>> 8),
                t + 2
              );
            }),
          (a.prototype.writeUint16BE = a.prototype.writeUInt16BE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || A(this, e, t, 2, 65535, 0),
                (this[t] = e >>> 8),
                (this[t + 1] = 255 & e),
                t + 2
              );
            }),
          (a.prototype.writeUint32LE = a.prototype.writeUInt32LE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || A(this, e, t, 4, 4294967295, 0),
                (this[t + 3] = e >>> 24),
                (this[t + 2] = e >>> 16),
                (this[t + 1] = e >>> 8),
                (this[t] = 255 & e),
                t + 4
              );
            }),
          (a.prototype.writeUint32BE = a.prototype.writeUInt32BE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || A(this, e, t, 4, 4294967295, 0),
                (this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e),
                t + 4
              );
            }),
          (a.prototype.writeBigUInt64LE = _(function (e, t = 0) {
            return E(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
          })),
          (a.prototype.writeBigUInt64BE = _(function (e, t = 0) {
            return C(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
          })),
          (a.prototype.writeIntLE = function (e, t, n, r) {
            if (((e = +e), (t >>>= 0), !r)) {
              let r = Math.pow(2, 8 * n - 1);
              A(this, e, t, n, r - 1, -r);
            }
            let i = 0,
              o = 1,
              s = 0;
            for (this[t] = 255 & e; ++i < n && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + i - 1] && (s = 1),
                (this[t + i] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (a.prototype.writeIntBE = function (e, t, n, r) {
            if (((e = +e), (t >>>= 0), !r)) {
              let r = Math.pow(2, 8 * n - 1);
              A(this, e, t, n, r - 1, -r);
            }
            let i = n - 1,
              o = 1,
              s = 0;
            for (this[t + i] = 255 & e; --i >= 0 && (o *= 256); )
              e < 0 && 0 === s && 0 !== this[t + i + 1] && (s = 1),
                (this[t + i] = (((e / o) >> 0) - s) & 255);
            return t + n;
          }),
          (a.prototype.writeInt8 = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || A(this, e, t, 1, 127, -128),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (a.prototype.writeInt16LE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || A(this, e, t, 2, 32767, -32768),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              t + 2
            );
          }),
          (a.prototype.writeInt16BE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || A(this, e, t, 2, 32767, -32768),
              (this[t] = e >>> 8),
              (this[t + 1] = 255 & e),
              t + 2
            );
          }),
          (a.prototype.writeInt32LE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || A(this, e, t, 4, 2147483647, -2147483648),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              (this[t + 2] = e >>> 16),
              (this[t + 3] = e >>> 24),
              t + 4
            );
          }),
          (a.prototype.writeInt32BE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || A(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              (this[t] = e >>> 24),
              (this[t + 1] = e >>> 16),
              (this[t + 2] = e >>> 8),
              (this[t + 3] = 255 & e),
              t + 4
            );
          }),
          (a.prototype.writeBigInt64LE = _(function (e, t = 0) {
            return E(
              this,
              e,
              t,
              -BigInt("0x8000000000000000"),
              BigInt("0x7fffffffffffffff")
            );
          })),
          (a.prototype.writeBigInt64BE = _(function (e, t = 0) {
            return C(
              this,
              e,
              t,
              -BigInt("0x8000000000000000"),
              BigInt("0x7fffffffffffffff")
            );
          })),
          (a.prototype.writeFloatLE = function (e, t, n) {
            return B(this, e, t, !0, n);
          }),
          (a.prototype.writeFloatBE = function (e, t, n) {
            return B(this, e, t, !1, n);
          }),
          (a.prototype.writeDoubleLE = function (e, t, n) {
            return I(this, e, t, !0, n);
          }),
          (a.prototype.writeDoubleBE = function (e, t, n) {
            return I(this, e, t, !1, n);
          }),
          (a.prototype.copy = function (e, t, n, r) {
            if (!a.isBuffer(e)) throw TypeError("argument should be a Buffer");
            if (
              (n || (n = 0),
              r || 0 === r || (r = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              r > 0 && r < n && (r = n),
              r === n || 0 === e.length || 0 === this.length)
            )
              return 0;
            if (t < 0) throw RangeError("targetStart out of bounds");
            if (n < 0 || n >= this.length)
              throw RangeError("Index out of range");
            if (r < 0) throw RangeError("sourceEnd out of bounds");
            r > this.length && (r = this.length),
              e.length - t < r - n && (r = e.length - t + n);
            let i = r - n;
            return (
              this === e && "function" == typeof Uint8Array.prototype.copyWithin
                ? this.copyWithin(t, n, r)
                : Uint8Array.prototype.set.call(e, this.subarray(n, r), t),
              i
            );
          }),
          (a.prototype.fill = function (e, t, n, r) {
            let i;
            if ("string" == typeof e) {
              if (
                ("string" == typeof t
                  ? ((r = t), (t = 0), (n = this.length))
                  : "string" == typeof n && ((r = n), (n = this.length)),
                void 0 !== r && "string" != typeof r)
              )
                throw TypeError("encoding must be a string");
              if ("string" == typeof r && !a.isEncoding(r))
                throw TypeError("Unknown encoding: " + r);
              if (1 === e.length) {
                let t = e.charCodeAt(0);
                (("utf8" === r && t < 128) || "latin1" === r) && (e = t);
              }
            } else
              "number" == typeof e
                ? (e &= 255)
                : "boolean" == typeof e && (e = Number(e));
            if (t < 0 || this.length < t || this.length < n)
              throw RangeError("Out of range index");
            if (n <= t) return this;
            if (
              ((t >>>= 0),
              (n = void 0 === n ? this.length : n >>> 0),
              e || (e = 0),
              "number" == typeof e)
            )
              for (i = t; i < n; ++i) this[i] = e;
            else {
              let o = a.isBuffer(e) ? e : a.from(e, r),
                s = o.length;
              if (0 === s)
                throw TypeError(
                  'The value "' + e + '" is invalid for argument "value"'
                );
              for (i = 0; i < n - t; ++i) this[i + t] = o[i % s];
            }
            return this;
          });
        let S = {};
        function P(e, t, n) {
          S[e] = class extends n {
            constructor() {
              super(),
                Object.defineProperty(this, "message", {
                  value: t.apply(this, arguments),
                  writable: !0,
                  configurable: !0,
                }),
                (this.name = `${this.name} [${e}]`),
                this.stack,
                delete this.name;
            }
            get code() {
              return e;
            }
            set code(e) {
              Object.defineProperty(this, "code", {
                configurable: !0,
                enumerable: !0,
                value: e,
                writable: !0,
              });
            }
            toString() {
              return `${this.name} [${e}]: ${this.message}`;
            }
          };
        }
        function T(e) {
          let t = "",
            n = e.length,
            r = "-" === e[0] ? 1 : 0;
          for (; n >= r + 4; n -= 3) t = `_${e.slice(n - 3, n)}${t}`;
          return `${e.slice(0, n)}${t}`;
        }
        function O(e, t, n, r, i, o) {
          if (e > n || e < t) {
            let r;
            let i = "bigint" == typeof t ? "n" : "";
            throw (
              ((r =
                o > 3
                  ? 0 === t || t === BigInt(0)
                    ? `>= 0${i} and < 2${i} ** ${(o + 1) * 8}${i}`
                    : `>= -(2${i} ** ${(o + 1) * 8 - 1}${i}) and < 2 ** ${
                        (o + 1) * 8 - 1
                      }${i}`
                  : `>= ${t}${i} and <= ${n}${i}`),
              new S.ERR_OUT_OF_RANGE("value", r, e))
            );
          }
          k(i, "offset"),
            (void 0 === r[i] || void 0 === r[i + o]) &&
              R(i, r.length - (o + 1));
        }
        function k(e, t) {
          if ("number" != typeof e)
            throw new S.ERR_INVALID_ARG_TYPE(t, "number", e);
        }
        function R(e, t, n) {
          if (Math.floor(e) !== e)
            throw (
              (k(e, n), new S.ERR_OUT_OF_RANGE(n || "offset", "an integer", e))
            );
          if (t < 0) throw new S.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new S.ERR_OUT_OF_RANGE(
            n || "offset",
            `>= ${n ? 1 : 0} and <= ${t}`,
            e
          );
        }
        P(
          "ERR_BUFFER_OUT_OF_BOUNDS",
          function (e) {
            return e
              ? `${e} is outside of buffer bounds`
              : "Attempt to access memory outside buffer bounds";
          },
          RangeError
        ),
          P(
            "ERR_INVALID_ARG_TYPE",
            function (e, t) {
              return `The "${e}" argument must be of type number. Received type ${typeof t}`;
            },
            TypeError
          ),
          P(
            "ERR_OUT_OF_RANGE",
            function (e, t, n) {
              let r = `The value of "${e}" is out of range.`,
                i = n;
              return (
                Number.isInteger(n) && Math.abs(n) > 4294967296
                  ? (i = T(String(n)))
                  : "bigint" == typeof n &&
                    ((i = String(n)),
                    (n > BigInt(2) ** BigInt(32) ||
                      n < -(BigInt(2) ** BigInt(32))) &&
                      (i = T(i)),
                    (i += "n")),
                (r += ` It must be ${t}. Received ${i}`)
              );
            },
            RangeError
          );
        let N = /[^+/0-9A-Za-z-_]/g;
        function M(e, t) {
          let n;
          t = t || 1 / 0;
          let r = e.length,
            i = null,
            o = [];
          for (let s = 0; s < r; ++s) {
            if ((n = e.charCodeAt(s)) > 55295 && n < 57344) {
              if (!i) {
                if (n > 56319 || s + 1 === r) {
                  (t -= 3) > -1 && o.push(239, 191, 189);
                  continue;
                }
                i = n;
                continue;
              }
              if (n < 56320) {
                (t -= 3) > -1 && o.push(239, 191, 189), (i = n);
                continue;
              }
              n = (((i - 55296) << 10) | (n - 56320)) + 65536;
            } else i && (t -= 3) > -1 && o.push(239, 191, 189);
            if (((i = null), n < 128)) {
              if ((t -= 1) < 0) break;
              o.push(n);
            } else if (n < 2048) {
              if ((t -= 2) < 0) break;
              o.push((n >> 6) | 192, (63 & n) | 128);
            } else if (n < 65536) {
              if ((t -= 3) < 0) break;
              o.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
            } else if (n < 1114112) {
              if ((t -= 4) < 0) break;
              o.push(
                (n >> 18) | 240,
                ((n >> 12) & 63) | 128,
                ((n >> 6) & 63) | 128,
                (63 & n) | 128
              );
            } else throw Error("Invalid code point");
          }
          return o;
        }
        function L(e) {
          return r.toByteArray(
            (function (e) {
              if ((e = (e = e.split("=")[0]).trim().replace(N, "")).length < 2)
                return "";
              for (; e.length % 4 != 0; ) e += "=";
              return e;
            })(e)
          );
        }
        function F(e, t, n, r) {
          let i;
          for (i = 0; i < r && !(i + n >= t.length) && !(i >= e.length); ++i)
            t[i + n] = e[i];
          return i;
        }
        function U(e, t) {
          return (
            e instanceof t ||
            (null != e &&
              null != e.constructor &&
              null != e.constructor.name &&
              e.constructor.name === t.name)
          );
        }
        let D = (function () {
          let e = "0123456789abcdef",
            t = Array(256);
          for (let n = 0; n < 16; ++n) {
            let r = 16 * n;
            for (let i = 0; i < 16; ++i) t[r + i] = e[n] + e[i];
          }
          return t;
        })();
        function _(e) {
          return "undefined" == typeof BigInt ? j : e;
        }
        function j() {
          throw Error("BigInt not supported");
        }
      },
      46946: function (e) {
        "use strict";
        var t = {
          single_source_shortest_paths: function (e, n, r) {
            var i,
              o,
              s,
              a,
              c,
              u,
              l,
              f = {},
              d = {};
            d[n] = 0;
            var h = t.PriorityQueue.make();
            for (h.push(n, 0); !h.empty(); )
              for (s in ((o = (i = h.pop()).value),
              (a = i.cost),
              (c = e[o] || {})))
                c.hasOwnProperty(s) &&
                  ((u = a + c[s]),
                  (l = d[s]),
                  (void 0 === d[s] || l > u) &&
                    ((d[s] = u), h.push(s, u), (f[s] = o)));
            if (void 0 !== r && void 0 === d[r])
              throw Error(
                ["Could not find a path from ", n, " to ", r, "."].join("")
              );
            return f;
          },
          extract_shortest_path_from_predecessor_list: function (e, t) {
            for (var n = [], r = t; r; ) n.push(r), e[r], (r = e[r]);
            return n.reverse(), n;
          },
          find_path: function (e, n, r) {
            var i = t.single_source_shortest_paths(e, n, r);
            return t.extract_shortest_path_from_predecessor_list(i, r);
          },
          PriorityQueue: {
            make: function (e) {
              var n,
                r = t.PriorityQueue,
                i = {};
              for (n in ((e = e || {}), r))
                r.hasOwnProperty(n) && (i[n] = r[n]);
              return (
                (i.queue = []), (i.sorter = e.sorter || r.default_sorter), i
              );
            },
            default_sorter: function (e, t) {
              return e.cost - t.cost;
            },
            push: function (e, t) {
              this.queue.push({ value: e, cost: t }),
                this.queue.sort(this.sorter);
            },
            pop: function () {
              return this.queue.shift();
            },
            empty: function () {
              return 0 === this.queue.length;
            },
          },
        };
        e.exports = t;
      },
      77625: function (e) {
        "use strict";
        var t = Object.prototype.hasOwnProperty,
          n = "~";
        function r() {}
        function i(e, t, n) {
          (this.fn = e), (this.context = t), (this.once = n || !1);
        }
        function o(e, t, r, o, s) {
          if ("function" != typeof r)
            throw TypeError("The listener must be a function");
          var a = new i(r, o || e, s),
            c = n ? n + t : t;
          return (
            e._events[c]
              ? e._events[c].fn
                ? (e._events[c] = [e._events[c], a])
                : e._events[c].push(a)
              : ((e._events[c] = a), e._eventsCount++),
            e
          );
        }
        function s(e, t) {
          0 == --e._eventsCount ? (e._events = new r()) : delete e._events[t];
        }
        function a() {
          (this._events = new r()), (this._eventsCount = 0);
        }
        Object.create &&
          ((r.prototype = Object.create(null)), new r().__proto__ || (n = !1)),
          (a.prototype.eventNames = function () {
            var e,
              r,
              i = [];
            if (0 === this._eventsCount) return i;
            for (r in (e = this._events))
              t.call(e, r) && i.push(n ? r.slice(1) : r);
            return Object.getOwnPropertySymbols
              ? i.concat(Object.getOwnPropertySymbols(e))
              : i;
          }),
          (a.prototype.listeners = function (e) {
            var t = n ? n + e : e,
              r = this._events[t];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var i = 0, o = r.length, s = Array(o); i < o; i++)
              s[i] = r[i].fn;
            return s;
          }),
          (a.prototype.listenerCount = function (e) {
            var t = n ? n + e : e,
              r = this._events[t];
            return r ? (r.fn ? 1 : r.length) : 0;
          }),
          (a.prototype.emit = function (e, t, r, i, o, s) {
            var a = n ? n + e : e;
            if (!this._events[a]) return !1;
            var c,
              u,
              l = this._events[a],
              f = arguments.length;
            if (l.fn) {
              switch ((l.once && this.removeListener(e, l.fn, void 0, !0), f)) {
                case 1:
                  return l.fn.call(l.context), !0;
                case 2:
                  return l.fn.call(l.context, t), !0;
                case 3:
                  return l.fn.call(l.context, t, r), !0;
                case 4:
                  return l.fn.call(l.context, t, r, i), !0;
                case 5:
                  return l.fn.call(l.context, t, r, i, o), !0;
                case 6:
                  return l.fn.call(l.context, t, r, i, o, s), !0;
              }
              for (u = 1, c = Array(f - 1); u < f; u++) c[u - 1] = arguments[u];
              l.fn.apply(l.context, c);
            } else {
              var d,
                h = l.length;
              for (u = 0; u < h; u++)
                switch (
                  (l[u].once && this.removeListener(e, l[u].fn, void 0, !0), f)
                ) {
                  case 1:
                    l[u].fn.call(l[u].context);
                    break;
                  case 2:
                    l[u].fn.call(l[u].context, t);
                    break;
                  case 3:
                    l[u].fn.call(l[u].context, t, r);
                    break;
                  case 4:
                    l[u].fn.call(l[u].context, t, r, i);
                    break;
                  default:
                    if (!c)
                      for (d = 1, c = Array(f - 1); d < f; d++)
                        c[d - 1] = arguments[d];
                    l[u].fn.apply(l[u].context, c);
                }
            }
            return !0;
          }),
          (a.prototype.on = function (e, t, n) {
            return o(this, e, t, n, !1);
          }),
          (a.prototype.once = function (e, t, n) {
            return o(this, e, t, n, !0);
          }),
          (a.prototype.removeListener = function (e, t, r, i) {
            var o = n ? n + e : e;
            if (!this._events[o]) return this;
            if (!t) return s(this, o), this;
            var a = this._events[o];
            if (a.fn)
              a.fn !== t ||
                (i && !a.once) ||
                (r && a.context !== r) ||
                s(this, o);
            else {
              for (var c = 0, u = [], l = a.length; c < l; c++)
                (a[c].fn !== t ||
                  (i && !a[c].once) ||
                  (r && a[c].context !== r)) &&
                  u.push(a[c]);
              u.length
                ? (this._events[o] = 1 === u.length ? u[0] : u)
                : s(this, o);
            }
            return this;
          }),
          (a.prototype.removeAllListeners = function (e) {
            var t;
            return (
              e
                ? ((t = n ? n + e : e), this._events[t] && s(this, t))
                : ((this._events = new r()), (this._eventsCount = 0)),
              this
            );
          }),
          (a.prototype.off = a.prototype.removeListener),
          (a.prototype.addListener = a.prototype.on),
          (a.prefixed = n),
          (a.EventEmitter = a),
          (e.exports = a);
      },
      68848: function (e, t) {
        /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ (t.read =
          function (e, t, n, r, i) {
            var o,
              s,
              a = 8 * i - r - 1,
              c = (1 << a) - 1,
              u = c >> 1,
              l = -7,
              f = n ? i - 1 : 0,
              d = n ? -1 : 1,
              h = e[t + f];
            for (
              f += d, o = h & ((1 << -l) - 1), h >>= -l, l += a;
              l > 0;
              o = 256 * o + e[t + f], f += d, l -= 8
            );
            for (
              s = o & ((1 << -l) - 1), o >>= -l, l += r;
              l > 0;
              s = 256 * s + e[t + f], f += d, l -= 8
            );
            if (0 === o) o = 1 - u;
            else {
              if (o === c) return s ? NaN : (1 / 0) * (h ? -1 : 1);
              (s += Math.pow(2, r)), (o -= u);
            }
            return (h ? -1 : 1) * s * Math.pow(2, o - r);
          }),
          (t.write = function (e, t, n, r, i, o) {
            var s,
              a,
              c,
              u = 8 * o - i - 1,
              l = (1 << u) - 1,
              f = l >> 1,
              d = 23 === i ? 5960464477539062e-23 : 0,
              h = r ? 0 : o - 1,
              p = r ? 1 : -1,
              m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
            for (
              isNaN((t = Math.abs(t))) || t === 1 / 0
                ? ((a = isNaN(t) ? 1 : 0), (s = l))
                : ((s = Math.floor(Math.log(t) / Math.LN2)),
                  t * (c = Math.pow(2, -s)) < 1 && (s--, (c *= 2)),
                  s + f >= 1 ? (t += d / c) : (t += d * Math.pow(2, 1 - f)),
                  t * c >= 2 && (s++, (c /= 2)),
                  s + f >= l
                    ? ((a = 0), (s = l))
                    : s + f >= 1
                    ? ((a = (t * c - 1) * Math.pow(2, i)), (s += f))
                    : ((a = t * Math.pow(2, f - 1) * Math.pow(2, i)), (s = 0)));
              i >= 8;
              e[n + h] = 255 & a, h += p, a /= 256, i -= 8
            );
            for (
              s = (s << i) | a, u += i;
              u > 0;
              e[n + h] = 255 & s, h += p, s /= 256, u -= 8
            );
            e[n + h - p] |= 128 * m;
          });
      },
      82410: function (e, t, n) {
        "use strict";
        n.r(t),
          n.d(t, {
            ErrorCode: function () {
              return h;
            },
            FormatError: function () {
              return ea;
            },
            IntlMessageFormat: function () {
              return ep;
            },
            InvalidValueError: function () {
              return ec;
            },
            InvalidValueTypeError: function () {
              return eu;
            },
            MissingValueError: function () {
              return el;
            },
            PART_TYPE: function () {
              return p;
            },
            default: function () {
              return em;
            },
            formatToParts: function () {
              return ed;
            },
            isFormatXMLElementFn: function () {
              return ef;
            },
          });
        var r,
          i,
          o,
          s,
          a,
          c,
          u,
          l,
          f,
          d,
          h,
          p,
          m = n(5853),
          g = n(1360);
        function y(e) {
          return e.type === u.literal;
        }
        function b(e) {
          return e.type === u.number;
        }
        function w(e) {
          return e.type === u.date;
        }
        function v(e) {
          return e.type === u.time;
        }
        function A(e) {
          return e.type === u.select;
        }
        function E(e) {
          return e.type === u.plural;
        }
        function C(e) {
          return e.type === u.tag;
        }
        function x(e) {
          return !!(e && "object" == typeof e && e.type === l.number);
        }
        function B(e) {
          return !!(e && "object" == typeof e && e.type === l.dateTime);
        }
        ((r = c || (c = {}))[(r.EXPECT_ARGUMENT_CLOSING_BRACE = 1)] =
          "EXPECT_ARGUMENT_CLOSING_BRACE"),
          (r[(r.EMPTY_ARGUMENT = 2)] = "EMPTY_ARGUMENT"),
          (r[(r.MALFORMED_ARGUMENT = 3)] = "MALFORMED_ARGUMENT"),
          (r[(r.EXPECT_ARGUMENT_TYPE = 4)] = "EXPECT_ARGUMENT_TYPE"),
          (r[(r.INVALID_ARGUMENT_TYPE = 5)] = "INVALID_ARGUMENT_TYPE"),
          (r[(r.EXPECT_ARGUMENT_STYLE = 6)] = "EXPECT_ARGUMENT_STYLE"),
          (r[(r.INVALID_NUMBER_SKELETON = 7)] = "INVALID_NUMBER_SKELETON"),
          (r[(r.INVALID_DATE_TIME_SKELETON = 8)] =
            "INVALID_DATE_TIME_SKELETON"),
          (r[(r.EXPECT_NUMBER_SKELETON = 9)] = "EXPECT_NUMBER_SKELETON"),
          (r[(r.EXPECT_DATE_TIME_SKELETON = 10)] = "EXPECT_DATE_TIME_SKELETON"),
          (r[(r.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE = 11)] =
            "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"),
          (r[(r.EXPECT_SELECT_ARGUMENT_OPTIONS = 12)] =
            "EXPECT_SELECT_ARGUMENT_OPTIONS"),
          (r[(r.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE = 13)] =
            "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"),
          (r[(r.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE = 14)] =
            "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"),
          (r[(r.EXPECT_SELECT_ARGUMENT_SELECTOR = 15)] =
            "EXPECT_SELECT_ARGUMENT_SELECTOR"),
          (r[(r.EXPECT_PLURAL_ARGUMENT_SELECTOR = 16)] =
            "EXPECT_PLURAL_ARGUMENT_SELECTOR"),
          (r[(r.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT = 17)] =
            "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"),
          (r[(r.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT = 18)] =
            "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"),
          (r[(r.INVALID_PLURAL_ARGUMENT_SELECTOR = 19)] =
            "INVALID_PLURAL_ARGUMENT_SELECTOR"),
          (r[(r.DUPLICATE_PLURAL_ARGUMENT_SELECTOR = 20)] =
            "DUPLICATE_PLURAL_ARGUMENT_SELECTOR"),
          (r[(r.DUPLICATE_SELECT_ARGUMENT_SELECTOR = 21)] =
            "DUPLICATE_SELECT_ARGUMENT_SELECTOR"),
          (r[(r.MISSING_OTHER_CLAUSE = 22)] = "MISSING_OTHER_CLAUSE"),
          (r[(r.INVALID_TAG = 23)] = "INVALID_TAG"),
          (r[(r.INVALID_TAG_NAME = 25)] = "INVALID_TAG_NAME"),
          (r[(r.UNMATCHED_CLOSING_TAG = 26)] = "UNMATCHED_CLOSING_TAG"),
          (r[(r.UNCLOSED_TAG = 27)] = "UNCLOSED_TAG"),
          ((i = u || (u = {}))[(i.literal = 0)] = "literal"),
          (i[(i.argument = 1)] = "argument"),
          (i[(i.number = 2)] = "number"),
          (i[(i.date = 3)] = "date"),
          (i[(i.time = 4)] = "time"),
          (i[(i.select = 5)] = "select"),
          (i[(i.plural = 6)] = "plural"),
          (i[(i.pound = 7)] = "pound"),
          (i[(i.tag = 8)] = "tag"),
          ((o = l || (l = {}))[(o.number = 0)] = "number"),
          (o[(o.dateTime = 1)] = "dateTime");
        var I = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,
          S =
            /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g,
          P = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i,
          T = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,
          O = /^(@+)?(\+|#+)?[rs]?$/g,
          k = /(\*)(0+)|(#+)(0+)|(0+)/g,
          R = /^(0+)$/;
        function N(e) {
          var t = {};
          return (
            "r" === e[e.length - 1]
              ? (t.roundingPriority = "morePrecision")
              : "s" === e[e.length - 1] &&
                (t.roundingPriority = "lessPrecision"),
            e.replace(O, function (e, n, r) {
              return (
                "string" != typeof r
                  ? ((t.minimumSignificantDigits = n.length),
                    (t.maximumSignificantDigits = n.length))
                  : "+" === r
                  ? (t.minimumSignificantDigits = n.length)
                  : "#" === n[0]
                  ? (t.maximumSignificantDigits = n.length)
                  : ((t.minimumSignificantDigits = n.length),
                    (t.maximumSignificantDigits =
                      n.length + ("string" == typeof r ? r.length : 0))),
                ""
              );
            }),
            t
          );
        }
        function M(e) {
          switch (e) {
            case "sign-auto":
              return { signDisplay: "auto" };
            case "sign-accounting":
            case "()":
              return { currencySign: "accounting" };
            case "sign-always":
            case "+!":
              return { signDisplay: "always" };
            case "sign-accounting-always":
            case "()!":
              return { signDisplay: "always", currencySign: "accounting" };
            case "sign-except-zero":
            case "+?":
              return { signDisplay: "exceptZero" };
            case "sign-accounting-except-zero":
            case "()?":
              return { signDisplay: "exceptZero", currencySign: "accounting" };
            case "sign-never":
            case "+_":
              return { signDisplay: "never" };
          }
        }
        function L(e) {
          return M(e) || {};
        }
        var F = {
            "001": ["H", "h"],
            419: ["h", "H", "hB", "hb"],
            AC: ["H", "h", "hb", "hB"],
            AD: ["H", "hB"],
            AE: ["h", "hB", "hb", "H"],
            AF: ["H", "hb", "hB", "h"],
            AG: ["h", "hb", "H", "hB"],
            AI: ["H", "h", "hb", "hB"],
            AL: ["h", "H", "hB"],
            AM: ["H", "hB"],
            AO: ["H", "hB"],
            AR: ["h", "H", "hB", "hb"],
            AS: ["h", "H"],
            AT: ["H", "hB"],
            AU: ["h", "hb", "H", "hB"],
            AW: ["H", "hB"],
            AX: ["H"],
            AZ: ["H", "hB", "h"],
            BA: ["H", "hB", "h"],
            BB: ["h", "hb", "H", "hB"],
            BD: ["h", "hB", "H"],
            BE: ["H", "hB"],
            BF: ["H", "hB"],
            BG: ["H", "hB", "h"],
            BH: ["h", "hB", "hb", "H"],
            BI: ["H", "h"],
            BJ: ["H", "hB"],
            BL: ["H", "hB"],
            BM: ["h", "hb", "H", "hB"],
            BN: ["hb", "hB", "h", "H"],
            BO: ["h", "H", "hB", "hb"],
            BQ: ["H"],
            BR: ["H", "hB"],
            BS: ["h", "hb", "H", "hB"],
            BT: ["h", "H"],
            BW: ["H", "h", "hb", "hB"],
            BY: ["H", "h"],
            BZ: ["H", "h", "hb", "hB"],
            CA: ["h", "hb", "H", "hB"],
            CC: ["H", "h", "hb", "hB"],
            CD: ["hB", "H"],
            CF: ["H", "h", "hB"],
            CG: ["H", "hB"],
            CH: ["H", "hB", "h"],
            CI: ["H", "hB"],
            CK: ["H", "h", "hb", "hB"],
            CL: ["h", "H", "hB", "hb"],
            CM: ["H", "h", "hB"],
            CN: ["H", "hB", "hb", "h"],
            CO: ["h", "H", "hB", "hb"],
            CP: ["H"],
            CR: ["h", "H", "hB", "hb"],
            CU: ["h", "H", "hB", "hb"],
            CV: ["H", "hB"],
            CW: ["H", "hB"],
            CX: ["H", "h", "hb", "hB"],
            CY: ["h", "H", "hb", "hB"],
            CZ: ["H"],
            DE: ["H", "hB"],
            DG: ["H", "h", "hb", "hB"],
            DJ: ["h", "H"],
            DK: ["H"],
            DM: ["h", "hb", "H", "hB"],
            DO: ["h", "H", "hB", "hb"],
            DZ: ["h", "hB", "hb", "H"],
            EA: ["H", "h", "hB", "hb"],
            EC: ["h", "H", "hB", "hb"],
            EE: ["H", "hB"],
            EG: ["h", "hB", "hb", "H"],
            EH: ["h", "hB", "hb", "H"],
            ER: ["h", "H"],
            ES: ["H", "hB", "h", "hb"],
            ET: ["hB", "hb", "h", "H"],
            FI: ["H"],
            FJ: ["h", "hb", "H", "hB"],
            FK: ["H", "h", "hb", "hB"],
            FM: ["h", "hb", "H", "hB"],
            FO: ["H", "h"],
            FR: ["H", "hB"],
            GA: ["H", "hB"],
            GB: ["H", "h", "hb", "hB"],
            GD: ["h", "hb", "H", "hB"],
            GE: ["H", "hB", "h"],
            GF: ["H", "hB"],
            GG: ["H", "h", "hb", "hB"],
            GH: ["h", "H"],
            GI: ["H", "h", "hb", "hB"],
            GL: ["H", "h"],
            GM: ["h", "hb", "H", "hB"],
            GN: ["H", "hB"],
            GP: ["H", "hB"],
            GQ: ["H", "hB", "h", "hb"],
            GR: ["h", "H", "hb", "hB"],
            GT: ["h", "H", "hB", "hb"],
            GU: ["h", "hb", "H", "hB"],
            GW: ["H", "hB"],
            GY: ["h", "hb", "H", "hB"],
            HK: ["h", "hB", "hb", "H"],
            HN: ["h", "H", "hB", "hb"],
            HR: ["H", "hB"],
            HU: ["H", "h"],
            IC: ["H", "h", "hB", "hb"],
            ID: ["H"],
            IE: ["H", "h", "hb", "hB"],
            IL: ["H", "hB"],
            IM: ["H", "h", "hb", "hB"],
            IN: ["h", "H"],
            IO: ["H", "h", "hb", "hB"],
            IQ: ["h", "hB", "hb", "H"],
            IR: ["hB", "H"],
            IS: ["H"],
            IT: ["H", "hB"],
            JE: ["H", "h", "hb", "hB"],
            JM: ["h", "hb", "H", "hB"],
            JO: ["h", "hB", "hb", "H"],
            JP: ["H", "K", "h"],
            KE: ["hB", "hb", "H", "h"],
            KG: ["H", "h", "hB", "hb"],
            KH: ["hB", "h", "H", "hb"],
            KI: ["h", "hb", "H", "hB"],
            KM: ["H", "h", "hB", "hb"],
            KN: ["h", "hb", "H", "hB"],
            KP: ["h", "H", "hB", "hb"],
            KR: ["h", "H", "hB", "hb"],
            KW: ["h", "hB", "hb", "H"],
            KY: ["h", "hb", "H", "hB"],
            KZ: ["H", "hB"],
            LA: ["H", "hb", "hB", "h"],
            LB: ["h", "hB", "hb", "H"],
            LC: ["h", "hb", "H", "hB"],
            LI: ["H", "hB", "h"],
            LK: ["H", "h", "hB", "hb"],
            LR: ["h", "hb", "H", "hB"],
            LS: ["h", "H"],
            LT: ["H", "h", "hb", "hB"],
            LU: ["H", "h", "hB"],
            LV: ["H", "hB", "hb", "h"],
            LY: ["h", "hB", "hb", "H"],
            MA: ["H", "h", "hB", "hb"],
            MC: ["H", "hB"],
            MD: ["H", "hB"],
            ME: ["H", "hB", "h"],
            MF: ["H", "hB"],
            MG: ["H", "h"],
            MH: ["h", "hb", "H", "hB"],
            MK: ["H", "h", "hb", "hB"],
            ML: ["H"],
            MM: ["hB", "hb", "H", "h"],
            MN: ["H", "h", "hb", "hB"],
            MO: ["h", "hB", "hb", "H"],
            MP: ["h", "hb", "H", "hB"],
            MQ: ["H", "hB"],
            MR: ["h", "hB", "hb", "H"],
            MS: ["H", "h", "hb", "hB"],
            MT: ["H", "h"],
            MU: ["H", "h"],
            MV: ["H", "h"],
            MW: ["h", "hb", "H", "hB"],
            MX: ["h", "H", "hB", "hb"],
            MY: ["hb", "hB", "h", "H"],
            MZ: ["H", "hB"],
            NA: ["h", "H", "hB", "hb"],
            NC: ["H", "hB"],
            NE: ["H"],
            NF: ["H", "h", "hb", "hB"],
            NG: ["H", "h", "hb", "hB"],
            NI: ["h", "H", "hB", "hb"],
            NL: ["H", "hB"],
            NO: ["H", "h"],
            NP: ["H", "h", "hB"],
            NR: ["H", "h", "hb", "hB"],
            NU: ["H", "h", "hb", "hB"],
            NZ: ["h", "hb", "H", "hB"],
            OM: ["h", "hB", "hb", "H"],
            PA: ["h", "H", "hB", "hb"],
            PE: ["h", "H", "hB", "hb"],
            PF: ["H", "h", "hB"],
            PG: ["h", "H"],
            PH: ["h", "hB", "hb", "H"],
            PK: ["h", "hB", "H"],
            PL: ["H", "h"],
            PM: ["H", "hB"],
            PN: ["H", "h", "hb", "hB"],
            PR: ["h", "H", "hB", "hb"],
            PS: ["h", "hB", "hb", "H"],
            PT: ["H", "hB"],
            PW: ["h", "H"],
            PY: ["h", "H", "hB", "hb"],
            QA: ["h", "hB", "hb", "H"],
            RE: ["H", "hB"],
            RO: ["H", "hB"],
            RS: ["H", "hB", "h"],
            RU: ["H"],
            RW: ["H", "h"],
            SA: ["h", "hB", "hb", "H"],
            SB: ["h", "hb", "H", "hB"],
            SC: ["H", "h", "hB"],
            SD: ["h", "hB", "hb", "H"],
            SE: ["H"],
            SG: ["h", "hb", "H", "hB"],
            SH: ["H", "h", "hb", "hB"],
            SI: ["H", "hB"],
            SJ: ["H"],
            SK: ["H"],
            SL: ["h", "hb", "H", "hB"],
            SM: ["H", "h", "hB"],
            SN: ["H", "h", "hB"],
            SO: ["h", "H"],
            SR: ["H", "hB"],
            SS: ["h", "hb", "H", "hB"],
            ST: ["H", "hB"],
            SV: ["h", "H", "hB", "hb"],
            SX: ["H", "h", "hb", "hB"],
            SY: ["h", "hB", "hb", "H"],
            SZ: ["h", "hb", "H", "hB"],
            TA: ["H", "h", "hb", "hB"],
            TC: ["h", "hb", "H", "hB"],
            TD: ["h", "H", "hB"],
            TF: ["H", "h", "hB"],
            TG: ["H", "hB"],
            TH: ["H", "h"],
            TJ: ["H", "h"],
            TL: ["H", "hB", "hb", "h"],
            TM: ["H", "h"],
            TN: ["h", "hB", "hb", "H"],
            TO: ["h", "H"],
            TR: ["H", "hB"],
            TT: ["h", "hb", "H", "hB"],
            TW: ["hB", "hb", "h", "H"],
            TZ: ["hB", "hb", "H", "h"],
            UA: ["H", "hB", "h"],
            UG: ["hB", "hb", "H", "h"],
            UM: ["h", "hb", "H", "hB"],
            US: ["h", "hb", "H", "hB"],
            UY: ["h", "H", "hB", "hb"],
            UZ: ["H", "hB", "h"],
            VA: ["H", "h", "hB"],
            VC: ["h", "hb", "H", "hB"],
            VE: ["h", "H", "hB", "hb"],
            VG: ["h", "hb", "H", "hB"],
            VI: ["h", "hb", "H", "hB"],
            VN: ["H", "h"],
            VU: ["h", "H"],
            WF: ["H", "hB"],
            WS: ["h", "H"],
            XK: ["H", "hB", "h"],
            YE: ["h", "hB", "hb", "H"],
            YT: ["H", "hB"],
            ZA: ["H", "h", "hb", "hB"],
            ZM: ["h", "hb", "H", "hB"],
            ZW: ["H", "h"],
            "af-ZA": ["H", "h", "hB", "hb"],
            "ar-001": ["h", "hB", "hb", "H"],
            "ca-ES": ["H", "h", "hB"],
            "en-001": ["h", "hb", "H", "hB"],
            "en-HK": ["h", "hb", "H", "hB"],
            "en-IL": ["H", "h", "hb", "hB"],
            "en-MY": ["h", "hb", "H", "hB"],
            "es-BR": ["H", "h", "hB", "hb"],
            "es-ES": ["H", "h", "hB", "hb"],
            "es-GQ": ["H", "h", "hB", "hb"],
            "fr-CA": ["H", "h", "hB"],
            "gl-ES": ["H", "h", "hB"],
            "gu-IN": ["hB", "hb", "h", "H"],
            "hi-IN": ["hB", "h", "H"],
            "it-CH": ["H", "h", "hB"],
            "it-IT": ["H", "h", "hB"],
            "kn-IN": ["hB", "h", "H"],
            "ml-IN": ["hB", "h", "H"],
            "mr-IN": ["hB", "hb", "h", "H"],
            "pa-IN": ["hB", "hb", "h", "H"],
            "ta-IN": ["hB", "h", "hb", "H"],
            "te-IN": ["hB", "h", "H"],
            "zu-ZA": ["H", "hB", "hb", "h"],
          },
          U = new RegExp("^".concat(I.source, "*")),
          D = new RegExp("".concat(I.source, "*$"));
        function _(e, t) {
          return { start: e, end: t };
        }
        var j = !!String.prototype.startsWith && "_a".startsWith("a", 1),
          G = !!String.fromCodePoint,
          H = !!Object.fromEntries,
          q = !!String.prototype.codePointAt,
          z = !!String.prototype.trimStart,
          Q = !!String.prototype.trimEnd,
          W = Number.isSafeInteger
            ? Number.isSafeInteger
            : function (e) {
                return (
                  "number" == typeof e &&
                  isFinite(e) &&
                  Math.floor(e) === e &&
                  9007199254740991 >= Math.abs(e)
                );
              },
          V = !0;
        try {
          var K = et("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
          V =
            (null === (f = K.exec("a")) || void 0 === f ? void 0 : f[0]) ===
            "a";
        } catch (e) {
          V = !1;
        }
        var $ = j
            ? function (e, t, n) {
                return e.startsWith(t, n);
              }
            : function (e, t, n) {
                return e.slice(n, n + t.length) === t;
              },
          Z = G
            ? String.fromCodePoint
            : function () {
                for (var e, t = [], n = 0; n < arguments.length; n++)
                  t[n] = arguments[n];
                for (var r = "", i = t.length, o = 0; i > o; ) {
                  if ((e = t[o++]) > 1114111)
                    throw RangeError(e + " is not a valid code point");
                  r +=
                    e < 65536
                      ? String.fromCharCode(e)
                      : String.fromCharCode(
                          ((e -= 65536) >> 10) + 55296,
                          (e % 1024) + 56320
                        );
                }
                return r;
              },
          J = H
            ? Object.fromEntries
            : function (e) {
                for (var t = {}, n = 0; n < e.length; n++) {
                  var r = e[n],
                    i = r[0],
                    o = r[1];
                  t[i] = o;
                }
                return t;
              },
          Y = q
            ? function (e, t) {
                return e.codePointAt(t);
              }
            : function (e, t) {
                var n,
                  r = e.length;
                if (!(t < 0) && !(t >= r)) {
                  var i = e.charCodeAt(t);
                  return i < 55296 ||
                    i > 56319 ||
                    t + 1 === r ||
                    (n = e.charCodeAt(t + 1)) < 56320 ||
                    n > 57343
                    ? i
                    : ((i - 55296) << 10) + (n - 56320) + 65536;
                }
              },
          X = z
            ? function (e) {
                return e.trimStart();
              }
            : function (e) {
                return e.replace(U, "");
              },
          ee = Q
            ? function (e) {
                return e.trimEnd();
              }
            : function (e) {
                return e.replace(D, "");
              };
        function et(e, t) {
          return new RegExp(e, t);
        }
        if (V) {
          var en = et("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
          d = function (e, t) {
            var n;
            return (
              (en.lastIndex = t),
              null !== (n = en.exec(e)[1]) && void 0 !== n ? n : ""
            );
          };
        } else
          d = function (e, t) {
            for (var n = []; ; ) {
              var r,
                i = Y(e, t);
              if (
                void 0 === i ||
                eo(i) ||
                ((r = i) >= 33 && r <= 35) ||
                36 === r ||
                (r >= 37 && r <= 39) ||
                40 === r ||
                41 === r ||
                42 === r ||
                43 === r ||
                44 === r ||
                45 === r ||
                (r >= 46 && r <= 47) ||
                (r >= 58 && r <= 59) ||
                (r >= 60 && r <= 62) ||
                (r >= 63 && r <= 64) ||
                91 === r ||
                92 === r ||
                93 === r ||
                94 === r ||
                96 === r ||
                123 === r ||
                124 === r ||
                125 === r ||
                126 === r ||
                161 === r ||
                (r >= 162 && r <= 165) ||
                166 === r ||
                167 === r ||
                169 === r ||
                171 === r ||
                172 === r ||
                174 === r ||
                176 === r ||
                177 === r ||
                182 === r ||
                187 === r ||
                191 === r ||
                215 === r ||
                247 === r ||
                (r >= 8208 && r <= 8213) ||
                (r >= 8214 && r <= 8215) ||
                8216 === r ||
                8217 === r ||
                8218 === r ||
                (r >= 8219 && r <= 8220) ||
                8221 === r ||
                8222 === r ||
                8223 === r ||
                (r >= 8224 && r <= 8231) ||
                (r >= 8240 && r <= 8248) ||
                8249 === r ||
                8250 === r ||
                (r >= 8251 && r <= 8254) ||
                (r >= 8257 && r <= 8259) ||
                8260 === r ||
                8261 === r ||
                8262 === r ||
                (r >= 8263 && r <= 8273) ||
                8274 === r ||
                8275 === r ||
                (r >= 8277 && r <= 8286) ||
                (r >= 8592 && r <= 8596) ||
                (r >= 8597 && r <= 8601) ||
                (r >= 8602 && r <= 8603) ||
                (r >= 8604 && r <= 8607) ||
                8608 === r ||
                (r >= 8609 && r <= 8610) ||
                8611 === r ||
                (r >= 8612 && r <= 8613) ||
                8614 === r ||
                (r >= 8615 && r <= 8621) ||
                8622 === r ||
                (r >= 8623 && r <= 8653) ||
                (r >= 8654 && r <= 8655) ||
                (r >= 8656 && r <= 8657) ||
                8658 === r ||
                8659 === r ||
                8660 === r ||
                (r >= 8661 && r <= 8691) ||
                (r >= 8692 && r <= 8959) ||
                (r >= 8960 && r <= 8967) ||
                8968 === r ||
                8969 === r ||
                8970 === r ||
                8971 === r ||
                (r >= 8972 && r <= 8991) ||
                (r >= 8992 && r <= 8993) ||
                (r >= 8994 && r <= 9e3) ||
                9001 === r ||
                9002 === r ||
                (r >= 9003 && r <= 9083) ||
                9084 === r ||
                (r >= 9085 && r <= 9114) ||
                (r >= 9115 && r <= 9139) ||
                (r >= 9140 && r <= 9179) ||
                (r >= 9180 && r <= 9185) ||
                (r >= 9186 && r <= 9254) ||
                (r >= 9255 && r <= 9279) ||
                (r >= 9280 && r <= 9290) ||
                (r >= 9291 && r <= 9311) ||
                (r >= 9472 && r <= 9654) ||
                9655 === r ||
                (r >= 9656 && r <= 9664) ||
                9665 === r ||
                (r >= 9666 && r <= 9719) ||
                (r >= 9720 && r <= 9727) ||
                (r >= 9728 && r <= 9838) ||
                9839 === r ||
                (r >= 9840 && r <= 10087) ||
                10088 === r ||
                10089 === r ||
                10090 === r ||
                10091 === r ||
                10092 === r ||
                10093 === r ||
                10094 === r ||
                10095 === r ||
                10096 === r ||
                10097 === r ||
                10098 === r ||
                10099 === r ||
                10100 === r ||
                10101 === r ||
                (r >= 10132 && r <= 10175) ||
                (r >= 10176 && r <= 10180) ||
                10181 === r ||
                10182 === r ||
                (r >= 10183 && r <= 10213) ||
                10214 === r ||
                10215 === r ||
                10216 === r ||
                10217 === r ||
                10218 === r ||
                10219 === r ||
                10220 === r ||
                10221 === r ||
                10222 === r ||
                10223 === r ||
                (r >= 10224 && r <= 10239) ||
                (r >= 10240 && r <= 10495) ||
                (r >= 10496 && r <= 10626) ||
                10627 === r ||
                10628 === r ||
                10629 === r ||
                10630 === r ||
                10631 === r ||
                10632 === r ||
                10633 === r ||
                10634 === r ||
                10635 === r ||
                10636 === r ||
                10637 === r ||
                10638 === r ||
                10639 === r ||
                10640 === r ||
                10641 === r ||
                10642 === r ||
                10643 === r ||
                10644 === r ||
                10645 === r ||
                10646 === r ||
                10647 === r ||
                10648 === r ||
                (r >= 10649 && r <= 10711) ||
                10712 === r ||
                10713 === r ||
                10714 === r ||
                10715 === r ||
                (r >= 10716 && r <= 10747) ||
                10748 === r ||
                10749 === r ||
                (r >= 10750 && r <= 11007) ||
                (r >= 11008 && r <= 11055) ||
                (r >= 11056 && r <= 11076) ||
                (r >= 11077 && r <= 11078) ||
                (r >= 11079 && r <= 11084) ||
                (r >= 11085 && r <= 11123) ||
                (r >= 11124 && r <= 11125) ||
                (r >= 11126 && r <= 11157) ||
                11158 === r ||
                (r >= 11159 && r <= 11263) ||
                (r >= 11776 && r <= 11777) ||
                11778 === r ||
                11779 === r ||
                11780 === r ||
                11781 === r ||
                (r >= 11782 && r <= 11784) ||
                11785 === r ||
                11786 === r ||
                11787 === r ||
                11788 === r ||
                11789 === r ||
                (r >= 11790 && r <= 11798) ||
                11799 === r ||
                (r >= 11800 && r <= 11801) ||
                11802 === r ||
                11803 === r ||
                11804 === r ||
                11805 === r ||
                (r >= 11806 && r <= 11807) ||
                11808 === r ||
                11809 === r ||
                11810 === r ||
                11811 === r ||
                11812 === r ||
                11813 === r ||
                11814 === r ||
                11815 === r ||
                11816 === r ||
                11817 === r ||
                (r >= 11818 && r <= 11822) ||
                11823 === r ||
                (r >= 11824 && r <= 11833) ||
                (r >= 11834 && r <= 11835) ||
                (r >= 11836 && r <= 11839) ||
                11840 === r ||
                11841 === r ||
                11842 === r ||
                (r >= 11843 && r <= 11855) ||
                (r >= 11856 && r <= 11857) ||
                11858 === r ||
                (r >= 11859 && r <= 11903) ||
                (r >= 12289 && r <= 12291) ||
                12296 === r ||
                12297 === r ||
                12298 === r ||
                12299 === r ||
                12300 === r ||
                12301 === r ||
                12302 === r ||
                12303 === r ||
                12304 === r ||
                12305 === r ||
                (r >= 12306 && r <= 12307) ||
                12308 === r ||
                12309 === r ||
                12310 === r ||
                12311 === r ||
                12312 === r ||
                12313 === r ||
                12314 === r ||
                12315 === r ||
                12316 === r ||
                12317 === r ||
                (r >= 12318 && r <= 12319) ||
                12320 === r ||
                12336 === r ||
                64830 === r ||
                64831 === r ||
                (r >= 65093 && r <= 65094)
              )
                break;
              n.push(i), (t += i >= 65536 ? 2 : 1);
            }
            return Z.apply(void 0, n);
          };
        var er = (function () {
          function e(e, t) {
            void 0 === t && (t = {}),
              (this.message = e),
              (this.position = { offset: 0, line: 1, column: 1 }),
              (this.ignoreTag = !!t.ignoreTag),
              (this.locale = t.locale),
              (this.requiresOtherClause = !!t.requiresOtherClause),
              (this.shouldParseSkeletons = !!t.shouldParseSkeletons);
          }
          return (
            (e.prototype.parse = function () {
              if (0 !== this.offset())
                throw Error("parser can only be used once");
              return this.parseMessage(0, "", !1);
            }),
            (e.prototype.parseMessage = function (e, t, n) {
              for (var r = []; !this.isEOF(); ) {
                var i = this.char();
                if (123 === i) {
                  var o = this.parseArgument(e, n);
                  if (o.err) return o;
                  r.push(o.val);
                } else if (125 === i && e > 0) break;
                else if (
                  35 === i &&
                  ("plural" === t || "selectordinal" === t)
                ) {
                  var s = this.clonePosition();
                  this.bump(),
                    r.push({
                      type: u.pound,
                      location: _(s, this.clonePosition()),
                    });
                } else if (60 !== i || this.ignoreTag || 47 !== this.peek()) {
                  if (60 === i && !this.ignoreTag && ei(this.peek() || 0)) {
                    var o = this.parseTag(e, t);
                    if (o.err) return o;
                    r.push(o.val);
                  } else {
                    var o = this.parseLiteral(e, t);
                    if (o.err) return o;
                    r.push(o.val);
                  }
                } else {
                  if (!n)
                    return this.error(
                      c.UNMATCHED_CLOSING_TAG,
                      _(this.clonePosition(), this.clonePosition())
                    );
                  break;
                }
              }
              return { val: r, err: null };
            }),
            (e.prototype.parseTag = function (e, t) {
              var n = this.clonePosition();
              this.bump();
              var r = this.parseTagName();
              if ((this.bumpSpace(), this.bumpIf("/>")))
                return {
                  val: {
                    type: u.literal,
                    value: "<".concat(r, "/>"),
                    location: _(n, this.clonePosition()),
                  },
                  err: null,
                };
              if (!this.bumpIf(">"))
                return this.error(c.INVALID_TAG, _(n, this.clonePosition()));
              var i = this.parseMessage(e + 1, t, !0);
              if (i.err) return i;
              var o = i.val,
                s = this.clonePosition();
              if (!this.bumpIf("</"))
                return this.error(c.UNCLOSED_TAG, _(n, this.clonePosition()));
              if (this.isEOF() || !ei(this.char()))
                return this.error(c.INVALID_TAG, _(s, this.clonePosition()));
              var a = this.clonePosition();
              return r !== this.parseTagName()
                ? this.error(
                    c.UNMATCHED_CLOSING_TAG,
                    _(a, this.clonePosition())
                  )
                : (this.bumpSpace(), this.bumpIf(">"))
                ? {
                    val: {
                      type: u.tag,
                      value: r,
                      children: o,
                      location: _(n, this.clonePosition()),
                    },
                    err: null,
                  }
                : this.error(c.INVALID_TAG, _(s, this.clonePosition()));
            }),
            (e.prototype.parseTagName = function () {
              var e,
                t = this.offset();
              for (
                this.bump();
                !this.isEOF() &&
                (45 === (e = this.char()) ||
                  46 === e ||
                  (e >= 48 && e <= 57) ||
                  95 === e ||
                  (e >= 97 && e <= 122) ||
                  (e >= 65 && e <= 90) ||
                  183 == e ||
                  (e >= 192 && e <= 214) ||
                  (e >= 216 && e <= 246) ||
                  (e >= 248 && e <= 893) ||
                  (e >= 895 && e <= 8191) ||
                  (e >= 8204 && e <= 8205) ||
                  (e >= 8255 && e <= 8256) ||
                  (e >= 8304 && e <= 8591) ||
                  (e >= 11264 && e <= 12271) ||
                  (e >= 12289 && e <= 55295) ||
                  (e >= 63744 && e <= 64975) ||
                  (e >= 65008 && e <= 65533) ||
                  (e >= 65536 && e <= 983039));

              )
                this.bump();
              return this.message.slice(t, this.offset());
            }),
            (e.prototype.parseLiteral = function (e, t) {
              for (var n = this.clonePosition(), r = ""; ; ) {
                var i = this.tryParseQuote(t);
                if (i) {
                  r += i;
                  continue;
                }
                var o = this.tryParseUnquoted(e, t);
                if (o) {
                  r += o;
                  continue;
                }
                var s = this.tryParseLeftAngleBracket();
                if (s) {
                  r += s;
                  continue;
                }
                break;
              }
              var a = _(n, this.clonePosition());
              return {
                val: { type: u.literal, value: r, location: a },
                err: null,
              };
            }),
            (e.prototype.tryParseLeftAngleBracket = function () {
              var e;
              return this.isEOF() ||
                60 !== this.char() ||
                (!this.ignoreTag && (ei((e = this.peek() || 0)) || 47 === e))
                ? null
                : (this.bump(), "<");
            }),
            (e.prototype.tryParseQuote = function (e) {
              if (this.isEOF() || 39 !== this.char()) return null;
              switch (this.peek()) {
                case 39:
                  return this.bump(), this.bump(), "'";
                case 123:
                case 60:
                case 62:
                case 125:
                  break;
                case 35:
                  if ("plural" === e || "selectordinal" === e) break;
                  return null;
                default:
                  return null;
              }
              this.bump();
              var t = [this.char()];
              for (this.bump(); !this.isEOF(); ) {
                var n = this.char();
                if (39 === n) {
                  if (39 === this.peek()) t.push(39), this.bump();
                  else {
                    this.bump();
                    break;
                  }
                } else t.push(n);
                this.bump();
              }
              return Z.apply(void 0, t);
            }),
            (e.prototype.tryParseUnquoted = function (e, t) {
              if (this.isEOF()) return null;
              var n = this.char();
              return 60 === n ||
                123 === n ||
                (35 === n && ("plural" === t || "selectordinal" === t)) ||
                (125 === n && e > 0)
                ? null
                : (this.bump(), Z(n));
            }),
            (e.prototype.parseArgument = function (e, t) {
              var n = this.clonePosition();
              if ((this.bump(), this.bumpSpace(), this.isEOF()))
                return this.error(
                  c.EXPECT_ARGUMENT_CLOSING_BRACE,
                  _(n, this.clonePosition())
                );
              if (125 === this.char())
                return (
                  this.bump(),
                  this.error(c.EMPTY_ARGUMENT, _(n, this.clonePosition()))
                );
              var r = this.parseIdentifierIfPossible().value;
              if (!r)
                return this.error(
                  c.MALFORMED_ARGUMENT,
                  _(n, this.clonePosition())
                );
              if ((this.bumpSpace(), this.isEOF()))
                return this.error(
                  c.EXPECT_ARGUMENT_CLOSING_BRACE,
                  _(n, this.clonePosition())
                );
              switch (this.char()) {
                case 125:
                  return (
                    this.bump(),
                    {
                      val: {
                        type: u.argument,
                        value: r,
                        location: _(n, this.clonePosition()),
                      },
                      err: null,
                    }
                  );
                case 44:
                  if ((this.bump(), this.bumpSpace(), this.isEOF()))
                    return this.error(
                      c.EXPECT_ARGUMENT_CLOSING_BRACE,
                      _(n, this.clonePosition())
                    );
                  return this.parseArgumentOptions(e, t, r, n);
                default:
                  return this.error(
                    c.MALFORMED_ARGUMENT,
                    _(n, this.clonePosition())
                  );
              }
            }),
            (e.prototype.parseIdentifierIfPossible = function () {
              var e = this.clonePosition(),
                t = this.offset(),
                n = d(this.message, t),
                r = t + n.length;
              return (
                this.bumpTo(r),
                { value: n, location: _(e, this.clonePosition()) }
              );
            }),
            (e.prototype.parseArgumentOptions = function (e, t, n, r) {
              var i,
                o = this.clonePosition(),
                s = this.parseIdentifierIfPossible().value,
                a = this.clonePosition();
              switch (s) {
                case "":
                  return this.error(c.EXPECT_ARGUMENT_TYPE, _(o, a));
                case "number":
                case "date":
                case "time":
                  this.bumpSpace();
                  var f = null;
                  if (this.bumpIf(",")) {
                    this.bumpSpace();
                    var d = this.clonePosition(),
                      h = this.parseSimpleArgStyleIfPossible();
                    if (h.err) return h;
                    var p = ee(h.val);
                    if (0 === p.length)
                      return this.error(
                        c.EXPECT_ARGUMENT_STYLE,
                        _(this.clonePosition(), this.clonePosition())
                      );
                    f = { style: p, styleLocation: _(d, this.clonePosition()) };
                  }
                  var g = this.tryParseArgumentClose(r);
                  if (g.err) return g;
                  var y = _(r, this.clonePosition());
                  if (f && $(null == f ? void 0 : f.style, "::", 0)) {
                    var b,
                      w = X(f.style.slice(2));
                    if ("number" === s) {
                      var h = this.parseNumberSkeletonFromString(
                        w,
                        f.styleLocation
                      );
                      if (h.err) return h;
                      return {
                        val: {
                          type: u.number,
                          value: n,
                          location: y,
                          style: h.val,
                        },
                        err: null,
                      };
                    }
                    if (0 === w.length)
                      return this.error(c.EXPECT_DATE_TIME_SKELETON, y);
                    var v = w;
                    this.locale &&
                      (v = (function (e, t) {
                        for (var n = "", r = 0; r < e.length; r++) {
                          var i = e.charAt(r);
                          if ("j" === i) {
                            for (
                              var o = 0;
                              r + 1 < e.length && e.charAt(r + 1) === i;

                            )
                              o++, r++;
                            var s = 1 + (1 & o),
                              a = o < 2 ? 1 : 3 + (o >> 1),
                              c = (function (e) {
                                var t,
                                  n = e.hourCycle;
                                if (
                                  (void 0 === n &&
                                    e.hourCycles &&
                                    e.hourCycles.length &&
                                    (n = e.hourCycles[0]),
                                  n)
                                )
                                  switch (n) {
                                    case "h24":
                                      return "k";
                                    case "h23":
                                      return "H";
                                    case "h12":
                                      return "h";
                                    case "h11":
                                      return "K";
                                    default:
                                      throw Error("Invalid hourCycle");
                                  }
                                var r = e.language;
                                return (
                                  "root" !== r && (t = e.maximize().region),
                                  (F[t || ""] ||
                                    F[r || ""] ||
                                    F["".concat(r, "-001")] ||
                                    F["001"])[0]
                                );
                              })(t);
                            for (("H" == c || "k" == c) && (a = 0); a-- > 0; )
                              n += "a";
                            for (; s-- > 0; ) n = c + n;
                          } else "J" === i ? (n += "H") : (n += i);
                        }
                        return n;
                      })(w, this.locale));
                    var p = {
                      type: l.dateTime,
                      pattern: v,
                      location: f.styleLocation,
                      parsedOptions: this.shouldParseSkeletons
                        ? ((b = {}),
                          v.replace(S, function (e) {
                            var t = e.length;
                            switch (e[0]) {
                              case "G":
                                b.era =
                                  4 === t
                                    ? "long"
                                    : 5 === t
                                    ? "narrow"
                                    : "short";
                                break;
                              case "y":
                                b.year = 2 === t ? "2-digit" : "numeric";
                                break;
                              case "Y":
                              case "u":
                              case "U":
                              case "r":
                                throw RangeError(
                                  "`Y/u/U/r` (year) patterns are not supported, use `y` instead"
                                );
                              case "q":
                              case "Q":
                                throw RangeError(
                                  "`q/Q` (quarter) patterns are not supported"
                                );
                              case "M":
                              case "L":
                                b.month = [
                                  "numeric",
                                  "2-digit",
                                  "short",
                                  "long",
                                  "narrow",
                                ][t - 1];
                                break;
                              case "w":
                              case "W":
                                throw RangeError(
                                  "`w/W` (week) patterns are not supported"
                                );
                              case "d":
                                b.day = ["numeric", "2-digit"][t - 1];
                                break;
                              case "D":
                              case "F":
                              case "g":
                                throw RangeError(
                                  "`D/F/g` (day) patterns are not supported, use `d` instead"
                                );
                              case "E":
                                b.weekday =
                                  4 === t
                                    ? "long"
                                    : 5 === t
                                    ? "narrow"
                                    : "short";
                                break;
                              case "e":
                                if (t < 4)
                                  throw RangeError(
                                    "`e..eee` (weekday) patterns are not supported"
                                  );
                                b.weekday = [
                                  "short",
                                  "long",
                                  "narrow",
                                  "short",
                                ][t - 4];
                                break;
                              case "c":
                                if (t < 4)
                                  throw RangeError(
                                    "`c..ccc` (weekday) patterns are not supported"
                                  );
                                b.weekday = [
                                  "short",
                                  "long",
                                  "narrow",
                                  "short",
                                ][t - 4];
                                break;
                              case "a":
                                b.hour12 = !0;
                                break;
                              case "b":
                              case "B":
                                throw RangeError(
                                  "`b/B` (period) patterns are not supported, use `a` instead"
                                );
                              case "h":
                                (b.hourCycle = "h12"),
                                  (b.hour = ["numeric", "2-digit"][t - 1]);
                                break;
                              case "H":
                                (b.hourCycle = "h23"),
                                  (b.hour = ["numeric", "2-digit"][t - 1]);
                                break;
                              case "K":
                                (b.hourCycle = "h11"),
                                  (b.hour = ["numeric", "2-digit"][t - 1]);
                                break;
                              case "k":
                                (b.hourCycle = "h24"),
                                  (b.hour = ["numeric", "2-digit"][t - 1]);
                                break;
                              case "j":
                              case "J":
                              case "C":
                                throw RangeError(
                                  "`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead"
                                );
                              case "m":
                                b.minute = ["numeric", "2-digit"][t - 1];
                                break;
                              case "s":
                                b.second = ["numeric", "2-digit"][t - 1];
                                break;
                              case "S":
                              case "A":
                                throw RangeError(
                                  "`S/A` (second) patterns are not supported, use `s` instead"
                                );
                              case "z":
                                b.timeZoneName = t < 4 ? "short" : "long";
                                break;
                              case "Z":
                              case "O":
                              case "v":
                              case "V":
                              case "X":
                              case "x":
                                throw RangeError(
                                  "`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead"
                                );
                            }
                            return "";
                          }),
                          b)
                        : {},
                    };
                    return {
                      val: {
                        type: "date" === s ? u.date : u.time,
                        value: n,
                        location: y,
                        style: p,
                      },
                      err: null,
                    };
                  }
                  return {
                    val: {
                      type:
                        "number" === s
                          ? u.number
                          : "date" === s
                          ? u.date
                          : u.time,
                      value: n,
                      location: y,
                      style:
                        null !== (i = null == f ? void 0 : f.style) &&
                        void 0 !== i
                          ? i
                          : null,
                    },
                    err: null,
                  };
                case "plural":
                case "selectordinal":
                case "select":
                  var A = this.clonePosition();
                  if ((this.bumpSpace(), !this.bumpIf(",")))
                    return this.error(
                      c.EXPECT_SELECT_ARGUMENT_OPTIONS,
                      _(A, (0, m.pi)({}, A))
                    );
                  this.bumpSpace();
                  var E = this.parseIdentifierIfPossible(),
                    C = 0;
                  if ("select" !== s && "offset" === E.value) {
                    if (!this.bumpIf(":"))
                      return this.error(
                        c.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,
                        _(this.clonePosition(), this.clonePosition())
                      );
                    this.bumpSpace();
                    var h = this.tryParseDecimalInteger(
                      c.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,
                      c.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE
                    );
                    if (h.err) return h;
                    this.bumpSpace(),
                      (E = this.parseIdentifierIfPossible()),
                      (C = h.val);
                  }
                  var x = this.tryParsePluralOrSelectOptions(e, s, t, E);
                  if (x.err) return x;
                  var g = this.tryParseArgumentClose(r);
                  if (g.err) return g;
                  var B = _(r, this.clonePosition());
                  if ("select" === s)
                    return {
                      val: {
                        type: u.select,
                        value: n,
                        options: J(x.val),
                        location: B,
                      },
                      err: null,
                    };
                  return {
                    val: {
                      type: u.plural,
                      value: n,
                      options: J(x.val),
                      offset: C,
                      pluralType: "plural" === s ? "cardinal" : "ordinal",
                      location: B,
                    },
                    err: null,
                  };
                default:
                  return this.error(c.INVALID_ARGUMENT_TYPE, _(o, a));
              }
            }),
            (e.prototype.tryParseArgumentClose = function (e) {
              return this.isEOF() || 125 !== this.char()
                ? this.error(
                    c.EXPECT_ARGUMENT_CLOSING_BRACE,
                    _(e, this.clonePosition())
                  )
                : (this.bump(), { val: !0, err: null });
            }),
            (e.prototype.parseSimpleArgStyleIfPossible = function () {
              for (var e = 0, t = this.clonePosition(); !this.isEOF(); )
                switch (this.char()) {
                  case 39:
                    this.bump();
                    var n = this.clonePosition();
                    if (!this.bumpUntil("'"))
                      return this.error(
                        c.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,
                        _(n, this.clonePosition())
                      );
                    this.bump();
                    break;
                  case 123:
                    (e += 1), this.bump();
                    break;
                  case 125:
                    if (!(e > 0))
                      return {
                        val: this.message.slice(t.offset, this.offset()),
                        err: null,
                      };
                    e -= 1;
                    break;
                  default:
                    this.bump();
                }
              return {
                val: this.message.slice(t.offset, this.offset()),
                err: null,
              };
            }),
            (e.prototype.parseNumberSkeletonFromString = function (e, t) {
              var n = [];
              try {
                n = (function (e) {
                  if (0 === e.length)
                    throw Error("Number skeleton cannot be empty");
                  for (
                    var t = e.split(P).filter(function (e) {
                        return e.length > 0;
                      }),
                      n = [],
                      r = 0;
                    r < t.length;
                    r++
                  ) {
                    var i = t[r].split("/");
                    if (0 === i.length) throw Error("Invalid number skeleton");
                    for (var o = i[0], s = i.slice(1), a = 0; a < s.length; a++)
                      if (0 === s[a].length)
                        throw Error("Invalid number skeleton");
                    n.push({ stem: o, options: s });
                  }
                  return n;
                })(e);
              } catch (e) {
                return this.error(c.INVALID_NUMBER_SKELETON, t);
              }
              return {
                val: {
                  type: l.number,
                  tokens: n,
                  location: t,
                  parsedOptions: this.shouldParseSkeletons
                    ? (function (e) {
                        for (var t = {}, n = 0; n < e.length; n++) {
                          var r = e[n];
                          switch (r.stem) {
                            case "percent":
                            case "%":
                              t.style = "percent";
                              continue;
                            case "%x100":
                              (t.style = "percent"), (t.scale = 100);
                              continue;
                            case "currency":
                              (t.style = "currency"),
                                (t.currency = r.options[0]);
                              continue;
                            case "group-off":
                            case ",_":
                              t.useGrouping = !1;
                              continue;
                            case "precision-integer":
                            case ".":
                              t.maximumFractionDigits = 0;
                              continue;
                            case "measure-unit":
                            case "unit":
                              (t.style = "unit"),
                                (t.unit = r.options[0].replace(/^(.*?)-/, ""));
                              continue;
                            case "compact-short":
                            case "K":
                              (t.notation = "compact"),
                                (t.compactDisplay = "short");
                              continue;
                            case "compact-long":
                            case "KK":
                              (t.notation = "compact"),
                                (t.compactDisplay = "long");
                              continue;
                            case "scientific":
                              t = (0, m.pi)(
                                (0, m.pi)((0, m.pi)({}, t), {
                                  notation: "scientific",
                                }),
                                r.options.reduce(function (e, t) {
                                  return (0,
                                  m.pi)((0, m.pi)({}, e), M(t) || {});
                                }, {})
                              );
                              continue;
                            case "engineering":
                              t = (0, m.pi)(
                                (0, m.pi)((0, m.pi)({}, t), {
                                  notation: "engineering",
                                }),
                                r.options.reduce(function (e, t) {
                                  return (0,
                                  m.pi)((0, m.pi)({}, e), M(t) || {});
                                }, {})
                              );
                              continue;
                            case "notation-simple":
                              t.notation = "standard";
                              continue;
                            case "unit-width-narrow":
                              (t.currencyDisplay = "narrowSymbol"),
                                (t.unitDisplay = "narrow");
                              continue;
                            case "unit-width-short":
                              (t.currencyDisplay = "code"),
                                (t.unitDisplay = "short");
                              continue;
                            case "unit-width-full-name":
                              (t.currencyDisplay = "name"),
                                (t.unitDisplay = "long");
                              continue;
                            case "unit-width-iso-code":
                              t.currencyDisplay = "symbol";
                              continue;
                            case "scale":
                              t.scale = parseFloat(r.options[0]);
                              continue;
                            case "rounding-mode-floor":
                              t.roundingMode = "floor";
                              continue;
                            case "rounding-mode-ceiling":
                              t.roundingMode = "ceil";
                              continue;
                            case "rounding-mode-down":
                              t.roundingMode = "trunc";
                              continue;
                            case "rounding-mode-up":
                              t.roundingMode = "expand";
                              continue;
                            case "rounding-mode-half-even":
                              t.roundingMode = "halfEven";
                              continue;
                            case "rounding-mode-half-down":
                              t.roundingMode = "halfTrunc";
                              continue;
                            case "rounding-mode-half-up":
                              t.roundingMode = "halfExpand";
                              continue;
                            case "integer-width":
                              if (r.options.length > 1)
                                throw RangeError(
                                  "integer-width stems only accept a single optional option"
                                );
                              r.options[0].replace(
                                k,
                                function (e, n, r, i, o, s) {
                                  if (n) t.minimumIntegerDigits = r.length;
                                  else if (i && o)
                                    throw Error(
                                      "We currently do not support maximum integer digits"
                                    );
                                  else if (s)
                                    throw Error(
                                      "We currently do not support exact integer digits"
                                    );
                                  return "";
                                }
                              );
                              continue;
                          }
                          if (R.test(r.stem)) {
                            t.minimumIntegerDigits = r.stem.length;
                            continue;
                          }
                          if (T.test(r.stem)) {
                            if (r.options.length > 1)
                              throw RangeError(
                                "Fraction-precision stems only accept a single optional option"
                              );
                            r.stem.replace(T, function (e, n, r, i, o, s) {
                              return (
                                "*" === r
                                  ? (t.minimumFractionDigits = n.length)
                                  : i && "#" === i[0]
                                  ? (t.maximumFractionDigits = i.length)
                                  : o && s
                                  ? ((t.minimumFractionDigits = o.length),
                                    (t.maximumFractionDigits =
                                      o.length + s.length))
                                  : ((t.minimumFractionDigits = n.length),
                                    (t.maximumFractionDigits = n.length)),
                                ""
                              );
                            });
                            var i = r.options[0];
                            "w" === i
                              ? (t = (0, m.pi)((0, m.pi)({}, t), {
                                  trailingZeroDisplay: "stripIfInteger",
                                }))
                              : i && (t = (0, m.pi)((0, m.pi)({}, t), N(i)));
                            continue;
                          }
                          if (O.test(r.stem)) {
                            t = (0, m.pi)((0, m.pi)({}, t), N(r.stem));
                            continue;
                          }
                          var o = M(r.stem);
                          o && (t = (0, m.pi)((0, m.pi)({}, t), o));
                          var s = (function (e) {
                            var t;
                            if (
                              ("E" === e[0] && "E" === e[1]
                                ? ((t = { notation: "engineering" }),
                                  (e = e.slice(2)))
                                : "E" === e[0] &&
                                  ((t = { notation: "scientific" }),
                                  (e = e.slice(1))),
                              t)
                            ) {
                              var n = e.slice(0, 2);
                              if (
                                ("+!" === n
                                  ? ((t.signDisplay = "always"),
                                    (e = e.slice(2)))
                                  : "+?" === n &&
                                    ((t.signDisplay = "exceptZero"),
                                    (e = e.slice(2))),
                                !R.test(e))
                              )
                                throw Error(
                                  "Malformed concise eng/scientific notation"
                                );
                              t.minimumIntegerDigits = e.length;
                            }
                            return t;
                          })(r.stem);
                          s && (t = (0, m.pi)((0, m.pi)({}, t), s));
                        }
                        return t;
                      })(n)
                    : {},
                },
                err: null,
              };
            }),
            (e.prototype.tryParsePluralOrSelectOptions = function (e, t, n, r) {
              for (
                var i,
                  o = !1,
                  s = [],
                  a = new Set(),
                  u = r.value,
                  l = r.location;
                ;

              ) {
                if (0 === u.length) {
                  var f = this.clonePosition();
                  if ("select" !== t && this.bumpIf("=")) {
                    var d = this.tryParseDecimalInteger(
                      c.EXPECT_PLURAL_ARGUMENT_SELECTOR,
                      c.INVALID_PLURAL_ARGUMENT_SELECTOR
                    );
                    if (d.err) return d;
                    (l = _(f, this.clonePosition())),
                      (u = this.message.slice(f.offset, this.offset()));
                  } else break;
                }
                if (a.has(u))
                  return this.error(
                    "select" === t
                      ? c.DUPLICATE_SELECT_ARGUMENT_SELECTOR
                      : c.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,
                    l
                  );
                "other" === u && (o = !0), this.bumpSpace();
                var h = this.clonePosition();
                if (!this.bumpIf("{"))
                  return this.error(
                    "select" === t
                      ? c.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT
                      : c.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,
                    _(this.clonePosition(), this.clonePosition())
                  );
                var p = this.parseMessage(e + 1, t, n);
                if (p.err) return p;
                var m = this.tryParseArgumentClose(h);
                if (m.err) return m;
                s.push([
                  u,
                  { value: p.val, location: _(h, this.clonePosition()) },
                ]),
                  a.add(u),
                  this.bumpSpace(),
                  (u = (i = this.parseIdentifierIfPossible()).value),
                  (l = i.location);
              }
              return 0 === s.length
                ? this.error(
                    "select" === t
                      ? c.EXPECT_SELECT_ARGUMENT_SELECTOR
                      : c.EXPECT_PLURAL_ARGUMENT_SELECTOR,
                    _(this.clonePosition(), this.clonePosition())
                  )
                : this.requiresOtherClause && !o
                ? this.error(
                    c.MISSING_OTHER_CLAUSE,
                    _(this.clonePosition(), this.clonePosition())
                  )
                : { val: s, err: null };
            }),
            (e.prototype.tryParseDecimalInteger = function (e, t) {
              var n = 1,
                r = this.clonePosition();
              this.bumpIf("+") || (this.bumpIf("-") && (n = -1));
              for (var i = !1, o = 0; !this.isEOF(); ) {
                var s = this.char();
                if (s >= 48 && s <= 57)
                  (i = !0), (o = 10 * o + (s - 48)), this.bump();
                else break;
              }
              var a = _(r, this.clonePosition());
              return i
                ? W((o *= n))
                  ? { val: o, err: null }
                  : this.error(t, a)
                : this.error(e, a);
            }),
            (e.prototype.offset = function () {
              return this.position.offset;
            }),
            (e.prototype.isEOF = function () {
              return this.offset() === this.message.length;
            }),
            (e.prototype.clonePosition = function () {
              return {
                offset: this.position.offset,
                line: this.position.line,
                column: this.position.column,
              };
            }),
            (e.prototype.char = function () {
              var e = this.position.offset;
              if (e >= this.message.length) throw Error("out of bound");
              var t = Y(this.message, e);
              if (void 0 === t)
                throw Error(
                  "Offset ".concat(
                    e,
                    " is at invalid UTF-16 code unit boundary"
                  )
                );
              return t;
            }),
            (e.prototype.error = function (e, t) {
              return {
                val: null,
                err: { kind: e, message: this.message, location: t },
              };
            }),
            (e.prototype.bump = function () {
              if (!this.isEOF()) {
                var e = this.char();
                10 === e
                  ? ((this.position.line += 1),
                    (this.position.column = 1),
                    (this.position.offset += 1))
                  : ((this.position.column += 1),
                    (this.position.offset += e < 65536 ? 1 : 2));
              }
            }),
            (e.prototype.bumpIf = function (e) {
              if ($(this.message, e, this.offset())) {
                for (var t = 0; t < e.length; t++) this.bump();
                return !0;
              }
              return !1;
            }),
            (e.prototype.bumpUntil = function (e) {
              var t = this.offset(),
                n = this.message.indexOf(e, t);
              return n >= 0
                ? (this.bumpTo(n), !0)
                : (this.bumpTo(this.message.length), !1);
            }),
            (e.prototype.bumpTo = function (e) {
              if (this.offset() > e)
                throw Error(
                  "targetOffset "
                    .concat(
                      e,
                      " must be greater than or equal to the current offset "
                    )
                    .concat(this.offset())
                );
              for (e = Math.min(e, this.message.length); ; ) {
                var t = this.offset();
                if (t === e) break;
                if (t > e)
                  throw Error(
                    "targetOffset ".concat(
                      e,
                      " is at invalid UTF-16 code unit boundary"
                    )
                  );
                if ((this.bump(), this.isEOF())) break;
              }
            }),
            (e.prototype.bumpSpace = function () {
              for (; !this.isEOF() && eo(this.char()); ) this.bump();
            }),
            (e.prototype.peek = function () {
              if (this.isEOF()) return null;
              var e = this.char(),
                t = this.offset(),
                n = this.message.charCodeAt(t + (e >= 65536 ? 2 : 1));
              return null != n ? n : null;
            }),
            e
          );
        })();
        function ei(e) {
          return (e >= 97 && e <= 122) || (e >= 65 && e <= 90);
        }
        function eo(e) {
          return (
            (e >= 9 && e <= 13) ||
            32 === e ||
            133 === e ||
            (e >= 8206 && e <= 8207) ||
            8232 === e ||
            8233 === e
          );
        }
        function es(e, t) {
          void 0 === t && (t = {});
          var n = new er(
            e,
            (t = (0, m.pi)(
              { shouldParseSkeletons: !0, requiresOtherClause: !0 },
              t
            ))
          ).parse();
          if (n.err) {
            var r = SyntaxError(c[n.err.kind]);
            throw (
              ((r.location = n.err.location),
              (r.originalMessage = n.err.message),
              r)
            );
          }
          return (
            (null == t ? void 0 : t.captureLocation) ||
              (function e(t) {
                t.forEach(function (t) {
                  if ((delete t.location, A(t) || E(t)))
                    for (var n in t.options)
                      delete t.options[n].location, e(t.options[n].value);
                  else
                    b(t) && x(t.style)
                      ? delete t.style.location
                      : (w(t) || v(t)) && B(t.style)
                      ? delete t.style.location
                      : C(t) && e(t.children);
                });
              })(n.val),
            n.val
          );
        }
        ((s = h || (h = {})).MISSING_VALUE = "MISSING_VALUE"),
          (s.INVALID_VALUE = "INVALID_VALUE"),
          (s.MISSING_INTL_API = "MISSING_INTL_API");
        var ea = (function (e) {
            function t(t, n, r) {
              var i = e.call(this, t) || this;
              return (i.code = n), (i.originalMessage = r), i;
            }
            return (
              (0, m.ZT)(t, e),
              (t.prototype.toString = function () {
                return "[formatjs Error: "
                  .concat(this.code, "] ")
                  .concat(this.message);
              }),
              t
            );
          })(Error),
          ec = (function (e) {
            function t(t, n, r, i) {
              return (
                e.call(
                  this,
                  'Invalid values for "'
                    .concat(t, '": "')
                    .concat(n, '". Options are "')
                    .concat(Object.keys(r).join('", "'), '"'),
                  h.INVALID_VALUE,
                  i
                ) || this
              );
            }
            return (0, m.ZT)(t, e), t;
          })(ea),
          eu = (function (e) {
            function t(t, n, r) {
              return (
                e.call(
                  this,
                  'Value for "'.concat(t, '" must be of type ').concat(n),
                  h.INVALID_VALUE,
                  r
                ) || this
              );
            }
            return (0, m.ZT)(t, e), t;
          })(ea),
          el = (function (e) {
            function t(t, n) {
              return (
                e.call(
                  this,
                  'The intl string context variable "'
                    .concat(t, '" was not provided to the string "')
                    .concat(n, '"'),
                  h.MISSING_VALUE,
                  n
                ) || this
              );
            }
            return (0, m.ZT)(t, e), t;
          })(ea);
        function ef(e) {
          return "function" == typeof e;
        }
        function ed(e, t, n, r, i, o, s) {
          if (1 === e.length && y(e[0]))
            return [{ type: p.literal, value: e[0].value }];
          for (var a = [], c = 0; c < e.length; c++) {
            var l = e[c];
            if (y(l)) {
              a.push({ type: p.literal, value: l.value });
              continue;
            }
            if (l.type === u.pound) {
              "number" == typeof o &&
                a.push({
                  type: p.literal,
                  value: n.getNumberFormat(t).format(o),
                });
              continue;
            }
            var f = l.value;
            if (!(i && f in i)) throw new el(f, s);
            var d = i[f];
            if (l.type === u.argument) {
              (d && "string" != typeof d && "number" != typeof d) ||
                (d =
                  "string" == typeof d || "number" == typeof d
                    ? String(d)
                    : ""),
                a.push({
                  type: "string" == typeof d ? p.literal : p.object,
                  value: d,
                });
              continue;
            }
            if (w(l)) {
              var m =
                "string" == typeof l.style
                  ? r.date[l.style]
                  : B(l.style)
                  ? l.style.parsedOptions
                  : void 0;
              a.push({
                type: p.literal,
                value: n.getDateTimeFormat(t, m).format(d),
              });
              continue;
            }
            if (v(l)) {
              var m =
                "string" == typeof l.style
                  ? r.time[l.style]
                  : B(l.style)
                  ? l.style.parsedOptions
                  : r.time.medium;
              a.push({
                type: p.literal,
                value: n.getDateTimeFormat(t, m).format(d),
              });
              continue;
            }
            if (b(l)) {
              var m =
                "string" == typeof l.style
                  ? r.number[l.style]
                  : x(l.style)
                  ? l.style.parsedOptions
                  : void 0;
              m && m.scale && (d *= m.scale || 1),
                a.push({
                  type: p.literal,
                  value: n.getNumberFormat(t, m).format(d),
                });
              continue;
            }
            if (C(l)) {
              var g = l.children,
                I = l.value,
                S = i[I];
              if (!ef(S)) throw new eu(I, "function", s);
              var P = S(
                ed(g, t, n, r, i, o).map(function (e) {
                  return e.value;
                })
              );
              Array.isArray(P) || (P = [P]),
                a.push.apply(
                  a,
                  P.map(function (e) {
                    return {
                      type: "string" == typeof e ? p.literal : p.object,
                      value: e,
                    };
                  })
                );
            }
            if (A(l)) {
              var T = l.options[d] || l.options.other;
              if (!T) throw new ec(l.value, d, Object.keys(l.options), s);
              a.push.apply(a, ed(T.value, t, n, r, i));
              continue;
            }
            if (E(l)) {
              var T = l.options["=".concat(d)];
              if (!T) {
                if (!Intl.PluralRules)
                  throw new ea(
                    'Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',
                    h.MISSING_INTL_API,
                    s
                  );
                var O = n
                  .getPluralRules(t, { type: l.pluralType })
                  .select(d - (l.offset || 0));
                T = l.options[O] || l.options.other;
              }
              if (!T) throw new ec(l.value, d, Object.keys(l.options), s);
              a.push.apply(a, ed(T.value, t, n, r, i, d - (l.offset || 0)));
              continue;
            }
          }
          return a.length < 2
            ? a
            : a.reduce(function (e, t) {
                var n = e[e.length - 1];
                return (
                  n && n.type === p.literal && t.type === p.literal
                    ? (n.value += t.value)
                    : e.push(t),
                  e
                );
              }, []);
        }
        function eh(e) {
          return {
            create: function () {
              return {
                get: function (t) {
                  return e[t];
                },
                set: function (t, n) {
                  e[t] = n;
                },
              };
            },
          };
        }
        ((a = p || (p = {}))[(a.literal = 0)] = "literal"),
          (a[(a.object = 1)] = "object");
        var ep = (function () {
            function e(t, n, r, i) {
              void 0 === n && (n = e.defaultLocale);
              var o,
                s,
                a = this;
              if (
                ((this.formatterCache = {
                  number: {},
                  dateTime: {},
                  pluralRules: {},
                }),
                (this.format = function (e) {
                  var t = a.formatToParts(e);
                  if (1 === t.length) return t[0].value;
                  var n = t.reduce(function (e, t) {
                    return (
                      e.length &&
                      t.type === p.literal &&
                      "string" == typeof e[e.length - 1]
                        ? (e[e.length - 1] += t.value)
                        : e.push(t.value),
                      e
                    );
                  }, []);
                  return n.length <= 1 ? n[0] || "" : n;
                }),
                (this.formatToParts = function (e) {
                  return ed(
                    a.ast,
                    a.locales,
                    a.formatters,
                    a.formats,
                    e,
                    void 0,
                    a.message
                  );
                }),
                (this.resolvedOptions = function () {
                  var e;
                  return {
                    locale:
                      (null === (e = a.resolvedLocale) || void 0 === e
                        ? void 0
                        : e.toString()) ||
                      Intl.NumberFormat.supportedLocalesOf(a.locales)[0],
                  };
                }),
                (this.getAst = function () {
                  return a.ast;
                }),
                (this.locales = n),
                (this.resolvedLocale = e.resolveLocale(n)),
                "string" == typeof t)
              ) {
                if (((this.message = t), !e.__parse))
                  throw TypeError(
                    "IntlMessageFormat.__parse must be set to process `message` of type `string`"
                  );
                var c = i || {},
                  u = (c.formatters, (0, m._T)(c, ["formatters"]));
                this.ast = e.__parse(
                  t,
                  (0, m.pi)((0, m.pi)({}, u), { locale: this.resolvedLocale })
                );
              } else this.ast = t;
              if (!Array.isArray(this.ast))
                throw TypeError(
                  "A message must be provided as a String or AST."
                );
              (this.formats =
                ((o = e.formats),
                r
                  ? Object.keys(o).reduce(function (e, t) {
                      var n, i;
                      return (
                        (e[t] =
                          ((n = o[t]),
                          (i = r[t])
                            ? (0, m.pi)(
                                (0, m.pi)((0, m.pi)({}, n || {}), i || {}),
                                Object.keys(n).reduce(function (e, t) {
                                  return (
                                    (e[t] = (0, m.pi)(
                                      (0, m.pi)({}, n[t]),
                                      i[t] || {}
                                    )),
                                    e
                                  );
                                }, {})
                              )
                            : n)),
                        e
                      );
                    }, (0, m.pi)({}, o))
                  : o)),
                (this.formatters =
                  (i && i.formatters) ||
                  (void 0 === (s = this.formatterCache) &&
                    (s = { number: {}, dateTime: {}, pluralRules: {} }),
                  {
                    getNumberFormat: (0, g.memoize)(
                      function () {
                        for (var e, t = [], n = 0; n < arguments.length; n++)
                          t[n] = arguments[n];
                        return new ((e = Intl.NumberFormat).bind.apply(
                          e,
                          (0, m.ev)([void 0], t, !1)
                        ))();
                      },
                      { cache: eh(s.number), strategy: g.strategies.variadic }
                    ),
                    getDateTimeFormat: (0, g.memoize)(
                      function () {
                        for (var e, t = [], n = 0; n < arguments.length; n++)
                          t[n] = arguments[n];
                        return new ((e = Intl.DateTimeFormat).bind.apply(
                          e,
                          (0, m.ev)([void 0], t, !1)
                        ))();
                      },
                      { cache: eh(s.dateTime), strategy: g.strategies.variadic }
                    ),
                    getPluralRules: (0, g.memoize)(
                      function () {
                        for (var e, t = [], n = 0; n < arguments.length; n++)
                          t[n] = arguments[n];
                        return new ((e = Intl.PluralRules).bind.apply(
                          e,
                          (0, m.ev)([void 0], t, !1)
                        ))();
                      },
                      {
                        cache: eh(s.pluralRules),
                        strategy: g.strategies.variadic,
                      }
                    ),
                  }));
            }
            return (
              Object.defineProperty(e, "defaultLocale", {
                get: function () {
                  return (
                    e.memoizedDefaultLocale ||
                      (e.memoizedDefaultLocale =
                        new Intl.NumberFormat().resolvedOptions().locale),
                    e.memoizedDefaultLocale
                  );
                },
                enumerable: !1,
                configurable: !0,
              }),
              (e.memoizedDefaultLocale = null),
              (e.resolveLocale = function (e) {
                if (void 0 !== Intl.Locale) {
                  var t = Intl.NumberFormat.supportedLocalesOf(e);
                  return new Intl.Locale(
                    t.length > 0 ? t[0] : "string" == typeof e ? e : e[0]
                  );
                }
              }),
              (e.__parse = es),
              (e.formats = {
                number: {
                  integer: { maximumFractionDigits: 0 },
                  currency: { style: "currency" },
                  percent: { style: "percent" },
                },
                date: {
                  short: { month: "numeric", day: "numeric", year: "2-digit" },
                  medium: { month: "short", day: "numeric", year: "numeric" },
                  long: { month: "long", day: "numeric", year: "numeric" },
                  full: {
                    weekday: "long",
                    month: "long",
                    day: "numeric",
                    year: "numeric",
                  },
                },
                time: {
                  short: { hour: "numeric", minute: "numeric" },
                  medium: {
                    hour: "numeric",
                    minute: "numeric",
                    second: "numeric",
                  },
                  long: {
                    hour: "numeric",
                    minute: "numeric",
                    second: "numeric",
                    timeZoneName: "short",
                  },
                  full: {
                    hour: "numeric",
                    minute: "numeric",
                    second: "numeric",
                    timeZoneName: "short",
                  },
                },
              }),
              e
            );
          })(),
          em = ep;
      },
      52680: function (e, t) {
        "use strict";
        function n() {
          return (n = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n)
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }).apply(null, arguments);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.extends = n);
      },
      42586: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(23345),
          i = n(12579),
          o = n(73559),
          s = n(2791);
        (t.useFormatter = r.useFormatter),
          (t.useTranslations = r.useTranslations),
          (t.useLocale = i.default),
          (t.NextIntlClientProvider = o.default),
          Object.keys(s).forEach(function (e) {
            "default" === e ||
              Object.prototype.hasOwnProperty.call(t, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function () {
                  return s[e];
                },
              });
          });
      },
      23345: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(2791);
        function i(e, t) {
          return function () {
            try {
              return t(...arguments);
            } catch (e) {
              throw Error(void 0);
            }
          };
        }
        let o = i(0, r.useTranslations),
          s = i(0, r.useFormatter);
        (t.useFormatter = s),
          (t.useTranslations = o),
          Object.keys(r).forEach(function (e) {
            "default" === e ||
              Object.prototype.hasOwnProperty.call(t, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function () {
                  return r[e];
                },
              });
          });
      },
      12579: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(70304),
          i = n(63513),
          o = n(42132);
        t.default = function () {
          let e;
          let t = r.useParams();
          try {
            e = i.useLocale();
          } catch (n) {
            if (
              "string" != typeof (null == t ? void 0 : t[o.LOCALE_SEGMENT_NAME])
            )
              throw n;
            e = t[o.LOCALE_SEGMENT_NAME];
          }
          return e;
        };
      },
      73559: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(52680),
          i = n(2265),
          o = n(54909),
          s = i && i.__esModule ? i : { default: i };
        t.default = function (e) {
          let { locale: t, ...n } = e;
          if (!t) throw Error(void 0);
          return s.default.createElement(
            o.IntlProvider,
            r.extends({ locale: t }, n)
          );
        };
      },
      42132: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.HEADER_LOCALE_NAME = "X-NEXT-INTL-LOCALE"),
          (t.LOCALE_SEGMENT_NAME = "locale");
      },
      33145: function (e, t, n) {
        "use strict";
        n.d(t, {
          default: function () {
            return i.a;
          },
        });
        var r = n(48461),
          i = n.n(r);
      },
      70304: function (e, t, n) {
        "use strict";
        n.r(t);
        var r = n(35475),
          i = {};
        for (var o in r)
          "default" !== o &&
            (i[o] = function (e) {
              return r[e];
            }.bind(0, o));
        n.d(t, i);
      },
      12119: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "$", {
          enumerable: !0,
          get: function () {
            return i;
          },
        });
        let r = n(83079);
        function i(e) {
          let { createServerReference: t } = n(6671);
          return t(e, r.callServer);
        }
      },
      65878: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "Image", {
            enumerable: !0,
            get: function () {
              return w;
            },
          });
        let r = n(47043),
          i = n(53099),
          o = n(57437),
          s = i._(n(2265)),
          a = r._(n(54887)),
          c = r._(n(38293)),
          u = n(55346),
          l = n(90128),
          f = n(62589);
        n(31765);
        let d = n(25523),
          h = r._(n(5084)),
          p = {
            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
            path: "/_next/image",
            loader: "default",
            dangerouslyAllowSVG: !1,
            unoptimized: !1,
          };
        function m(e, t, n, r, i, o, s) {
          let a = null == e ? void 0 : e.src;
          e &&
            e["data-loaded-src"] !== a &&
            ((e["data-loaded-src"] = a),
            ("decode" in e ? e.decode() : Promise.resolve())
              .catch(() => {})
              .then(() => {
                if (e.parentElement && e.isConnected) {
                  if (
                    ("empty" !== t && i(!0), null == n ? void 0 : n.current)
                  ) {
                    let t = new Event("load");
                    Object.defineProperty(t, "target", {
                      writable: !1,
                      value: e,
                    });
                    let r = !1,
                      i = !1;
                    n.current({
                      ...t,
                      nativeEvent: t,
                      currentTarget: e,
                      target: e,
                      isDefaultPrevented: () => r,
                      isPropagationStopped: () => i,
                      persist: () => {},
                      preventDefault: () => {
                        (r = !0), t.preventDefault();
                      },
                      stopPropagation: () => {
                        (i = !0), t.stopPropagation();
                      },
                    });
                  }
                  (null == r ? void 0 : r.current) && r.current(e);
                }
              }));
        }
        function g(e) {
          return s.use ? { fetchPriority: e } : { fetchpriority: e };
        }
        "undefined" == typeof window && (globalThis.__NEXT_IMAGE_IMPORTED = !0);
        let y = (0, s.forwardRef)((e, t) => {
          let {
            src: n,
            srcSet: r,
            sizes: i,
            height: a,
            width: c,
            decoding: u,
            className: l,
            style: f,
            fetchPriority: d,
            placeholder: h,
            loading: p,
            unoptimized: y,
            fill: b,
            onLoadRef: w,
            onLoadingCompleteRef: v,
            setBlurComplete: A,
            setShowAltText: E,
            sizesInput: C,
            onLoad: x,
            onError: B,
            ...I
          } = e;
          return (0, o.jsx)("img", {
            ...I,
            ...g(d),
            loading: p,
            width: c,
            height: a,
            decoding: u,
            "data-nimg": b ? "fill" : "1",
            className: l,
            style: f,
            sizes: i,
            srcSet: r,
            src: n,
            ref: (0, s.useCallback)(
              (e) => {
                t &&
                  ("function" == typeof t
                    ? t(e)
                    : "object" == typeof t && (t.current = e)),
                  e &&
                    (B && (e.src = e.src),
                    e.complete && m(e, h, w, v, A, y, C));
              },
              [n, h, w, v, A, B, y, C, t]
            ),
            onLoad: (e) => {
              m(e.currentTarget, h, w, v, A, y, C);
            },
            onError: (e) => {
              E(!0), "empty" !== h && A(!0), B && B(e);
            },
          });
        });
        function b(e) {
          let { isAppRouter: t, imgAttributes: n } = e,
            r = {
              as: "image",
              imageSrcSet: n.srcSet,
              imageSizes: n.sizes,
              crossOrigin: n.crossOrigin,
              referrerPolicy: n.referrerPolicy,
              ...g(n.fetchPriority),
            };
          return t && a.default.preload
            ? (a.default.preload(n.src, r), null)
            : (0, o.jsx)(c.default, {
                children: (0, o.jsx)(
                  "link",
                  { rel: "preload", href: n.srcSet ? void 0 : n.src, ...r },
                  "__nimg-" + n.src + n.srcSet + n.sizes
                ),
              });
        }
        let w = (0, s.forwardRef)((e, t) => {
          let n = (0, s.useContext)(d.RouterContext),
            r = (0, s.useContext)(f.ImageConfigContext),
            i = (0, s.useMemo)(() => {
              let e = p || r || l.imageConfigDefault,
                t = [...e.deviceSizes, ...e.imageSizes].sort((e, t) => e - t),
                n = e.deviceSizes.sort((e, t) => e - t);
              return { ...e, allSizes: t, deviceSizes: n };
            }, [r]),
            { onLoad: a, onLoadingComplete: c } = e,
            m = (0, s.useRef)(a);
          (0, s.useEffect)(() => {
            m.current = a;
          }, [a]);
          let g = (0, s.useRef)(c);
          (0, s.useEffect)(() => {
            g.current = c;
          }, [c]);
          let [w, v] = (0, s.useState)(!1),
            [A, E] = (0, s.useState)(!1),
            { props: C, meta: x } = (0, u.getImgProps)(e, {
              defaultLoader: h.default,
              imgConf: i,
              blurComplete: w,
              showAltText: A,
            });
          return (0, o.jsxs)(o.Fragment, {
            children: [
              (0, o.jsx)(y, {
                ...C,
                unoptimized: x.unoptimized,
                placeholder: x.placeholder,
                fill: x.fill,
                onLoadRef: m,
                onLoadingCompleteRef: g,
                setBlurComplete: v,
                setShowAltText: E,
                sizesInput: e.sizes,
                ref: t,
              }),
              x.priority
                ? (0, o.jsx)(b, { isAppRouter: !n, imgAttributes: C })
                : null,
            ],
          });
        });
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
      },
      91436: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "AmpStateContext", {
            enumerable: !0,
            get: function () {
              return r;
            },
          });
        let r = n(47043)._(n(2265)).default.createContext({});
      },
      23964: function (e, t) {
        "use strict";
        function n(e) {
          let {
            ampFirst: t = !1,
            hybrid: n = !1,
            hasQuery: r = !1,
          } = void 0 === e ? {} : e;
          return t || (n && r);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "isInAmpMode", {
            enumerable: !0,
            get: function () {
              return n;
            },
          });
      },
      55346: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "getImgProps", {
            enumerable: !0,
            get: function () {
              return a;
            },
          }),
          n(31765);
        let r = n(96496),
          i = n(90128);
        function o(e) {
          return void 0 !== e.default;
        }
        function s(e) {
          return void 0 === e
            ? e
            : "number" == typeof e
            ? Number.isFinite(e)
              ? e
              : NaN
            : "string" == typeof e && /^[0-9]+$/.test(e)
            ? parseInt(e, 10)
            : NaN;
        }
        function a(e, t) {
          var n;
          let a,
            c,
            u,
            {
              src: l,
              sizes: f,
              unoptimized: d = !1,
              priority: h = !1,
              loading: p,
              className: m,
              quality: g,
              width: y,
              height: b,
              fill: w = !1,
              style: v,
              overrideSrc: A,
              onLoad: E,
              onLoadingComplete: C,
              placeholder: x = "empty",
              blurDataURL: B,
              fetchPriority: I,
              layout: S,
              objectFit: P,
              objectPosition: T,
              lazyBoundary: O,
              lazyRoot: k,
              ...R
            } = e,
            {
              imgConf: N,
              showAltText: M,
              blurComplete: L,
              defaultLoader: F,
            } = t,
            U = N || i.imageConfigDefault;
          if ("allSizes" in U) a = U;
          else {
            let e = [...U.deviceSizes, ...U.imageSizes].sort((e, t) => e - t),
              t = U.deviceSizes.sort((e, t) => e - t);
            a = { ...U, allSizes: e, deviceSizes: t };
          }
          if (void 0 === F)
            throw Error(
              "images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config"
            );
          let D = R.loader || F;
          delete R.loader, delete R.srcSet;
          let _ = "__next_img_default" in D;
          if (_) {
            if ("custom" === a.loader)
              throw Error(
                'Image with src "' +
                  l +
                  '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader'
              );
          } else {
            let e = D;
            D = (t) => {
              let { config: n, ...r } = t;
              return e(r);
            };
          }
          if (S) {
            "fill" === S && (w = !0);
            let e = {
              intrinsic: { maxWidth: "100%", height: "auto" },
              responsive: { width: "100%", height: "auto" },
            }[S];
            e && (v = { ...v, ...e });
            let t = { responsive: "100vw", fill: "100vw" }[S];
            t && !f && (f = t);
          }
          let j = "",
            G = s(y),
            H = s(b);
          if ("object" == typeof (n = l) && (o(n) || void 0 !== n.src)) {
            let e = o(l) ? l.default : l;
            if (!e.src)
              throw Error(
                "An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " +
                  JSON.stringify(e)
              );
            if (!e.height || !e.width)
              throw Error(
                "An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " +
                  JSON.stringify(e)
              );
            if (
              ((c = e.blurWidth),
              (u = e.blurHeight),
              (B = B || e.blurDataURL),
              (j = e.src),
              !w)
            ) {
              if (G || H) {
                if (G && !H) {
                  let t = G / e.width;
                  H = Math.round(e.height * t);
                } else if (!G && H) {
                  let t = H / e.height;
                  G = Math.round(e.width * t);
                }
              } else (G = e.width), (H = e.height);
            }
          }
          let q = !h && ("lazy" === p || void 0 === p);
          (!(l = "string" == typeof l ? l : j) ||
            l.startsWith("data:") ||
            l.startsWith("blob:")) &&
            ((d = !0), (q = !1)),
            a.unoptimized && (d = !0),
            _ && l.endsWith(".svg") && !a.dangerouslyAllowSVG && (d = !0),
            h && (I = "high");
          let z = s(g),
            Q = Object.assign(
              w
                ? {
                    position: "absolute",
                    height: "100%",
                    width: "100%",
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0,
                    objectFit: P,
                    objectPosition: T,
                  }
                : {},
              M ? {} : { color: "transparent" },
              v
            ),
            W =
              L || "empty" === x
                ? null
                : "blur" === x
                ? 'url("data:image/svg+xml;charset=utf-8,' +
                  (0, r.getImageBlurSvg)({
                    widthInt: G,
                    heightInt: H,
                    blurWidth: c,
                    blurHeight: u,
                    blurDataURL: B || "",
                    objectFit: Q.objectFit,
                  }) +
                  '")'
                : 'url("' + x + '")',
            V = W
              ? {
                  backgroundSize: Q.objectFit || "cover",
                  backgroundPosition: Q.objectPosition || "50% 50%",
                  backgroundRepeat: "no-repeat",
                  backgroundImage: W,
                }
              : {},
            K = (function (e) {
              let {
                config: t,
                src: n,
                unoptimized: r,
                width: i,
                quality: o,
                sizes: s,
                loader: a,
              } = e;
              if (r) return { src: n, srcSet: void 0, sizes: void 0 };
              let { widths: c, kind: u } = (function (e, t, n) {
                  let { deviceSizes: r, allSizes: i } = e;
                  if (n) {
                    let e = /(^|\s)(1?\d?\d)vw/g,
                      t = [];
                    for (let r; (r = e.exec(n)); r) t.push(parseInt(r[2]));
                    if (t.length) {
                      let e = 0.01 * Math.min(...t);
                      return {
                        widths: i.filter((t) => t >= r[0] * e),
                        kind: "w",
                      };
                    }
                    return { widths: i, kind: "w" };
                  }
                  return "number" != typeof t
                    ? { widths: r, kind: "w" }
                    : {
                        widths: [
                          ...new Set(
                            [t, 2 * t].map(
                              (e) => i.find((t) => t >= e) || i[i.length - 1]
                            )
                          ),
                        ],
                        kind: "x",
                      };
                })(t, i, s),
                l = c.length - 1;
              return {
                sizes: s || "w" !== u ? s : "100vw",
                srcSet: c
                  .map(
                    (e, r) =>
                      a({ config: t, src: n, quality: o, width: e }) +
                      " " +
                      ("w" === u ? e : r + 1) +
                      u
                  )
                  .join(", "),
                src: a({ config: t, src: n, quality: o, width: c[l] }),
              };
            })({
              config: a,
              src: l,
              unoptimized: d,
              width: G,
              quality: z,
              sizes: f,
              loader: D,
            });
          return {
            props: {
              ...R,
              loading: q ? "lazy" : p,
              fetchPriority: I,
              width: G,
              height: H,
              decoding: "async",
              className: m,
              style: { ...Q, ...V },
              sizes: K.sizes,
              srcSet: K.srcSet,
              src: A || K.src,
            },
            meta: { unoptimized: d, priority: h, placeholder: x, fill: w },
          };
        }
      },
      38293: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (function (e, t) {
            for (var n in t)
              Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
          })(t, {
            default: function () {
              return m;
            },
            defaultHead: function () {
              return f;
            },
          });
        let r = n(47043),
          i = n(53099),
          o = n(57437),
          s = i._(n(2265)),
          a = r._(n(17421)),
          c = n(91436),
          u = n(48701),
          l = n(23964);
        function f(e) {
          void 0 === e && (e = !1);
          let t = [(0, o.jsx)("meta", { charSet: "utf-8" })];
          return (
            e ||
              t.push(
                (0, o.jsx)("meta", {
                  name: "viewport",
                  content: "width=device-width",
                })
              ),
            t
          );
        }
        function d(e, t) {
          return "string" == typeof t || "number" == typeof t
            ? e
            : t.type === s.default.Fragment
            ? e.concat(
                s.default.Children.toArray(t.props.children).reduce(
                  (e, t) =>
                    "string" == typeof t || "number" == typeof t
                      ? e
                      : e.concat(t),
                  []
                )
              )
            : e.concat(t);
        }
        n(31765);
        let h = ["name", "httpEquiv", "charSet", "itemProp"];
        function p(e, t) {
          let { inAmpMode: n } = t;
          return e
            .reduce(d, [])
            .reverse()
            .concat(f(n).reverse())
            .filter(
              (function () {
                let e = new Set(),
                  t = new Set(),
                  n = new Set(),
                  r = {};
                return (i) => {
                  let o = !0,
                    s = !1;
                  if (
                    i.key &&
                    "number" != typeof i.key &&
                    i.key.indexOf("$") > 0
                  ) {
                    s = !0;
                    let t = i.key.slice(i.key.indexOf("$") + 1);
                    e.has(t) ? (o = !1) : e.add(t);
                  }
                  switch (i.type) {
                    case "title":
                    case "base":
                      t.has(i.type) ? (o = !1) : t.add(i.type);
                      break;
                    case "meta":
                      for (let e = 0, t = h.length; e < t; e++) {
                        let t = h[e];
                        if (i.props.hasOwnProperty(t)) {
                          if ("charSet" === t) n.has(t) ? (o = !1) : n.add(t);
                          else {
                            let e = i.props[t],
                              n = r[t] || new Set();
                            ("name" !== t || !s) && n.has(e)
                              ? (o = !1)
                              : (n.add(e), (r[t] = n));
                          }
                        }
                      }
                  }
                  return o;
                };
              })()
            )
            .reverse()
            .map((e, t) => {
              let r = e.key || t;
              if (
                !n &&
                "link" === e.type &&
                e.props.href &&
                [
                  "https://fonts.googleapis.com/css",
                  "https://use.typekit.net/",
                ].some((t) => e.props.href.startsWith(t))
              ) {
                let t = { ...(e.props || {}) };
                return (
                  (t["data-href"] = t.href),
                  (t.href = void 0),
                  (t["data-optimized-fonts"] = !0),
                  s.default.cloneElement(e, t)
                );
              }
              return s.default.cloneElement(e, { key: r });
            });
        }
        let m = function (e) {
          let { children: t } = e,
            n = (0, s.useContext)(c.AmpStateContext),
            r = (0, s.useContext)(u.HeadManagerContext);
          return (0, o.jsx)(a.default, {
            reduceComponentsToState: p,
            headManager: r,
            inAmpMode: (0, l.isInAmpMode)(n),
            children: t,
          });
        };
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
      },
      96496: function (e, t) {
        "use strict";
        function n(e) {
          let {
              widthInt: t,
              heightInt: n,
              blurWidth: r,
              blurHeight: i,
              blurDataURL: o,
              objectFit: s,
            } = e,
            a = r ? 40 * r : t,
            c = i ? 40 * i : n,
            u = a && c ? "viewBox='0 0 " + a + " " + c + "'" : "";
          return (
            "%3Csvg xmlns='http://www.w3.org/2000/svg' " +
            u +
            "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" +
            (u
              ? "none"
              : "contain" === s
              ? "xMidYMid"
              : "cover" === s
              ? "xMidYMid slice"
              : "none") +
            "' style='filter: url(%23b);' href='" +
            o +
            "'/%3E%3C/svg%3E"
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "getImageBlurSvg", {
            enumerable: !0,
            get: function () {
              return n;
            },
          });
      },
      62589: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "ImageConfigContext", {
            enumerable: !0,
            get: function () {
              return o;
            },
          });
        let r = n(47043)._(n(2265)),
          i = n(90128),
          o = r.default.createContext(i.imageConfigDefault);
      },
      90128: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (function (e, t) {
            for (var n in t)
              Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
          })(t, {
            VALID_LOADERS: function () {
              return n;
            },
            imageConfigDefault: function () {
              return r;
            },
          });
        let n = ["default", "imgix", "cloudinary", "akamai", "custom"],
          r = {
            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
            path: "/_next/image",
            loader: "default",
            loaderFile: "",
            domains: [],
            disableStaticImages: !1,
            minimumCacheTTL: 60,
            formats: ["image/webp"],
            dangerouslyAllowSVG: !1,
            contentSecurityPolicy:
              "script-src 'none'; frame-src 'none'; sandbox;",
            contentDispositionType: "inline",
            remotePatterns: [],
            unoptimized: !1,
          };
      },
      48461: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (function (e, t) {
            for (var n in t)
              Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
          })(t, {
            default: function () {
              return c;
            },
            getImageProps: function () {
              return a;
            },
          });
        let r = n(47043),
          i = n(55346),
          o = n(65878),
          s = r._(n(5084));
        function a(e) {
          let { props: t } = (0, i.getImgProps)(e, {
            defaultLoader: s.default,
            imgConf: {
              deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
              imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
              path: "/_next/image",
              loader: "default",
              dangerouslyAllowSVG: !1,
              unoptimized: !1,
            },
          });
          for (let [e, n] of Object.entries(t)) void 0 === n && delete t[e];
          return { props: t };
        }
        let c = o.Image;
      },
      5084: function (e, t) {
        "use strict";
        function n(e) {
          let { config: t, src: n, width: r, quality: i } = e;
          return n;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return r;
            },
          }),
          (n.__next_img_default = !0);
        let r = n;
      },
      17421: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return a;
            },
          });
        let r = n(2265),
          i = "undefined" == typeof window,
          o = i ? () => {} : r.useLayoutEffect,
          s = i ? () => {} : r.useEffect;
        function a(e) {
          let { headManager: t, reduceComponentsToState: n } = e;
          function a() {
            if (t && t.mountedInstances) {
              let i = r.Children.toArray(
                Array.from(t.mountedInstances).filter(Boolean)
              );
              t.updateHead(n(i, e));
            }
          }
          if (i) {
            var c;
            null == t || null == (c = t.mountedInstances) || c.add(e.children),
              a();
          }
          return (
            o(() => {
              var n;
              return (
                null == t ||
                  null == (n = t.mountedInstances) ||
                  n.add(e.children),
                () => {
                  var n;
                  null == t ||
                    null == (n = t.mountedInstances) ||
                    n.delete(e.children);
                }
              );
            }),
            o(
              () => (
                t && (t._pendingUpdate = a),
                () => {
                  t && (t._pendingUpdate = a);
                }
              )
            ),
            s(
              () => (
                t &&
                  t._pendingUpdate &&
                  (t._pendingUpdate(), (t._pendingUpdate = null)),
                () => {
                  t &&
                    t._pendingUpdate &&
                    (t._pendingUpdate(), (t._pendingUpdate = null));
                }
              )
            ),
            null
          );
        }
      },
      87922: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return $;
          },
        });
        var r,
          i,
          o,
          s,
          a,
          c,
          u,
          l = n(5853),
          f = n(2265),
          d = "right-scroll-bar-position",
          h = "width-before-scroll-bar";
        function p(e, t) {
          return "function" == typeof e ? e(t) : e && (e.current = t), e;
        }
        var m = "undefined" != typeof window ? f.useLayoutEffect : f.useEffect,
          g = new WeakMap(),
          y =
            (void 0 === r && (r = {}),
            ((void 0 === i &&
              (i = function (e) {
                return e;
              }),
            (o = []),
            (s = !1),
            (a = {
              read: function () {
                if (s)
                  throw Error(
                    "Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`."
                  );
                return o.length ? o[o.length - 1] : null;
              },
              useMedium: function (e) {
                var t = i(e, s);
                return (
                  o.push(t),
                  function () {
                    o = o.filter(function (e) {
                      return e !== t;
                    });
                  }
                );
              },
              assignSyncMedium: function (e) {
                for (s = !0; o.length; ) {
                  var t = o;
                  (o = []), t.forEach(e);
                }
                o = {
                  push: function (t) {
                    return e(t);
                  },
                  filter: function () {
                    return o;
                  },
                };
              },
              assignMedium: function (e) {
                s = !0;
                var t = [];
                if (o.length) {
                  var n = o;
                  (o = []), n.forEach(e), (t = o);
                }
                var r = function () {
                    var n = t;
                    (t = []), n.forEach(e);
                  },
                  i = function () {
                    return Promise.resolve().then(r);
                  };
                i(),
                  (o = {
                    push: function (e) {
                      t.push(e), i();
                    },
                    filter: function (e) {
                      return (t = t.filter(e)), o;
                    },
                  });
              },
            })).options = (0, l.pi)({ async: !0, ssr: !1 }, r)),
            a),
          b = function () {},
          w = f.forwardRef(function (e, t) {
            var n,
              r,
              i,
              o,
              s = f.useRef(null),
              a = f.useState({
                onScrollCapture: b,
                onWheelCapture: b,
                onTouchMoveCapture: b,
              }),
              c = a[0],
              u = a[1],
              d = e.forwardProps,
              h = e.children,
              w = e.className,
              v = e.removeScrollBar,
              A = e.enabled,
              E = e.shards,
              C = e.sideCar,
              x = e.noIsolation,
              B = e.inert,
              I = e.allowPinchZoom,
              S = e.as,
              P = e.gapMode,
              T = (0, l._T)(e, [
                "forwardProps",
                "children",
                "className",
                "removeScrollBar",
                "enabled",
                "shards",
                "sideCar",
                "noIsolation",
                "inert",
                "allowPinchZoom",
                "as",
                "gapMode",
              ]),
              O =
                ((n = [s, t]),
                (r = function (e) {
                  return n.forEach(function (t) {
                    return p(t, e);
                  });
                }),
                ((i = (0, f.useState)(function () {
                  return {
                    value: null,
                    callback: r,
                    facade: {
                      get current() {
                        return i.value;
                      },
                      set current(value) {
                        var e = i.value;
                        e !== value &&
                          ((i.value = value), i.callback(value, e));
                      },
                    },
                  };
                })[0]).callback = r),
                (o = i.facade),
                m(
                  function () {
                    var e = g.get(o);
                    if (e) {
                      var t = new Set(e),
                        r = new Set(n),
                        i = o.current;
                      t.forEach(function (e) {
                        r.has(e) || p(e, null);
                      }),
                        r.forEach(function (e) {
                          t.has(e) || p(e, i);
                        });
                    }
                    g.set(o, n);
                  },
                  [n]
                ),
                o),
              k = (0, l.pi)((0, l.pi)({}, T), c);
            return f.createElement(
              f.Fragment,
              null,
              A &&
                f.createElement(C, {
                  sideCar: y,
                  removeScrollBar: v,
                  shards: E,
                  noIsolation: x,
                  inert: B,
                  setCallbacks: u,
                  allowPinchZoom: !!I,
                  lockRef: s,
                  gapMode: P,
                }),
              d
                ? f.cloneElement(
                    f.Children.only(h),
                    (0, l.pi)((0, l.pi)({}, k), { ref: O })
                  )
                : f.createElement(
                    void 0 === S ? "div" : S,
                    (0, l.pi)({}, k, { className: w, ref: O }),
                    h
                  )
            );
          });
        (w.defaultProps = { enabled: !0, removeScrollBar: !0, inert: !1 }),
          (w.classNames = { fullWidth: h, zeroRight: d });
        var v = function (e) {
          var t = e.sideCar,
            n = (0, l._T)(e, ["sideCar"]);
          if (!t)
            throw Error(
              "Sidecar: please provide `sideCar` property to import the right car"
            );
          var r = t.read();
          if (!r) throw Error("Sidecar medium not found");
          return f.createElement(r, (0, l.pi)({}, n));
        };
        v.isSideCarExport = !0;
        var A = function () {
            var e = 0,
              t = null;
            return {
              add: function (r) {
                if (
                  0 == e &&
                  (t = (function () {
                    if (!document) return null;
                    var e = document.createElement("style");
                    e.type = "text/css";
                    var t = u || n.nc;
                    return t && e.setAttribute("nonce", t), e;
                  })())
                ) {
                  var i, o;
                  (i = t).styleSheet
                    ? (i.styleSheet.cssText = r)
                    : i.appendChild(document.createTextNode(r)),
                    (o = t),
                    (
                      document.head || document.getElementsByTagName("head")[0]
                    ).appendChild(o);
                }
                e++;
              },
              remove: function () {
                --e ||
                  !t ||
                  (t.parentNode && t.parentNode.removeChild(t), (t = null));
              },
            };
          },
          E = function () {
            var e = A();
            return function (t, n) {
              f.useEffect(
                function () {
                  return (
                    e.add(t),
                    function () {
                      e.remove();
                    }
                  );
                },
                [t && n]
              );
            };
          },
          C = function () {
            var e = E();
            return function (t) {
              return e(t.styles, t.dynamic), null;
            };
          },
          x = { left: 0, top: 0, right: 0, gap: 0 },
          B = function (e) {
            return parseInt(e || "", 10) || 0;
          },
          I = function (e) {
            var t = window.getComputedStyle(document.body),
              n = t["padding" === e ? "paddingLeft" : "marginLeft"],
              r = t["padding" === e ? "paddingTop" : "marginTop"],
              i = t["padding" === e ? "paddingRight" : "marginRight"];
            return [B(n), B(r), B(i)];
          },
          S = function (e) {
            if ((void 0 === e && (e = "margin"), "undefined" == typeof window))
              return x;
            var t = I(e),
              n = document.documentElement.clientWidth,
              r = window.innerWidth;
            return {
              left: t[0],
              top: t[1],
              right: t[2],
              gap: Math.max(0, r - n + t[2] - t[0]),
            };
          },
          P = C(),
          T = "data-scroll-locked",
          O = function (e, t, n, r) {
            var i = e.left,
              o = e.top,
              s = e.right,
              a = e.gap;
            return (
              void 0 === n && (n = "margin"),
              "\n  ."
                .concat("with-scroll-bars-hidden", " {\n   overflow: hidden ")
                .concat(r, ";\n   padding-right: ")
                .concat(a, "px ")
                .concat(r, ";\n  }\n  body[")
                .concat(T, "] {\n    overflow: hidden ")
                .concat(r, ";\n    overscroll-behavior: contain;\n    ")
                .concat(
                  [
                    t && "position: relative ".concat(r, ";"),
                    "margin" === n &&
                      "\n    padding-left: "
                        .concat(i, "px;\n    padding-top: ")
                        .concat(o, "px;\n    padding-right: ")
                        .concat(
                          s,
                          "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: "
                        )
                        .concat(a, "px ")
                        .concat(r, ";\n    "),
                    "padding" === n &&
                      "padding-right: ".concat(a, "px ").concat(r, ";"),
                  ]
                    .filter(Boolean)
                    .join(""),
                  "\n  }\n  \n  ."
                )
                .concat(d, " {\n    right: ")
                .concat(a, "px ")
                .concat(r, ";\n  }\n  \n  .")
                .concat(h, " {\n    margin-right: ")
                .concat(a, "px ")
                .concat(r, ";\n  }\n  \n  .")
                .concat(d, " .")
                .concat(d, " {\n    right: 0 ")
                .concat(r, ";\n  }\n  \n  .")
                .concat(h, " .")
                .concat(h, " {\n    margin-right: 0 ")
                .concat(r, ";\n  }\n  \n  body[")
                .concat(T, "] {\n    ")
                .concat("--removed-body-scroll-bar-size", ": ")
                .concat(a, "px;\n  }\n")
            );
          },
          k = function () {
            var e = parseInt(document.body.getAttribute(T) || "0", 10);
            return isFinite(e) ? e : 0;
          },
          R = function () {
            f.useEffect(function () {
              return (
                document.body.setAttribute(T, (k() + 1).toString()),
                function () {
                  var e = k() - 1;
                  e <= 0
                    ? document.body.removeAttribute(T)
                    : document.body.setAttribute(T, e.toString());
                }
              );
            }, []);
          },
          N = function (e) {
            var t = e.noRelative,
              n = e.noImportant,
              r = e.gapMode,
              i = void 0 === r ? "margin" : r;
            R();
            var o = f.useMemo(
              function () {
                return S(i);
              },
              [i]
            );
            return f.createElement(P, {
              styles: O(o, !t, i, n ? "" : "!important"),
            });
          },
          M = !1;
        if ("undefined" != typeof window)
          try {
            var L = Object.defineProperty({}, "passive", {
              get: function () {
                return (M = !0), !0;
              },
            });
            window.addEventListener("test", L, L),
              window.removeEventListener("test", L, L);
          } catch (e) {
            M = !1;
          }
        var F = !!M && { passive: !1 },
          U = function (e, t) {
            if (!(e instanceof Element)) return !1;
            var n = window.getComputedStyle(e);
            return (
              "hidden" !== n[t] &&
              !(
                n.overflowY === n.overflowX &&
                "TEXTAREA" !== e.tagName &&
                "visible" === n[t]
              )
            );
          },
          D = function (e, t) {
            var n = t.ownerDocument,
              r = t;
            do {
              if (
                ("undefined" != typeof ShadowRoot &&
                  r instanceof ShadowRoot &&
                  (r = r.host),
                _(e, r))
              ) {
                var i = j(e, r);
                if (i[1] > i[2]) return !0;
              }
              r = r.parentNode;
            } while (r && r !== n.body);
            return !1;
          },
          _ = function (e, t) {
            return "v" === e ? U(t, "overflowY") : U(t, "overflowX");
          },
          j = function (e, t) {
            return "v" === e
              ? [t.scrollTop, t.scrollHeight, t.clientHeight]
              : [t.scrollLeft, t.scrollWidth, t.clientWidth];
          },
          G = function (e, t, n, r, i) {
            var o,
              s =
                ((o = window.getComputedStyle(t).direction),
                "h" === e && "rtl" === o ? -1 : 1),
              a = s * r,
              c = n.target,
              u = t.contains(c),
              l = !1,
              f = a > 0,
              d = 0,
              h = 0;
            do {
              var p = j(e, c),
                m = p[0],
                g = p[1] - p[2] - s * m;
              (m || g) && _(e, c) && ((d += g), (h += m)),
                c instanceof ShadowRoot ? (c = c.host) : (c = c.parentNode);
            } while (
              (!u && c !== document.body) ||
              (u && (t.contains(c) || t === c))
            );
            return (
              f && ((i && 1 > Math.abs(d)) || (!i && a > d))
                ? (l = !0)
                : !f && ((i && 1 > Math.abs(h)) || (!i && -a > h)) && (l = !0),
              l
            );
          },
          H = function (e) {
            return "changedTouches" in e
              ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY]
              : [0, 0];
          },
          q = function (e) {
            return [e.deltaX, e.deltaY];
          },
          z = function (e) {
            return e && "current" in e ? e.current : e;
          },
          Q = 0,
          W = [],
          V =
            ((c = function (e) {
              var t = f.useRef([]),
                n = f.useRef([0, 0]),
                r = f.useRef(),
                i = f.useState(Q++)[0],
                o = f.useState(C)[0],
                s = f.useRef(e);
              f.useEffect(
                function () {
                  s.current = e;
                },
                [e]
              ),
                f.useEffect(
                  function () {
                    if (e.inert) {
                      document.body.classList.add(
                        "block-interactivity-".concat(i)
                      );
                      var t = (0, l.ev)(
                        [e.lockRef.current],
                        (e.shards || []).map(z),
                        !0
                      ).filter(Boolean);
                      return (
                        t.forEach(function (e) {
                          return e.classList.add(
                            "allow-interactivity-".concat(i)
                          );
                        }),
                        function () {
                          document.body.classList.remove(
                            "block-interactivity-".concat(i)
                          ),
                            t.forEach(function (e) {
                              return e.classList.remove(
                                "allow-interactivity-".concat(i)
                              );
                            });
                        }
                      );
                    }
                  },
                  [e.inert, e.lockRef.current, e.shards]
                );
              var a = f.useCallback(function (e, t) {
                  if (
                    ("touches" in e && 2 === e.touches.length) ||
                    ("wheel" === e.type && e.ctrlKey)
                  )
                    return !s.current.allowPinchZoom;
                  var i,
                    o = H(e),
                    a = n.current,
                    c = "deltaX" in e ? e.deltaX : a[0] - o[0],
                    u = "deltaY" in e ? e.deltaY : a[1] - o[1],
                    l = e.target,
                    f = Math.abs(c) > Math.abs(u) ? "h" : "v";
                  if ("touches" in e && "h" === f && "range" === l.type)
                    return !1;
                  var d = D(f, l);
                  if (!d) return !0;
                  if (
                    (d ? (i = f) : ((i = "v" === f ? "h" : "v"), (d = D(f, l))),
                    !d)
                  )
                    return !1;
                  if (
                    (!r.current &&
                      "changedTouches" in e &&
                      (c || u) &&
                      (r.current = i),
                    !i)
                  )
                    return !0;
                  var h = r.current || i;
                  return G(h, t, e, "h" === h ? c : u, !0);
                }, []),
                c = f.useCallback(function (e) {
                  if (W.length && W[W.length - 1] === o) {
                    var n = "deltaY" in e ? q(e) : H(e),
                      r = t.current.filter(function (t) {
                        var r;
                        return (
                          t.name === e.type &&
                          (t.target === e.target ||
                            e.target === t.shadowParent) &&
                          (r = t.delta)[0] === n[0] &&
                          r[1] === n[1]
                        );
                      })[0];
                    if (r && r.should) {
                      e.cancelable && e.preventDefault();
                      return;
                    }
                    if (!r) {
                      var i = (s.current.shards || [])
                        .map(z)
                        .filter(Boolean)
                        .filter(function (t) {
                          return t.contains(e.target);
                        });
                      (i.length > 0 ? a(e, i[0]) : !s.current.noIsolation) &&
                        e.cancelable &&
                        e.preventDefault();
                    }
                  }
                }, []),
                u = f.useCallback(function (e, n, r, i) {
                  var o = {
                    name: e,
                    delta: n,
                    target: r,
                    should: i,
                    shadowParent: (function (e) {
                      for (var t = null; null !== e; )
                        e instanceof ShadowRoot && ((t = e.host), (e = e.host)),
                          (e = e.parentNode);
                      return t;
                    })(r),
                  };
                  t.current.push(o),
                    setTimeout(function () {
                      t.current = t.current.filter(function (e) {
                        return e !== o;
                      });
                    }, 1);
                }, []),
                d = f.useCallback(function (e) {
                  (n.current = H(e)), (r.current = void 0);
                }, []),
                h = f.useCallback(function (t) {
                  u(t.type, q(t), t.target, a(t, e.lockRef.current));
                }, []),
                p = f.useCallback(function (t) {
                  u(t.type, H(t), t.target, a(t, e.lockRef.current));
                }, []);
              f.useEffect(function () {
                return (
                  W.push(o),
                  e.setCallbacks({
                    onScrollCapture: h,
                    onWheelCapture: h,
                    onTouchMoveCapture: p,
                  }),
                  document.addEventListener("wheel", c, F),
                  document.addEventListener("touchmove", c, F),
                  document.addEventListener("touchstart", d, F),
                  function () {
                    (W = W.filter(function (e) {
                      return e !== o;
                    })),
                      document.removeEventListener("wheel", c, F),
                      document.removeEventListener("touchmove", c, F),
                      document.removeEventListener("touchstart", d, F);
                  }
                );
              }, []);
              var m = e.removeScrollBar,
                g = e.inert;
              return f.createElement(
                f.Fragment,
                null,
                g
                  ? f.createElement(o, {
                      styles: "\n  .block-interactivity-"
                        .concat(
                          i,
                          " {pointer-events: none;}\n  .allow-interactivity-"
                        )
                        .concat(i, " {pointer-events: all;}\n"),
                    })
                  : null,
                m ? f.createElement(N, { gapMode: e.gapMode }) : null
              );
            }),
            y.useMedium(c),
            v),
          K = f.forwardRef(function (e, t) {
            return f.createElement(w, (0, l.pi)({}, e, { ref: t, sideCar: V }));
          });
        K.classNames = w.classNames;
        var $ = K;
      },
      40993: function (e, t, n) {
        "use strict";
        /**
         * @license React
         * use-sync-external-store-shim.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var r = n(2265),
          i =
            "function" == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                },
          o = r.useState,
          s = r.useEffect,
          a = r.useLayoutEffect,
          c = r.useDebugValue;
        function u(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !i(e, n);
          } catch (e) {
            return !0;
          }
        }
        var l =
          "undefined" == typeof window ||
          void 0 === window.document ||
          void 0 === window.document.createElement
            ? function (e, t) {
                return t();
              }
            : function (e, t) {
                var n = t(),
                  r = o({ inst: { value: n, getSnapshot: t } }),
                  i = r[0].inst,
                  l = r[1];
                return (
                  a(
                    function () {
                      (i.value = n),
                        (i.getSnapshot = t),
                        u(i) && l({ inst: i });
                    },
                    [e, n, t]
                  ),
                  s(
                    function () {
                      return (
                        u(i) && l({ inst: i }),
                        e(function () {
                          u(i) && l({ inst: i });
                        })
                      );
                    },
                    [e]
                  ),
                  c(n),
                  n
                );
              };
        t.useSyncExternalStore =
          void 0 !== r.useSyncExternalStore ? r.useSyncExternalStore : l;
      },
      3486: function (e, t, n) {
        "use strict";
        e.exports = n(40993);
      },
      62061: function (e, t, n) {
        var r;
        !(function (i, o) {
          "use strict";
          var s = "function",
            a = "undefined",
            c = "object",
            u = "string",
            l = "major",
            f = "model",
            d = "name",
            h = "type",
            p = "vendor",
            m = "version",
            g = "architecture",
            y = "console",
            b = "mobile",
            w = "tablet",
            v = "smarttv",
            A = "wearable",
            E = "embedded",
            C = "Amazon",
            x = "Apple",
            B = "ASUS",
            I = "BlackBerry",
            S = "Browser",
            P = "Chrome",
            T = "Firefox",
            O = "Google",
            k = "Huawei",
            R = "Microsoft",
            N = "Motorola",
            M = "Opera",
            L = "Samsung",
            F = "Sharp",
            U = "Sony",
            D = "Xiaomi",
            _ = "Zebra",
            j = "Facebook",
            G = "Chromium OS",
            H = "Mac OS",
            q = " Browser",
            z = function (e, t) {
              var n = {};
              for (var r in e)
                t[r] && t[r].length % 2 == 0
                  ? (n[r] = t[r].concat(e[r]))
                  : (n[r] = e[r]);
              return n;
            },
            Q = function (e) {
              for (var t = {}, n = 0; n < e.length; n++)
                t[e[n].toUpperCase()] = e[n];
              return t;
            },
            W = function (e, t) {
              return typeof e === u && -1 !== V(t).indexOf(V(e));
            },
            V = function (e) {
              return e.toLowerCase();
            },
            K = function (e, t) {
              if (typeof e === u)
                return (
                  (e = e.replace(/^\s\s*/, "")),
                  typeof t === a ? e : e.substring(0, 500)
                );
            },
            $ = function (e, t) {
              for (var n, r, i, a, u, l, f = 0; f < t.length && !u; ) {
                var d = t[f],
                  h = t[f + 1];
                for (n = r = 0; n < d.length && !u && d[n]; )
                  if ((u = d[n++].exec(e)))
                    for (i = 0; i < h.length; i++)
                      (l = u[++r]),
                        typeof (a = h[i]) === c && a.length > 0
                          ? 2 === a.length
                            ? typeof a[1] == s
                              ? (this[a[0]] = a[1].call(this, l))
                              : (this[a[0]] = a[1])
                            : 3 === a.length
                            ? typeof a[1] !== s || (a[1].exec && a[1].test)
                              ? (this[a[0]] = l
                                  ? l.replace(a[1], a[2])
                                  : void 0)
                              : (this[a[0]] = l
                                  ? a[1].call(this, l, a[2])
                                  : void 0)
                            : 4 === a.length &&
                              (this[a[0]] = l
                                ? a[3].call(this, l.replace(a[1], a[2]))
                                : void 0)
                          : (this[a] = l || o);
                f += 2;
              }
            },
            Z = function (e, t) {
              for (var n in t)
                if (typeof t[n] === c && t[n].length > 0) {
                  for (var r = 0; r < t[n].length; r++)
                    if (W(t[n][r], e)) return "?" === n ? o : n;
                } else if (W(t[n], e)) return "?" === n ? o : n;
              return t.hasOwnProperty("*") ? t["*"] : e;
            },
            J = {
              ME: "4.90",
              "NT 3.11": "NT3.51",
              "NT 4.0": "NT4.0",
              2e3: "NT 5.0",
              XP: ["NT 5.1", "NT 5.2"],
              Vista: "NT 6.0",
              7: "NT 6.1",
              8: "NT 6.2",
              8.1: "NT 6.3",
              10: ["NT 6.4", "NT 10.0"],
              RT: "ARM",
            },
            Y = {
              browser: [
                [/\b(?:crmo|crios)\/([\w\.]+)/i],
                [m, [d, "Chrome"]],
                [/edg(?:e|ios|a)?\/([\w\.]+)/i],
                [m, [d, "Edge"]],
                [
                  /(opera mini)\/([-\w\.]+)/i,
                  /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
                  /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i,
                ],
                [d, m],
                [/opios[\/ ]+([\w\.]+)/i],
                [m, [d, M + " Mini"]],
                [/\bop(?:rg)?x\/([\w\.]+)/i],
                [m, [d, M + " GX"]],
                [/\bopr\/([\w\.]+)/i],
                [m, [d, M]],
                [/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],
                [m, [d, "Baidu"]],
                [
                  /(kindle)\/([\w\.]+)/i,
                  /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,
                  /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i,
                  /(?:ms|\()(ie) ([\w\.]+)/i,
                  /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio)\/([-\w\.]+)/i,
                  /(heytap|ovi)browser\/([\d\.]+)/i,
                  /(weibo)__([\d\.]+)/i,
                ],
                [d, m],
                [/quark(?:pc)?\/([-\w\.]+)/i],
                [m, [d, "Quark"]],
                [/\bddg\/([\w\.]+)/i],
                [m, [d, "DuckDuckGo"]],
                [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
                [m, [d, "UC" + S]],
                [
                  /microm.+\bqbcore\/([\w\.]+)/i,
                  /\bqbcore\/([\w\.]+).+microm/i,
                  /micromessenger\/([\w\.]+)/i,
                ],
                [m, [d, "WeChat"]],
                [/konqueror\/([\w\.]+)/i],
                [m, [d, "Konqueror"]],
                [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
                [m, [d, "IE"]],
                [/ya(?:search)?browser\/([\w\.]+)/i],
                [m, [d, "Yandex"]],
                [/slbrowser\/([\w\.]+)/i],
                [m, [d, "Smart Lenovo " + S]],
                [/(avast|avg)\/([\w\.]+)/i],
                [[d, /(.+)/, "$1 Secure " + S], m],
                [/\bfocus\/([\w\.]+)/i],
                [m, [d, T + " Focus"]],
                [/\bopt\/([\w\.]+)/i],
                [m, [d, M + " Touch"]],
                [/coc_coc\w+\/([\w\.]+)/i],
                [m, [d, "Coc Coc"]],
                [/dolfin\/([\w\.]+)/i],
                [m, [d, "Dolphin"]],
                [/coast\/([\w\.]+)/i],
                [m, [d, M + " Coast"]],
                [/miuibrowser\/([\w\.]+)/i],
                [m, [d, "MIUI " + S]],
                [/fxios\/([-\w\.]+)/i],
                [m, [d, T]],
                [/\bqihu|(qi?ho?o?|360)browser/i],
                [[d, "360" + q]],
                [/\b(qq)\/([\w\.]+)/i],
                [[d, /(.+)/, "$1Browser"], m],
                [/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i],
                [[d, /(.+)/, "$1" + q], m],
                [/samsungbrowser\/([\w\.]+)/i],
                [m, [d, L + " Internet"]],
                [/(comodo_dragon)\/([\w\.]+)/i],
                [[d, /_/g, " "], m],
                [/metasr[\/ ]?([\d\.]+)/i],
                [m, [d, "Sogou Explorer"]],
                [/(sogou)mo\w+\/([\d\.]+)/i],
                [[d, "Sogou Mobile"], m],
                [
                  /(electron)\/([\w\.]+) safari/i,
                  /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
                  /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i,
                ],
                [d, m],
                [/(lbbrowser|rekonq)/i, /\[(linkedin)app\]/i],
                [d],
                [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
                [[d, j], m],
                [
                  /(Klarna)\/([\w\.]+)/i,
                  /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
                  /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
                  /safari (line)\/([\w\.]+)/i,
                  /\b(line)\/([\w\.]+)\/iab/i,
                  /(alipay)client\/([\w\.]+)/i,
                  /(twitter)(?:and| f.+e\/([\w\.]+))/i,
                  /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i,
                ],
                [d, m],
                [/\bgsa\/([\w\.]+) .*safari\//i],
                [m, [d, "GSA"]],
                [/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],
                [m, [d, "TikTok"]],
                [/headlesschrome(?:\/([\w\.]+)| )/i],
                [m, [d, P + " Headless"]],
                [/ wv\).+(chrome)\/([\w\.]+)/i],
                [[d, P + " WebView"], m],
                [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
                [m, [d, "Android " + S]],
                [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
                [d, m],
                [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
                [m, [d, "Mobile Safari"]],
                [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
                [m, d],
                [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
                [
                  d,
                  [
                    m,
                    Z,
                    {
                      "1.0": "/8",
                      1.2: "/1",
                      1.3: "/3",
                      "2.0": "/412",
                      "2.0.2": "/416",
                      "2.0.3": "/417",
                      "2.0.4": "/419",
                      "?": "/",
                    },
                  ],
                ],
                [/(webkit|khtml)\/([\w\.]+)/i],
                [d, m],
                [/(navigator|netscape\d?)\/([-\w\.]+)/i],
                [[d, "Netscape"], m],
                [/(wolvic)\/([\w\.]+)/i],
                [d, m],
                [/mobile vr; rv:([\w\.]+)\).+firefox/i],
                [m, [d, T + " Reality"]],
                [
                  /ekiohf.+(flow)\/([\w\.]+)/i,
                  /(swiftfox)/i,
                  /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,
                  /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
                  /(firefox)\/([\w\.]+)/i,
                  /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
                  /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
                  /(links) \(([\w\.]+)/i,
                ],
                [d, [m, /_/g, "."]],
                [/(cobalt)\/([\w\.]+)/i],
                [d, [m, /master.|lts./, ""]],
              ],
              cpu: [
                [/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
                [[g, "amd64"]],
                [/(ia32(?=;))/i],
                [[g, V]],
                [/((?:i[346]|x)86)[;\)]/i],
                [[g, "ia32"]],
                [/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
                [[g, "arm64"]],
                [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
                [[g, "armhf"]],
                [/windows (ce|mobile); ppc;/i],
                [[g, "arm"]],
                [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
                [[g, /ower/, "", V]],
                [/(sun4\w)[;\)]/i],
                [[g, "sparc"]],
                [
                  /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i,
                ],
                [[g, V]],
              ],
              device: [
                [
                  /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i,
                ],
                [f, [p, L], [h, w]],
                [
                  /\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
                  /samsung[- ]((?!sm-[lr])[-\w]+)/i,
                  /sec-(sgh\w+)/i,
                ],
                [f, [p, L], [h, b]],
                [/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],
                [f, [p, x], [h, b]],
                [
                  /\((ipad);[-\w\),; ]+apple/i,
                  /applecoremedia\/[\w\.]+ \((ipad)/i,
                  /\b(ipad)\d\d?,\d\d?[;\]].+ios/i,
                ],
                [f, [p, x], [h, w]],
                [/(macintosh);/i],
                [f, [p, x]],
                [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
                [f, [p, F], [h, b]],
                [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
                [f, [p, k], [h, w]],
                [
                  /(?:huawei|honor)([-\w ]+)[;\)]/i,
                  /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i,
                ],
                [f, [p, k], [h, b]],
                [
                  /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
                  /\b; (\w+) build\/hm\1/i,
                  /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
                  /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
                  /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
                  /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i,
                ],
                [
                  [f, /_/g, " "],
                  [p, D],
                  [h, b],
                ],
                [
                  /oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
                  /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i,
                ],
                [
                  [f, /_/g, " "],
                  [p, D],
                  [h, w],
                ],
                [
                  /; (\w+) bui.+ oppo/i,
                  /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i,
                ],
                [f, [p, "OPPO"], [h, b]],
                [/\b(opd2\d{3}a?) bui/i],
                [f, [p, "OPPO"], [h, w]],
                [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
                [f, [p, "Vivo"], [h, b]],
                [/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],
                [f, [p, "Realme"], [h, b]],
                [
                  /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
                  /\bmot(?:orola)?[- ](\w*)/i,
                  /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i,
                ],
                [f, [p, N], [h, b]],
                [/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
                [f, [p, N], [h, w]],
                [
                  /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i,
                ],
                [f, [p, "LG"], [h, w]],
                [
                  /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
                  /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
                  /\blg-?([\d\w]+) bui/i,
                ],
                [f, [p, "LG"], [h, b]],
                [
                  /(ideatab[-\w ]+)/i,
                  /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i,
                ],
                [f, [p, "Lenovo"], [h, w]],
                [
                  /(?:maemo|nokia).*(n900|lumia \d+)/i,
                  /nokia[-_ ]?([-\w\.]*)/i,
                ],
                [
                  [f, /_/g, " "],
                  [p, "Nokia"],
                  [h, b],
                ],
                [/(pixel c)\b/i],
                [f, [p, O], [h, w]],
                [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
                [f, [p, O], [h, b]],
                [
                  /droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i,
                ],
                [f, [p, U], [h, b]],
                [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
                [
                  [f, "Xperia Tablet"],
                  [p, U],
                  [h, w],
                ],
                [
                  / (kb2005|in20[12]5|be20[12][59])\b/i,
                  /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i,
                ],
                [f, [p, "OnePlus"], [h, b]],
                [
                  /(alexa)webm/i,
                  /(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,
                  /(kf[a-z]+)( bui|\)).+silk\//i,
                ],
                [f, [p, C], [h, w]],
                [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
                [
                  [f, /(.+)/g, "Fire Phone $1"],
                  [p, C],
                  [h, b],
                ],
                [/(playbook);[-\w\),; ]+(rim)/i],
                [f, p, [h, w]],
                [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
                [f, [p, I], [h, b]],
                [
                  /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i,
                ],
                [f, [p, B], [h, w]],
                [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
                [f, [p, B], [h, b]],
                [/(nexus 9)/i],
                [f, [p, "HTC"], [h, w]],
                [
                  /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
                  /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
                  /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i,
                ],
                [p, [f, /_/g, " "], [h, b]],
                [
                  /droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i,
                ],
                [f, [p, "TCL"], [h, w]],
                [/(itel) ((\w+))/i],
                [
                  [p, V],
                  f,
                  [h, Z, { tablet: ["p10001l", "w7001"], "*": "mobile" }],
                ],
                [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
                [f, [p, "Acer"], [h, w]],
                [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
                [f, [p, "Meizu"], [h, b]],
                [/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],
                [f, [p, "Ulefone"], [h, b]],
                [/droid.+; (a(?:015|06[35]|142p?))/i],
                [f, [p, "Nothing"], [h, b]],
                [
                  /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i,
                  /(hp) ([\w ]+\w)/i,
                  /(asus)-?(\w+)/i,
                  /(microsoft); (lumia[\w ]+)/i,
                  /(lenovo)[-_ ]?([-\w]+)/i,
                  /(jolla)/i,
                  /(oppo) ?([\w ]+) bui/i,
                ],
                [p, f, [h, b]],
                [
                  /(kobo)\s(ereader|touch)/i,
                  /(archos) (gamepad2?)/i,
                  /(hp).+(touchpad(?!.+tablet)|tablet)/i,
                  /(kindle)\/([\w\.]+)/i,
                  /(nook)[\w ]+build\/(\w+)/i,
                  /(dell) (strea[kpr\d ]*[\dko])/i,
                  /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
                  /(trinity)[- ]*(t\d{3}) bui/i,
                  /(gigaset)[- ]+(q\w{1,9}) bui/i,
                  /(vodafone) ([\w ]+)(?:\)| bui)/i,
                ],
                [p, f, [h, w]],
                [/(surface duo)/i],
                [f, [p, R], [h, w]],
                [/droid [\d\.]+; (fp\du?)(?: b|\))/i],
                [f, [p, "Fairphone"], [h, b]],
                [/(u304aa)/i],
                [f, [p, "AT&T"], [h, b]],
                [/\bsie-(\w*)/i],
                [f, [p, "Siemens"], [h, b]],
                [/\b(rct\w+) b/i],
                [f, [p, "RCA"], [h, w]],
                [/\b(venue[\d ]{2,7}) b/i],
                [f, [p, "Dell"], [h, w]],
                [/\b(q(?:mv|ta)\w+) b/i],
                [f, [p, "Verizon"], [h, w]],
                [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
                [f, [p, "Barnes & Noble"], [h, w]],
                [/\b(tm\d{3}\w+) b/i],
                [f, [p, "NuVision"], [h, w]],
                [/\b(k88) b/i],
                [f, [p, "ZTE"], [h, w]],
                [/\b(nx\d{3}j) b/i],
                [f, [p, "ZTE"], [h, b]],
                [/\b(gen\d{3}) b.+49h/i],
                [f, [p, "Swiss"], [h, b]],
                [/\b(zur\d{3}) b/i],
                [f, [p, "Swiss"], [h, w]],
                [/\b((zeki)?tb.*\b) b/i],
                [f, [p, "Zeki"], [h, w]],
                [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
                [[p, "Dragon Touch"], f, [h, w]],
                [/\b(ns-?\w{0,9}) b/i],
                [f, [p, "Insignia"], [h, w]],
                [/\b((nxa|next)-?\w{0,9}) b/i],
                [f, [p, "NextBook"], [h, w]],
                [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
                [[p, "Voice"], f, [h, b]],
                [/\b(lvtel\-)?(v1[12]) b/i],
                [[p, "LvTel"], f, [h, b]],
                [/\b(ph-1) /i],
                [f, [p, "Essential"], [h, b]],
                [/\b(v(100md|700na|7011|917g).*\b) b/i],
                [f, [p, "Envizen"], [h, w]],
                [/\b(trio[-\w\. ]+) b/i],
                [f, [p, "MachSpeed"], [h, w]],
                [/\btu_(1491) b/i],
                [f, [p, "Rotor"], [h, w]],
                [/(shield[\w ]+) b/i],
                [f, [p, "Nvidia"], [h, w]],
                [/(sprint) (\w+)/i],
                [p, f, [h, b]],
                [/(kin\.[onetw]{3})/i],
                [
                  [f, /\./g, " "],
                  [p, R],
                  [h, b],
                ],
                [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
                [f, [p, _], [h, w]],
                [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
                [f, [p, _], [h, b]],
                [/smart-tv.+(samsung)/i],
                [p, [h, v]],
                [/hbbtv.+maple;(\d+)/i],
                [
                  [f, /^/, "SmartTV"],
                  [p, L],
                  [h, v],
                ],
                [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
                [
                  [p, "LG"],
                  [h, v],
                ],
                [/(apple) ?tv/i],
                [p, [f, x + " TV"], [h, v]],
                [/crkey/i],
                [
                  [f, P + "cast"],
                  [p, O],
                  [h, v],
                ],
                [/droid.+aft(\w+)( bui|\))/i],
                [f, [p, C], [h, v]],
                [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
                [f, [p, F], [h, v]],
                [/(bravia[\w ]+)( bui|\))/i],
                [f, [p, U], [h, v]],
                [/(mitv-\w{5}) bui/i],
                [f, [p, D], [h, v]],
                [/Hbbtv.*(technisat) (.*);/i],
                [p, f, [h, v]],
                [
                  /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
                  /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i,
                ],
                [
                  [p, K],
                  [f, K],
                  [h, v],
                ],
                [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
                [[h, v]],
                [/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
                [p, f, [h, y]],
                [/droid.+; (shield) bui/i],
                [f, [p, "Nvidia"], [h, y]],
                [/(playstation [345portablevi]+)/i],
                [f, [p, U], [h, y]],
                [/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
                [f, [p, R], [h, y]],
                [/\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i],
                [f, [p, L], [h, A]],
                [/((pebble))app/i],
                [p, f, [h, A]],
                [/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],
                [f, [p, x], [h, A]],
                [/droid.+; (glass) \d/i],
                [f, [p, O], [h, A]],
                [/droid.+; (wt63?0{2,3})\)/i],
                [f, [p, _], [h, A]],
                [/(quest( \d| pro)?)/i],
                [f, [p, j], [h, A]],
                [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
                [p, [h, E]],
                [/(aeobc)\b/i],
                [f, [p, C], [h, E]],
                [
                  /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i,
                ],
                [f, [h, b]],
                [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
                [f, [h, w]],
                [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
                [[h, w]],
                [
                  /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i,
                ],
                [[h, b]],
                [/(android[-\w\. ]{0,9});.+buil/i],
                [f, [p, "Generic"]],
              ],
              engine: [
                [/windows.+ edge\/([\w\.]+)/i],
                [m, [d, "EdgeHTML"]],
                [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
                [m, [d, "Blink"]],
                [
                  /(presto)\/([\w\.]+)/i,
                  /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
                  /ekioh(flow)\/([\w\.]+)/i,
                  /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
                  /(icab)[\/ ]([23]\.[\d\.]+)/i,
                  /\b(libweb)/i,
                ],
                [d, m],
                [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
                [m, d],
              ],
              os: [
                [/microsoft (windows) (vista|xp)/i],
                [d, m],
                [/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],
                [d, [m, Z, J]],
                [
                  /windows nt 6\.2; (arm)/i,
                  /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
                  /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i,
                ],
                [
                  [m, Z, J],
                  [d, "Windows"],
                ],
                [
                  /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
                  /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
                  /cfnetwork\/.+darwin/i,
                ],
                [
                  [m, /_/g, "."],
                  [d, "iOS"],
                ],
                [
                  /(mac os x) ?([\w\. ]*)/i,
                  /(macintosh|mac_powerpc\b)(?!.+haiku)/i,
                ],
                [
                  [d, H],
                  [m, /_/g, "."],
                ],
                [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
                [m, d],
                [
                  /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,
                  /(blackberry)\w*\/([\w\.]*)/i,
                  /(tizen|kaios)[\/ ]([\w\.]+)/i,
                  /\((series40);/i,
                ],
                [d, m],
                [/\(bb(10);/i],
                [m, [d, I]],
                [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
                [m, [d, "Symbian"]],
                [
                  /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i,
                ],
                [m, [d, T + " OS"]],
                [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
                [m, [d, "webOS"]],
                [/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],
                [m, [d, "watchOS"]],
                [/crkey\/([\d\.]+)/i],
                [m, [d, P + "cast"]],
                [/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],
                [[d, G], m],
                [
                  /panasonic;(viera)/i,
                  /(netrange)mmh/i,
                  /(nettv)\/(\d+\.[\w\.]+)/i,
                  /(nintendo|playstation) ([wids345portablevuch]+)/i,
                  /(xbox); +xbox ([^\);]+)/i,
                  /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
                  /(mint)[\/\(\) ]?(\w*)/i,
                  /(mageia|vectorlinux)[; ]/i,
                  /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
                  /(hurd|linux) ?([\w\.]*)/i,
                  /(gnu) ?([\w\.]*)/i,
                  /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
                  /(haiku) (\w+)/i,
                ],
                [d, m],
                [/(sunos) ?([\w\.\d]*)/i],
                [[d, "Solaris"], m],
                [
                  /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
                  /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
                  /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
                  /(unix) ?([\w\.]*)/i,
                ],
                [d, m],
              ],
            },
            X = function (e, t) {
              if ((typeof e === c && ((t = e), (e = o)), !(this instanceof X)))
                return new X(e, t).getResult();
              var n = typeof i !== a && i.navigator ? i.navigator : o,
                r = e || (n && n.userAgent ? n.userAgent : ""),
                y = n && n.userAgentData ? n.userAgentData : o,
                v = t ? z(Y, t) : Y,
                A = n && n.userAgent == r;
              return (
                (this.getBrowser = function () {
                  var e,
                    t = {};
                  return (
                    (t[d] = o),
                    (t[m] = o),
                    $.call(t, r, v.browser),
                    (t[l] =
                      typeof (e = t[m]) === u
                        ? e.replace(/[^\d\.]/g, "").split(".")[0]
                        : o),
                    A &&
                      n &&
                      n.brave &&
                      typeof n.brave.isBrave == s &&
                      (t[d] = "Brave"),
                    t
                  );
                }),
                (this.getCPU = function () {
                  var e = {};
                  return (e[g] = o), $.call(e, r, v.cpu), e;
                }),
                (this.getDevice = function () {
                  var e = {};
                  return (
                    (e[p] = o),
                    (e[f] = o),
                    (e[h] = o),
                    $.call(e, r, v.device),
                    A && !e[h] && y && y.mobile && (e[h] = b),
                    A &&
                      "Macintosh" == e[f] &&
                      n &&
                      typeof n.standalone !== a &&
                      n.maxTouchPoints &&
                      n.maxTouchPoints > 2 &&
                      ((e[f] = "iPad"), (e[h] = w)),
                    e
                  );
                }),
                (this.getEngine = function () {
                  var e = {};
                  return (e[d] = o), (e[m] = o), $.call(e, r, v.engine), e;
                }),
                (this.getOS = function () {
                  var e = {};
                  return (
                    (e[d] = o),
                    (e[m] = o),
                    $.call(e, r, v.os),
                    A &&
                      !e[d] &&
                      y &&
                      y.platform &&
                      "Unknown" != y.platform &&
                      (e[d] = y.platform
                        .replace(/chrome os/i, G)
                        .replace(/macos/i, H)),
                    e
                  );
                }),
                (this.getResult = function () {
                  return {
                    ua: this.getUA(),
                    browser: this.getBrowser(),
                    engine: this.getEngine(),
                    os: this.getOS(),
                    device: this.getDevice(),
                    cpu: this.getCPU(),
                  };
                }),
                (this.getUA = function () {
                  return r;
                }),
                (this.setUA = function (e) {
                  return (
                    (r = typeof e === u && e.length > 500 ? K(e, 500) : e), this
                  );
                }),
                this.setUA(r),
                this
              );
            };
          (X.VERSION = "1.0.39"),
            (X.BROWSER = Q([d, m, l])),
            (X.CPU = Q([g])),
            (X.DEVICE = Q([f, p, h, y, b, v, w, A, E])),
            (X.ENGINE = X.OS = Q([d, m])),
            typeof t !== a
              ? (e.exports && (t = e.exports = X), (t.UAParser = X))
              : n.amdO
              ? o !==
                  (r = function () {
                    return X;
                  }.call(t, n, t, e)) && (e.exports = r)
              : typeof i !== a && (i.UAParser = X);
          var ee = typeof i !== a && (i.jQuery || i.Zepto);
          if (ee && !ee.ua) {
            var et = new X();
            (ee.ua = et.getResult()),
              (ee.ua.get = function () {
                return et.getUA();
              }),
              (ee.ua.set = function (e) {
                et.setUA(e);
                var t = et.getResult();
                for (var n in t) ee.ua[n] = t[n];
              });
          }
        })("object" == typeof window ? window : this);
      },
      54909: function (e, t, n) {
        "use strict";
        e.exports = n(69362);
      },
      63513: function (e, t, n) {
        "use strict";
        e.exports = n(526);
      },
      2791: function (e, t, n) {
        "use strict";
        e.exports = n(13350);
      },
      23442: function (e, t, n) {
        "use strict";
        let r = n(2265).createContext(void 0);
        t.IntlContext = r;
      },
      69362: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(2265),
          i = n(24563),
          o = n(23442);
        n(1360);
        var s = r && r.__esModule ? r : { default: r };
        t.IntlProvider = function (e) {
          let {
              children: t,
              defaultTranslationValues: n,
              formats: a,
              getMessageFallback: c,
              locale: u,
              messages: l,
              now: f,
              onError: d,
              timeZone: h,
            } = e,
            p = r.useMemo(() => i.createCache(), [u]),
            m = r.useMemo(() => i.createIntlFormatters(p), [p]),
            g = r.useMemo(
              () => ({
                ...i.initializeConfig({
                  locale: u,
                  defaultTranslationValues: n,
                  formats: a,
                  getMessageFallback: c,
                  messages: l,
                  now: f,
                  onError: d,
                  timeZone: h,
                }),
                formatters: m,
                cache: p,
              }),
              [p, n, a, m, c, u, l, f, d, h]
            );
          return s.default.createElement(
            o.IntlContext.Provider,
            { value: g },
            t
          );
        };
      },
      76357: function (e, t, n) {
        "use strict";
        var r = n(2265),
          i = n(23442);
        function o() {
          let e = r.useContext(i.IntlContext);
          if (!e) throw Error(void 0);
          return e;
        }
        (t.useIntlContext = o),
          (t.useLocale = function () {
            return o().locale;
          });
      },
      526: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(76357);
        n(2265), n(23442), (t.useLocale = r.useLocale);
      },
      14907: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(9832),
          i = n(24563);
        n(82410),
          n(2265),
          n(1360),
          (t.IntlError = r.IntlError),
          (t.IntlErrorCode = r.IntlErrorCode),
          (t.createFormatter = r.createFormatter),
          (t._createCache = i.createCache),
          (t._createIntlFormatters = i.createIntlFormatters),
          (t.initializeConfig = i.initializeConfig),
          (t.createTranslator = function (e) {
            let {
              _cache: t = i.createCache(),
              _formatters: n = i.createIntlFormatters(t),
              getMessageFallback: o = i.defaultGetMessageFallback,
              messages: s,
              namespace: a,
              onError: c = i.defaultOnError,
              ...u
            } = e;
            return (function (e, t) {
              let { messages: n, namespace: i, ...o } = e;
              return (
                (n = n["!"]),
                (i = r.resolveNamespace(i, "!")),
                r.createBaseTranslator({ ...o, messages: n, namespace: i })
              );
            })(
              {
                ...u,
                onError: c,
                cache: t,
                formatters: n,
                getMessageFallback: o,
                messages: { "!": s },
                namespace: a ? "!.".concat(a) : "!",
              },
              0
            );
          });
      },
      9832: function (e, t, n) {
        "use strict";
        var r,
          i = n(82410),
          o = n(2265),
          s = n(24563),
          a = i && i.__esModule ? i : { default: i };
        function c(e, t, n) {
          var r;
          return (
            (t =
              "symbol" ==
              typeof (r = (function (e, t) {
                if ("object" != typeof e || !e) return e;
                var n = e[Symbol.toPrimitive];
                if (void 0 !== n) {
                  var r = n.call(e, t || "default");
                  if ("object" != typeof r) return r;
                  throw TypeError(
                    "@@toPrimitive must return a primitive value."
                  );
                }
                return ("string" === t ? String : Number)(e);
              })(t, "string"))
                ? r
                : r + "") in e
              ? Object.defineProperty(e, t, {
                  value: n,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (e[t] = n),
            e
          );
        }
        let u =
          (((r = {}).MISSING_MESSAGE = "MISSING_MESSAGE"),
          (r.MISSING_FORMAT = "MISSING_FORMAT"),
          (r.ENVIRONMENT_FALLBACK = "ENVIRONMENT_FALLBACK"),
          (r.INSUFFICIENT_PATH = "INSUFFICIENT_PATH"),
          (r.INVALID_MESSAGE = "INVALID_MESSAGE"),
          (r.INVALID_KEY = "INVALID_KEY"),
          (r.FORMATTING_ERROR = "FORMATTING_ERROR"),
          r);
        class l extends Error {
          constructor(e, t) {
            let n = e;
            t && (n += ": " + t),
              super(n),
              c(this, "code", void 0),
              c(this, "originalMessage", void 0),
              (this.code = e),
              t && (this.originalMessage = t);
          }
        }
        function f(e, t) {
          return e
            ? Object.keys(e).reduce(
                (n, r) => ((n[r] = { timeZone: t, ...e[r] }), n),
                {}
              )
            : e;
        }
        function d(e, t, n, r) {
          let i = s.joinPath(r, n);
          if (!t) throw Error(i);
          let o = t;
          return (
            n.split(".").forEach((t) => {
              let n = o[t];
              if (null == t || null == n) throw Error(i + " (".concat(e, ")"));
              o = n;
            }),
            o
          );
        }
        let h = (365 / 12) * 86400,
          p = {
            second: 1,
            seconds: 1,
            minute: 60,
            minutes: 60,
            hour: 3600,
            hours: 3600,
            day: 86400,
            days: 86400,
            week: 604800,
            weeks: 604800,
            month: (365 / 12) * 86400,
            months: (365 / 12) * 86400,
            quarter: (365 / 12) * 259200,
            quarters: (365 / 12) * 259200,
            year: 31536e3,
            years: 31536e3,
          };
        (t.IntlError = l),
          (t.IntlErrorCode = u),
          (t.createBaseTranslator = function (e) {
            let t = (function (e, t, n) {
              let r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : s.defaultOnError;
              try {
                if (!t) throw Error(void 0);
                let r = n ? d(e, t, n) : t;
                if (!r) throw Error(n);
                return r;
              } catch (t) {
                let e = new l(u.MISSING_MESSAGE, t.message);
                return r(e), e;
              }
            })(e.locale, e.messages, e.namespace, e.onError);
            return (function (e) {
              let {
                  cache: t,
                  defaultTranslationValues: n,
                  formats: r,
                  formatters: i,
                  getMessageFallback: c = s.defaultGetMessageFallback,
                  locale: h,
                  messagesOrError: p,
                  namespace: m,
                  onError: g,
                  timeZone: y,
                } = e,
                b = p instanceof l;
              function w(e, t, n) {
                let r = new l(t, n);
                return g(r), c({ error: r, key: e, namespace: m });
              }
              function v(e, l, g) {
                let v, A;
                if (b) return c({ error: p, key: e, namespace: m });
                try {
                  v = d(h, p, e, m);
                } catch (t) {
                  return w(e, u.MISSING_MESSAGE, t.message);
                }
                if ("object" == typeof v) {
                  let t;
                  return w(
                    e,
                    Array.isArray(v) ? u.INVALID_MESSAGE : u.INSUFFICIENT_PATH,
                    t
                  );
                }
                let E = (function (e, t) {
                  if (t) return;
                  let n = e.replace(/'([{}])/gi, "$1");
                  return /<|{/.test(n) ? void 0 : n;
                })(v, l);
                if (E) return E;
                i.getMessageFormat ||
                  (i.getMessageFormat = s.memoFn(function () {
                    return new a.default(
                      arguments.length <= 0 ? void 0 : arguments[0],
                      arguments.length <= 1 ? void 0 : arguments[1],
                      arguments.length <= 2 ? void 0 : arguments[2],
                      {
                        formatters: i,
                        ...(arguments.length <= 3 ? void 0 : arguments[3]),
                      }
                    );
                  }, t.message));
                try {
                  A = i.getMessageFormat(
                    v,
                    h,
                    (function (e, t) {
                      let n = t ? { ...e, dateTime: f(e.dateTime, t) } : e,
                        r = a.default.formats.date,
                        i = t ? f(r, t) : r,
                        o = a.default.formats.time,
                        s = t ? f(o, t) : o;
                      return {
                        ...n,
                        date: { ...i, ...n.dateTime },
                        time: { ...s, ...n.dateTime },
                      };
                    })({ ...r, ...g }, y),
                    {
                      formatters: {
                        ...i,
                        getDateTimeFormat: (e, t) =>
                          i.getDateTimeFormat(e, { timeZone: y, ...t }),
                      },
                    }
                  );
                } catch (t) {
                  return w(e, u.INVALID_MESSAGE, t.message);
                }
                try {
                  let e = A.format(
                    (function (e) {
                      if (0 === Object.keys(e).length) return;
                      let t = {};
                      return (
                        Object.keys(e).forEach((n) => {
                          let r,
                            i = 0,
                            s = e[n];
                          (r =
                            "function" == typeof s
                              ? (e) => {
                                  let t = s(e);
                                  return o.isValidElement(t)
                                    ? o.cloneElement(t, { key: n + i++ })
                                    : t;
                                }
                              : s),
                            (t[n] = r);
                        }),
                        t
                      );
                    })({ ...n, ...l })
                  );
                  if (null == e) throw Error(void 0);
                  return o.isValidElement(e) ||
                    Array.isArray(e) ||
                    "string" == typeof e
                    ? e
                    : String(e);
                } catch (t) {
                  return w(e, u.FORMATTING_ERROR, t.message);
                }
              }
              function A(e, t, n) {
                let r = v(e, t, n);
                return "string" != typeof r
                  ? w(e, u.INVALID_MESSAGE, void 0)
                  : r;
              }
              return (
                (A.rich = v),
                (A.markup = (e, t, n) => {
                  let r = v(e, t, n);
                  if ("string" != typeof r) {
                    let t = new l(u.FORMATTING_ERROR, void 0);
                    return g(t), c({ error: t, key: e, namespace: m });
                  }
                  return r;
                }),
                (A.raw = (e) => {
                  if (b) return c({ error: p, key: e, namespace: m });
                  try {
                    return d(h, p, e, m);
                  } catch (t) {
                    return w(e, u.MISSING_MESSAGE, t.message);
                  }
                }),
                (A.has = (e) => {
                  if (b) return !1;
                  try {
                    return d(h, p, e, m), !0;
                  } catch (e) {
                    return !1;
                  }
                }),
                A
              );
            })({ ...e, messagesOrError: t });
          }),
          (t.createFormatter = function (e) {
            let {
              _cache: t = s.createCache(),
              _formatters: n = s.createIntlFormatters(t),
              formats: r,
              locale: i,
              now: o,
              onError: a = s.defaultOnError,
              timeZone: c,
            } = e;
            function f(e) {
              var t;
              return (
                (null !== (t = e) && void 0 !== t && t.timeZone) ||
                  (c
                    ? (e = { ...e, timeZone: c })
                    : a(new l(u.ENVIRONMENT_FALLBACK, void 0))),
                e
              );
            }
            function d(e, t, n, r) {
              let i;
              try {
                i = (function (e, t) {
                  let n;
                  if ("string" == typeof t) {
                    if (!(n = null == e ? void 0 : e[t])) {
                      let e = new l(u.MISSING_FORMAT, void 0);
                      throw (a(e), e);
                    }
                  } else n = t;
                  return n;
                })(t, e);
              } catch (e) {
                return r();
              }
              try {
                return n(i);
              } catch (e) {
                return a(new l(u.FORMATTING_ERROR, e.message)), r();
              }
            }
            function m(e, t) {
              return d(
                t,
                null == r ? void 0 : r.dateTime,
                (t) => ((t = f(t)), n.getDateTimeFormat(i, t).format(e)),
                () => String(e)
              );
            }
            function g() {
              return (
                o || (a(new l(u.ENVIRONMENT_FALLBACK, void 0)), new Date())
              );
            }
            return {
              dateTime: m,
              number: function (e, t) {
                return d(
                  t,
                  null == r ? void 0 : r.number,
                  (t) => n.getNumberFormat(i, t).format(e),
                  () => String(e)
                );
              },
              relativeTime: function (e, t) {
                try {
                  var r;
                  let o, s;
                  let a = {};
                  t instanceof Date || "number" == typeof t
                    ? (o = new Date(t))
                    : t &&
                      ((o = null != t.now ? new Date(t.now) : g()),
                      (s = t.unit),
                      (a.style = t.style),
                      (a.numberingSystem = t.numberingSystem)),
                    o || (o = g());
                  let c = (new Date(e).getTime() - o.getTime()) / 1e3;
                  s ||
                    (s = (function (e) {
                      let t = Math.abs(e);
                      return t < 60
                        ? "second"
                        : t < 3600
                        ? "minute"
                        : t < 86400
                        ? "hour"
                        : t < 604800
                        ? "day"
                        : t < h
                        ? "week"
                        : t < 31536e3
                        ? "month"
                        : "year";
                    })(c)),
                    (a.numeric = "second" === s ? "auto" : "always");
                  let u = ((r = s), Math.round(c / p[r]));
                  return n.getRelativeTimeFormat(i, a).format(u, s);
                } catch (t) {
                  return a(new l(u.FORMATTING_ERROR, t.message)), String(e);
                }
              },
              list: function (e, t) {
                let o = [],
                  s = new Map(),
                  a = 0;
                for (let t of e) {
                  let e;
                  "object" == typeof t
                    ? ((e = String(a)), s.set(e, t))
                    : (e = String(t)),
                    o.push(e),
                    a++;
                }
                return d(
                  t,
                  null == r ? void 0 : r.list,
                  (e) => {
                    let t = n
                      .getListFormat(i, e)
                      .formatToParts(o)
                      .map((e) =>
                        "literal" === e.type
                          ? e.value
                          : s.get(e.value) || e.value
                      );
                    return s.size > 0 ? t : t.join("");
                  },
                  () => String(e)
                );
              },
              dateTimeRange: function (e, t, o) {
                return d(
                  o,
                  null == r ? void 0 : r.dateTime,
                  (r) => (
                    (r = f(r)), n.getDateTimeFormat(i, r).formatRange(e, t)
                  ),
                  () => [m(e), m(t)].join(" – ")
                );
              },
            };
          }),
          (t.resolveNamespace = function (e, t) {
            return e === t ? void 0 : e.slice((t + ".").length);
          });
      },
      13350: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(9832),
          i = n(14907),
          o = n(24563),
          s = n(69362),
          a = n(38780),
          c = n(76357);
        n(82410),
          n(2265),
          n(1360),
          n(23442),
          (t.IntlError = r.IntlError),
          (t.IntlErrorCode = r.IntlErrorCode),
          (t.createFormatter = r.createFormatter),
          (t.createTranslator = i.createTranslator),
          (t._createCache = o.createCache),
          (t._createIntlFormatters = o.createIntlFormatters),
          (t.initializeConfig = o.initializeConfig),
          (t.IntlProvider = s.IntlProvider),
          (t.useFormatter = a.useFormatter),
          (t.useMessages = a.useMessages),
          (t.useNow = a.useNow),
          (t.useTimeZone = a.useTimeZone),
          (t.useTranslations = a.useTranslations),
          (t.useLocale = c.useLocale);
      },
      24563: function (e, t, n) {
        "use strict";
        var r = n(1360);
        function i() {
          for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          return t.filter(Boolean).join(".");
        }
        function o(e) {
          return i(e.namespace, e.key);
        }
        function s(e) {
          console.error(e);
        }
        function a(e, t) {
          return r.memoize(e, {
            cache: {
              create: () => ({
                get: (e) => t[e],
                set(e, n) {
                  t[e] = n;
                },
              }),
            },
            strategy: r.strategies.variadic,
          });
        }
        function c(e, t) {
          return a(function () {
            for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
              n[r] = arguments[r];
            return new e(...n);
          }, t);
        }
        (t.createCache = function () {
          return {
            dateTime: {},
            number: {},
            message: {},
            relativeTime: {},
            pluralRules: {},
            list: {},
            displayNames: {},
          };
        }),
          (t.createIntlFormatters = function (e) {
            return {
              getDateTimeFormat: c(Intl.DateTimeFormat, e.dateTime),
              getNumberFormat: c(Intl.NumberFormat, e.number),
              getPluralRules: c(Intl.PluralRules, e.pluralRules),
              getRelativeTimeFormat: c(Intl.RelativeTimeFormat, e.relativeTime),
              getListFormat: c(Intl.ListFormat, e.list),
              getDisplayNames: c(Intl.DisplayNames, e.displayNames),
            };
          }),
          (t.defaultGetMessageFallback = o),
          (t.defaultOnError = s),
          (t.initializeConfig = function (e) {
            let { getMessageFallback: t, messages: n, onError: r, ...i } = e;
            return {
              ...i,
              messages: n,
              onError: r || s,
              getMessageFallback: t || o,
            };
          }),
          (t.joinPath = i),
          (t.memoFn = a);
      },
      38780: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(69362),
          i = n(76357),
          o = n(2265),
          s = n(9832);
        n(24563), n(1360), n(23442), n(82410);
        let a = !1,
          c = "undefined" == typeof window;
        (t.IntlProvider = r.IntlProvider),
          (t.useLocale = i.useLocale),
          (t.useFormatter = function () {
            let {
              formats: e,
              formatters: t,
              locale: n,
              now: r,
              onError: a,
              timeZone: c,
            } = i.useIntlContext();
            return o.useMemo(
              () =>
                s.createFormatter({
                  formats: e,
                  locale: n,
                  now: r,
                  onError: a,
                  timeZone: c,
                  _formatters: t,
                }),
              [e, t, r, n, a, c]
            );
          }),
          (t.useMessages = function () {
            let e = i.useIntlContext();
            if (!e.messages) throw Error(void 0);
            return e.messages;
          }),
          (t.useNow = function (e) {
            let t = null == e ? void 0 : e.updateInterval,
              { now: n } = i.useIntlContext(),
              [r, s] = o.useState(n || new Date());
            return (
              o.useEffect(() => {
                if (!t) return;
                let e = setInterval(() => {
                  s(new Date());
                }, t);
                return () => {
                  clearInterval(e);
                };
              }, [n, t]),
              null == t && n ? n : r
            );
          }),
          (t.useTimeZone = function () {
            return i.useIntlContext().timeZone;
          }),
          (t.useTranslations = function (e) {
            return (function (e, t, n) {
              let {
                  cache: r,
                  defaultTranslationValues: u,
                  formats: l,
                  formatters: f,
                  getMessageFallback: d,
                  locale: h,
                  onError: p,
                  timeZone: m,
                } = i.useIntlContext(),
                g = e["!"],
                y = s.resolveNamespace(t, "!");
              return (
                m ||
                  a ||
                  !c ||
                  ((a = !0),
                  p(
                    new s.IntlError(
                      s.IntlErrorCode.ENVIRONMENT_FALLBACK,
                      void 0
                    )
                  )),
                o.useMemo(
                  () =>
                    s.createBaseTranslator({
                      cache: r,
                      formatters: f,
                      getMessageFallback: d,
                      messages: g,
                      defaultTranslationValues: u,
                      namespace: y,
                      onError: p,
                      formats: l,
                      locale: h,
                      timeZone: m,
                    }),
                  [r, f, d, g, u, y, p, l, h, m]
                )
              );
            })(
              { "!": i.useIntlContext().messages },
              e ? "!.".concat(e) : "!",
              0
            );
          });
      },
      10034: function (e, t, n) {
        "use strict";
        /**
         * @license React
         * use-sync-external-store-shim.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var r = n(2265),
          i =
            "function" == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                },
          o = r.useState,
          s = r.useEffect,
          a = r.useLayoutEffect,
          c = r.useDebugValue;
        function u(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !i(e, n);
          } catch (e) {
            return !0;
          }
        }
        var l =
          "undefined" == typeof window ||
          void 0 === window.document ||
          void 0 === window.document.createElement
            ? function (e, t) {
                return t();
              }
            : function (e, t) {
                var n = t(),
                  r = o({ inst: { value: n, getSnapshot: t } }),
                  i = r[0].inst,
                  l = r[1];
                return (
                  a(
                    function () {
                      (i.value = n),
                        (i.getSnapshot = t),
                        u(i) && l({ inst: i });
                    },
                    [e, n, t]
                  ),
                  s(
                    function () {
                      return (
                        u(i) && l({ inst: i }),
                        e(function () {
                          u(i) && l({ inst: i });
                        })
                      );
                    },
                    [e]
                  ),
                  c(n),
                  n
                );
              };
        t.useSyncExternalStore =
          void 0 !== r.useSyncExternalStore ? r.useSyncExternalStore : l;
      },
      83044: function (e, t, n) {
        "use strict";
        /**
         * @license React
         * use-sync-external-store-shim/with-selector.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var r = n(2265),
          i = n(82558),
          o =
            "function" == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                },
          s = i.useSyncExternalStore,
          a = r.useRef,
          c = r.useEffect,
          u = r.useMemo,
          l = r.useDebugValue;
        t.useSyncExternalStoreWithSelector = function (e, t, n, r, i) {
          var f = a(null);
          if (null === f.current) {
            var d = { hasValue: !1, value: null };
            f.current = d;
          } else d = f.current;
          var h = s(
            e,
            (f = u(
              function () {
                function e(e) {
                  if (!c) {
                    if (
                      ((c = !0),
                      (s = e),
                      (e = r(e)),
                      void 0 !== i && d.hasValue)
                    ) {
                      var t = d.value;
                      if (i(t, e)) return (a = t);
                    }
                    return (a = e);
                  }
                  if (((t = a), o(s, e))) return t;
                  var n = r(e);
                  return void 0 !== i && i(t, n) ? t : ((s = e), (a = n));
                }
                var s,
                  a,
                  c = !1,
                  u = void 0 === n ? null : n;
                return [
                  function () {
                    return e(t());
                  },
                  null === u
                    ? void 0
                    : function () {
                        return e(u());
                      },
                ];
              },
              [t, n, r, i]
            ))[0],
            f[1]
          );
          return (
            c(
              function () {
                (d.hasValue = !0), (d.value = h);
              },
              [h]
            ),
            l(h),
            h
          );
        };
      },
      82558: function (e, t, n) {
        "use strict";
        e.exports = n(10034);
      },
      35195: function (e, t, n) {
        "use strict";
        e.exports = n(83044);
      },
      81025: function (e, t, n) {
        "use strict";
        n.d(t, {
          Dd: function () {
            return I;
          },
          FF: function () {
            return R;
          },
          Fy: function () {
            return B;
          },
          H9: function () {
            return N;
          },
          S5: function () {
            return w;
          },
          Wd: function () {
            return E;
          },
          Z2: function () {
            return x;
          },
          _t: function () {
            return s;
          },
          bytesToNumberBE: function () {
            return g;
          },
          ci: function () {
            return l;
          },
          dQ: function () {
            return S;
          },
          eV: function () {
            return A;
          },
          gk: function () {
            return a;
          },
          hexToBytes: function () {
            return m;
          },
          n$: function () {
            return O;
          },
          ql: function () {
            return v;
          },
          tL: function () {
            return b;
          },
          ty: function () {
            return y;
          },
          uw: function () {
            return c;
          },
          uz: function () {
            return f;
          },
        });
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            BigInt(0),
          i = BigInt(1),
          o = BigInt(2);
        function s(e) {
          return (
            e instanceof Uint8Array ||
            (null != e &&
              "object" == typeof e &&
              "Uint8Array" === e.constructor.name)
          );
        }
        function a(e) {
          if (!s(e)) throw Error("Uint8Array expected");
        }
        function c(e, t) {
          if ("boolean" != typeof t)
            throw Error(`${e} must be valid boolean, got "${t}".`);
        }
        let u = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        function l(e) {
          a(e);
          let t = "";
          for (let n = 0; n < e.length; n++) t += u[e[n]];
          return t;
        }
        function f(e) {
          let t = e.toString(16);
          return 1 & t.length ? `0${t}` : t;
        }
        function d(e) {
          if ("string" != typeof e)
            throw Error("hex string expected, got " + typeof e);
          return BigInt("" === e ? "0" : `0x${e}`);
        }
        let h = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };
        function p(e) {
          return e >= h._0 && e <= h._9
            ? e - h._0
            : e >= h._A && e <= h._F
            ? e - (h._A - 10)
            : e >= h._a && e <= h._f
            ? e - (h._a - 10)
            : void 0;
        }
        function m(e) {
          if ("string" != typeof e)
            throw Error("hex string expected, got " + typeof e);
          let t = e.length,
            n = t / 2;
          if (t % 2)
            throw Error(
              "padded hex string expected, got unpadded hex of length " + t
            );
          let r = new Uint8Array(n);
          for (let t = 0, i = 0; t < n; t++, i += 2) {
            let n = p(e.charCodeAt(i)),
              o = p(e.charCodeAt(i + 1));
            if (void 0 === n || void 0 === o)
              throw Error(
                'hex string expected, got non-hex character "' +
                  (e[i] + e[i + 1]) +
                  '" at index ' +
                  i
              );
            r[t] = 16 * n + o;
          }
          return r;
        }
        function g(e) {
          return d(l(e));
        }
        function y(e) {
          return a(e), d(l(Uint8Array.from(e).reverse()));
        }
        function b(e, t) {
          return m(e.toString(16).padStart(2 * t, "0"));
        }
        function w(e, t) {
          return b(e, t).reverse();
        }
        function v(e, t, n) {
          let r;
          if ("string" == typeof t)
            try {
              r = m(t);
            } catch (n) {
              throw Error(
                `${e} must be valid hex string, got "${t}". Cause: ${n}`
              );
            }
          else if (s(t)) r = Uint8Array.from(t);
          else throw Error(`${e} must be hex string or Uint8Array`);
          let i = r.length;
          if ("number" == typeof n && i !== n)
            throw Error(`${e} expected ${n} bytes, got ${i}`);
          return r;
        }
        function A(...e) {
          let t = 0;
          for (let n = 0; n < e.length; n++) {
            let r = e[n];
            a(r), (t += r.length);
          }
          let n = new Uint8Array(t);
          for (let t = 0, r = 0; t < e.length; t++) {
            let i = e[t];
            n.set(i, r), (r += i.length);
          }
          return n;
        }
        function E(e, t) {
          if (e.length !== t.length) return !1;
          let n = 0;
          for (let r = 0; r < e.length; r++) n |= e[r] ^ t[r];
          return 0 === n;
        }
        let C = (e) => "bigint" == typeof e && r <= e;
        function x(e, t, n) {
          return C(e) && C(t) && C(n) && t <= e && e < n;
        }
        function B(e, t, n, r) {
          if (!x(t, n, r))
            throw Error(
              `expected valid ${e}: ${n} <= n < ${r}, got ${typeof t} ${t}`
            );
        }
        function I(e) {
          let t;
          for (t = 0; e > r; e >>= i, t += 1);
          return t;
        }
        let S = (e) => (o << BigInt(e - 1)) - i,
          P = (e) => new Uint8Array(e),
          T = (e) => Uint8Array.from(e);
        function O(e, t, n) {
          if ("number" != typeof e || e < 2)
            throw Error("hashLen must be a number");
          if ("number" != typeof t || t < 2)
            throw Error("qByteLen must be a number");
          if ("function" != typeof n) throw Error("hmacFn must be a function");
          let r = P(e),
            i = P(e),
            o = 0,
            s = () => {
              r.fill(1), i.fill(0), (o = 0);
            },
            a = (...e) => n(i, r, ...e),
            c = (e = P()) => {
              (i = a(T([0]), e)),
                (r = a()),
                0 !== e.length && ((i = a(T([1]), e)), (r = a()));
            },
            u = () => {
              if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
              let e = 0,
                n = [];
              for (; e < t; ) {
                let t = (r = a()).slice();
                n.push(t), (e += r.length);
              }
              return A(...n);
            };
          return (e, t) => {
            let n;
            for (s(), c(e); !(n = t(u())); ) c();
            return s(), n;
          };
        }
        let k = {
          bigint: (e) => "bigint" == typeof e,
          function: (e) => "function" == typeof e,
          boolean: (e) => "boolean" == typeof e,
          string: (e) => "string" == typeof e,
          stringOrUint8Array: (e) => "string" == typeof e || s(e),
          isSafeInteger: (e) => Number.isSafeInteger(e),
          array: (e) => Array.isArray(e),
          field: (e, t) => t.Fp.isValid(e),
          hash: (e) =>
            "function" == typeof e && Number.isSafeInteger(e.outputLen),
        };
        function R(e, t, n = {}) {
          let r = (t, n, r) => {
            let i = k[n];
            if ("function" != typeof i)
              throw Error(`Invalid validator "${n}", expected function`);
            let o = e[t];
            if ((!r || void 0 !== o) && !i(o, e))
              throw Error(
                `Invalid param ${String(t)}=${o} (${typeof o}), expected ${n}`
              );
          };
          for (let [e, n] of Object.entries(t)) r(e, n, !1);
          for (let [e, t] of Object.entries(n)) r(e, t, !0);
          return e;
        }
        function N(e) {
          let t = new WeakMap();
          return (n, ...r) => {
            let i = t.get(n);
            if (void 0 !== i) return i;
            let o = e(n, ...r);
            return t.set(n, o), o;
          };
        }
      },
      44101: function (e, t, n) {
        "use strict";
        n.d(t, {
          secp256k1: function () {
            return H;
          },
        });
        var r = n(29272),
          i = n(74043),
          o = n(25884);
        class s extends o.kb {
          constructor(e, t) {
            super(), (this.finished = !1), (this.destroyed = !1), (0, i.vp)(e);
            let n = (0, o.O0)(t);
            if (
              ((this.iHash = e.create()),
              "function" != typeof this.iHash.update)
            )
              throw Error(
                "Expected instance of class which extends utils.Hash"
              );
            (this.blockLen = this.iHash.blockLen),
              (this.outputLen = this.iHash.outputLen);
            let r = this.blockLen,
              s = new Uint8Array(r);
            s.set(n.length > r ? e.create().update(n).digest() : n);
            for (let e = 0; e < s.length; e++) s[e] ^= 54;
            this.iHash.update(s), (this.oHash = e.create());
            for (let e = 0; e < s.length; e++) s[e] ^= 106;
            this.oHash.update(s), s.fill(0);
          }
          update(e) {
            return (0, i.Gg)(this), this.iHash.update(e), this;
          }
          digestInto(e) {
            (0, i.Gg)(this),
              (0, i.aI)(e, this.outputLen),
              (this.finished = !0),
              this.iHash.digestInto(e),
              this.oHash.update(e),
              this.oHash.digestInto(e),
              this.destroy();
          }
          digest() {
            let e = new Uint8Array(this.oHash.outputLen);
            return this.digestInto(e), e;
          }
          _cloneInto(e) {
            e || (e = Object.create(Object.getPrototypeOf(this), {}));
            let {
              oHash: t,
              iHash: n,
              finished: r,
              destroyed: i,
              blockLen: o,
              outputLen: s,
            } = this;
            return (
              (e.finished = r),
              (e.destroyed = i),
              (e.blockLen = o),
              (e.outputLen = s),
              (e.oHash = t._cloneInto(e.oHash)),
              (e.iHash = n._cloneInto(e.iHash)),
              e
            );
          }
          destroy() {
            (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
          }
        }
        let a = (e, t, n) => new s(e, t).update(n).digest();
        a.create = (e, t) => new s(e, t);
        var c = n(81025);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let u =
            BigInt(0),
          l = BigInt(1),
          f = BigInt(2),
          d = BigInt(3),
          h = BigInt(4),
          p = BigInt(5),
          m = BigInt(8);
        function g(e, t) {
          let n = e % t;
          return n >= u ? n : t + n;
        }
        function y(e, t, n) {
          let r = e;
          for (; t-- > u; ) (r *= r), (r %= n);
          return r;
        }
        function b(e, t) {
          if (e === u || t <= u)
            throw Error(
              `invert: expected positive integers, got n=${e} mod=${t}`
            );
          let n = g(e, t),
            r = t,
            i = u,
            o = l,
            s = l,
            a = u;
          for (; n !== u; ) {
            let e = r / n,
              t = r % n,
              c = i - s * e,
              u = o - a * e;
            (r = n), (n = t), (i = s), (o = a), (s = c), (a = u);
          }
          if (r !== l) throw Error("invert: does not exist");
          return g(i, t);
        }
        BigInt(9), BigInt(16);
        let w = [
          "create",
          "isValid",
          "is0",
          "neg",
          "inv",
          "sqrt",
          "sqr",
          "eql",
          "add",
          "sub",
          "mul",
          "pow",
          "div",
          "addN",
          "subN",
          "mulN",
          "sqrN",
        ];
        function v(e, t) {
          let n = void 0 !== t ? t : e.toString(2).length;
          return { nBitLength: n, nByteLength: Math.ceil(n / 8) };
        }
        function A(e, t, n = !1, r = {}) {
          if (e <= u) throw Error(`Expected Field ORDER > 0, got ${e}`);
          let { nBitLength: i, nByteLength: o } = v(e, t);
          if (o > 2048)
            throw Error("Field lengths over 2048 bytes are not supported");
          let s = (function (e) {
              if (e % h === d) {
                let t = (e + l) / h;
                return function (e, n) {
                  let r = e.pow(n, t);
                  if (!e.eql(e.sqr(r), n))
                    throw Error("Cannot find square root");
                  return r;
                };
              }
              if (e % m === p) {
                let t = (e - p) / m;
                return function (e, n) {
                  let r = e.mul(n, f),
                    i = e.pow(r, t),
                    o = e.mul(n, i),
                    s = e.mul(e.mul(o, f), i),
                    a = e.mul(o, e.sub(s, e.ONE));
                  if (!e.eql(e.sqr(a), n))
                    throw Error("Cannot find square root");
                  return a;
                };
              }
              return (function (e) {
                let t, n, r;
                let i = (e - l) / f;
                for (t = e - l, n = 0; t % f === u; t /= f, n++);
                for (
                  r = f;
                  r < e &&
                  (function (e, t, n) {
                    if (n <= u || t < u)
                      throw Error("Expected power/modulo > 0");
                    if (n === l) return u;
                    let r = l;
                    for (; t > u; )
                      t & l && (r = (r * e) % n), (e = (e * e) % n), (t >>= l);
                    return r;
                  })(r, i, e) !==
                    e - l;
                  r++
                );
                if (1 === n) {
                  let t = (e + l) / h;
                  return function (e, n) {
                    let r = e.pow(n, t);
                    if (!e.eql(e.sqr(r), n))
                      throw Error("Cannot find square root");
                    return r;
                  };
                }
                let o = (t + l) / f;
                return function (e, s) {
                  if (e.pow(s, i) === e.neg(e.ONE))
                    throw Error("Cannot find square root");
                  let a = n,
                    c = e.pow(e.mul(e.ONE, r), t),
                    u = e.pow(s, o),
                    f = e.pow(s, t);
                  for (; !e.eql(f, e.ONE); ) {
                    if (e.eql(f, e.ZERO)) return e.ZERO;
                    let t = 1;
                    for (let n = e.sqr(f); t < a && !e.eql(n, e.ONE); t++)
                      n = e.sqr(n);
                    let n = e.pow(c, l << BigInt(a - t - 1));
                    (c = e.sqr(n)),
                      (u = e.mul(u, n)),
                      (f = e.mul(f, c)),
                      (a = t);
                  }
                  return u;
                };
              })(e);
            })(e),
            a = Object.freeze({
              ORDER: e,
              BITS: i,
              BYTES: o,
              MASK: (0, c.dQ)(i),
              ZERO: u,
              ONE: l,
              create: (t) => g(t, e),
              isValid: (t) => {
                if ("bigint" != typeof t)
                  throw Error(
                    `Invalid field element: expected bigint, got ${typeof t}`
                  );
                return u <= t && t < e;
              },
              is0: (e) => e === u,
              isOdd: (e) => (e & l) === l,
              neg: (t) => g(-t, e),
              eql: (e, t) => e === t,
              sqr: (t) => g(t * t, e),
              add: (t, n) => g(t + n, e),
              sub: (t, n) => g(t - n, e),
              mul: (t, n) => g(t * n, e),
              pow: (e, t) =>
                (function (e, t, n) {
                  if (n < u) throw Error("Expected power > 0");
                  if (n === u) return e.ONE;
                  if (n === l) return t;
                  let r = e.ONE,
                    i = t;
                  for (; n > u; )
                    n & l && (r = e.mul(r, i)), (i = e.sqr(i)), (n >>= l);
                  return r;
                })(a, e, t),
              div: (t, n) => g(t * b(n, e), e),
              sqrN: (e) => e * e,
              addN: (e, t) => e + t,
              subN: (e, t) => e - t,
              mulN: (e, t) => e * t,
              inv: (t) => b(t, e),
              sqrt: r.sqrt || ((e) => s(a, e)),
              invertBatch: (e) =>
                (function (e, t) {
                  let n = Array(t.length),
                    r = t.reduce(
                      (t, r, i) => (e.is0(r) ? t : ((n[i] = t), e.mul(t, r))),
                      e.ONE
                    ),
                    i = e.inv(r);
                  return (
                    t.reduceRight(
                      (t, r, i) =>
                        e.is0(r) ? t : ((n[i] = e.mul(t, n[i])), e.mul(t, r)),
                      i
                    ),
                    n
                  );
                })(a, e),
              cmov: (e, t, n) => (n ? t : e),
              toBytes: (e) => (n ? (0, c.S5)(e, o) : (0, c.tL)(e, o)),
              fromBytes: (e) => {
                if (e.length !== o)
                  throw Error(`Fp.fromBytes: expected ${o}, got ${e.length}`);
                return n ? (0, c.ty)(e) : (0, c.bytesToNumberBE)(e);
              },
            });
          return Object.freeze(a);
        }
        function E(e) {
          if ("bigint" != typeof e) throw Error("field order must be bigint");
          return Math.ceil(e.toString(2).length / 8);
        }
        function C(e) {
          let t = E(e);
          return t + Math.ceil(t / 2);
        }
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let x =
            BigInt(0),
          B = BigInt(1),
          I = new WeakMap(),
          S = new WeakMap();
        function P(e) {
          return (
            (function (e) {
              let t = w.reduce((e, t) => ((e[t] = "function"), e), {
                ORDER: "bigint",
                MASK: "bigint",
                BYTES: "isSafeInteger",
                BITS: "isSafeInteger",
              });
              (0, c.FF)(e, t);
            })(e.Fp),
            (0, c.FF)(
              e,
              { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
              { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
            ),
            Object.freeze({ ...v(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
          );
        }
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ function T(
          e
        ) {
          void 0 !== e.lowS && (0, c.uw)("lowS", e.lowS),
            void 0 !== e.prehash && (0, c.uw)("prehash", e.prehash);
        }
        let { bytesToNumberBE: O, hexToBytes: k } = c,
          R = {
            Err: class extends Error {
              constructor(e = "") {
                super(e);
              }
            },
            _tlv: {
              encode: (e, t) => {
                let { Err: n } = R;
                if (e < 0 || e > 256) throw new n("tlv.encode: wrong tag");
                if (1 & t.length) throw new n("tlv.encode: unpadded data");
                let r = t.length / 2,
                  i = c.uz(r);
                if ((i.length / 2) & 128)
                  throw new n("tlv.encode: long form length too big");
                let o = r > 127 ? c.uz((i.length / 2) | 128) : "";
                return `${c.uz(e)}${o}${i}${t}`;
              },
              decode(e, t) {
                let { Err: n } = R,
                  r = 0;
                if (e < 0 || e > 256) throw new n("tlv.encode: wrong tag");
                if (t.length < 2 || t[r++] !== e)
                  throw new n("tlv.decode: wrong tlv");
                let i = t[r++],
                  o = 0;
                if (128 & i) {
                  let e = 127 & i;
                  if (!e)
                    throw new n(
                      "tlv.decode(long): indefinite length not supported"
                    );
                  if (e > 4)
                    throw new n("tlv.decode(long): byte length is too big");
                  let s = t.subarray(r, r + e);
                  if (s.length !== e)
                    throw new n("tlv.decode: length bytes not complete");
                  if (0 === s[0])
                    throw new n("tlv.decode(long): zero leftmost byte");
                  for (let e of s) o = (o << 8) | e;
                  if (((r += e), o < 128))
                    throw new n("tlv.decode(long): not minimal encoding");
                } else o = i;
                let s = t.subarray(r, r + o);
                if (s.length !== o)
                  throw new n("tlv.decode: wrong value length");
                return { v: s, l: t.subarray(r + o) };
              },
            },
            _int: {
              encode(e) {
                let { Err: t } = R;
                if (e < N)
                  throw new t("integer: negative integers are not allowed");
                let n = c.uz(e);
                if (
                  (8 & Number.parseInt(n[0], 16) && (n = "00" + n),
                  1 & n.length)
                )
                  throw new t("unexpected assertion");
                return n;
              },
              decode(e) {
                let { Err: t } = R;
                if (128 & e[0])
                  throw new t("Invalid signature integer: negative");
                if (0 === e[0] && !(128 & e[1]))
                  throw new t(
                    "Invalid signature integer: unnecessary leading zero"
                  );
                return O(e);
              },
            },
            toSig(e) {
              let { Err: t, _int: n, _tlv: r } = R,
                i = "string" == typeof e ? k(e) : e;
              c.gk(i);
              let { v: o, l: s } = r.decode(48, i);
              if (s.length)
                throw new t("Invalid signature: left bytes after parsing");
              let { v: a, l: u } = r.decode(2, o),
                { v: l, l: f } = r.decode(2, u);
              if (f.length)
                throw new t("Invalid signature: left bytes after parsing");
              return { r: n.decode(a), s: n.decode(l) };
            },
            hexFromSig(e) {
              let { _tlv: t, _int: n } = R,
                r = `${t.encode(2, n.encode(e.r))}${t.encode(
                  2,
                  n.encode(e.s)
                )}`;
              return t.encode(48, r);
            },
          },
          N = BigInt(0),
          M = BigInt(1),
          L = (BigInt(2), BigInt(3));
        BigInt(4);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let F =
            BigInt(
              "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
            ),
          U = BigInt(
            "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
          ),
          D = BigInt(1),
          _ = BigInt(2),
          j = (e, t) => (e + t / _) / t,
          G = A(F, void 0, void 0, {
            sqrt: function (e) {
              let t = BigInt(3),
                n = BigInt(6),
                r = BigInt(11),
                i = BigInt(22),
                o = BigInt(23),
                s = BigInt(44),
                a = BigInt(88),
                c = (e * e * e) % F,
                u = (c * c * e) % F,
                l = (y(u, t, F) * u) % F,
                f = (y(l, t, F) * u) % F,
                d = (y(f, _, F) * c) % F,
                h = (y(d, r, F) * d) % F,
                p = (y(h, i, F) * h) % F,
                m = (y(p, s, F) * p) % F,
                g = (y(m, a, F) * m) % F,
                b = (y(g, s, F) * p) % F,
                w = (y(b, t, F) * u) % F,
                v = (y(w, o, F) * h) % F,
                A = (y(v, n, F) * c) % F,
                E = y(A, _, F);
              if (!G.eql(G.sqr(E), e)) throw Error("Cannot find square root");
              return E;
            },
          }),
          H = (function (e, t) {
            let n = (t) =>
              (function (e) {
                let t = (function (e) {
                    let t = P(e);
                    return (
                      c.FF(
                        t,
                        {
                          hash: "hash",
                          hmac: "function",
                          randomBytes: "function",
                        },
                        {
                          bits2int: "function",
                          bits2int_modN: "function",
                          lowS: "boolean",
                        }
                      ),
                      Object.freeze({ lowS: !0, ...t })
                    );
                  })(e),
                  { Fp: n, n: r } = t,
                  i = n.BYTES + 1,
                  o = 2 * n.BYTES + 1;
                function s(e) {
                  return g(e, r);
                }
                let {
                    ProjectivePoint: a,
                    normPrivateKeyToScalar: u,
                    weierstrassEquation: f,
                    isWithinCurveOrder: d,
                  } = (function (e) {
                    let t = (function (e) {
                        let t = P(e);
                        c.FF(
                          t,
                          { a: "field", b: "field" },
                          {
                            allowedPrivateKeyLengths: "array",
                            wrapPrivateKey: "boolean",
                            isTorsionFree: "function",
                            clearCofactor: "function",
                            allowInfinityPoint: "boolean",
                            fromBytes: "function",
                            toBytes: "function",
                          }
                        );
                        let { endo: n, Fp: r, a: i } = t;
                        if (n) {
                          if (!r.eql(i, r.ZERO))
                            throw Error(
                              "Endomorphism can only be defined for Koblitz curves that have a=0"
                            );
                          if (
                            "object" != typeof n ||
                            "bigint" != typeof n.beta ||
                            "function" != typeof n.splitScalar
                          )
                            throw Error(
                              "Expected endomorphism with beta: bigint and splitScalar: function"
                            );
                        }
                        return Object.freeze({ ...t });
                      })(e),
                      { Fp: n } = t,
                      r = A(t.n, t.nBitLength),
                      i =
                        t.toBytes ||
                        ((e, t, r) => {
                          let i = t.toAffine();
                          return c.eV(
                            Uint8Array.from([4]),
                            n.toBytes(i.x),
                            n.toBytes(i.y)
                          );
                        }),
                      o =
                        t.fromBytes ||
                        ((e) => {
                          let t = e.subarray(1);
                          return {
                            x: n.fromBytes(t.subarray(0, n.BYTES)),
                            y: n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES)),
                          };
                        });
                    function s(e) {
                      let { a: r, b: i } = t,
                        o = n.sqr(e),
                        s = n.mul(o, e);
                      return n.add(n.add(s, n.mul(e, r)), i);
                    }
                    if (!n.eql(n.sqr(t.Gy), s(t.Gx)))
                      throw Error(
                        "bad generator point: equation left != right"
                      );
                    function a(e) {
                      let n;
                      let {
                        allowedPrivateKeyLengths: r,
                        nByteLength: i,
                        wrapPrivateKey: o,
                        n: s,
                      } = t;
                      if (r && "bigint" != typeof e) {
                        if (
                          (c._t(e) && (e = c.ci(e)),
                          "string" != typeof e || !r.includes(e.length))
                        )
                          throw Error("Invalid key");
                        e = e.padStart(2 * i, "0");
                      }
                      try {
                        n =
                          "bigint" == typeof e
                            ? e
                            : c.bytesToNumberBE((0, c.ql)("private key", e, i));
                      } catch (t) {
                        throw Error(
                          `private key must be ${i} bytes, hex or bigint, not ${typeof e}`
                        );
                      }
                      return (
                        o && (n = g(n, s)), c.Fy("private key", n, M, s), n
                      );
                    }
                    function u(e) {
                      if (!(e instanceof d))
                        throw Error("ProjectivePoint expected");
                    }
                    let l = (0, c.H9)((e, t) => {
                        let { px: r, py: i, pz: o } = e;
                        if (n.eql(o, n.ONE)) return { x: r, y: i };
                        let s = e.is0();
                        null == t && (t = s ? n.ONE : n.inv(o));
                        let a = n.mul(r, t),
                          c = n.mul(i, t),
                          u = n.mul(o, t);
                        if (s) return { x: n.ZERO, y: n.ZERO };
                        if (!n.eql(u, n.ONE)) throw Error("invZ was invalid");
                        return { x: a, y: c };
                      }),
                      f = (0, c.H9)((e) => {
                        if (e.is0()) {
                          if (t.allowInfinityPoint && !n.is0(e.py)) return;
                          throw Error("bad point: ZERO");
                        }
                        let { x: r, y: i } = e.toAffine();
                        if (!n.isValid(r) || !n.isValid(i))
                          throw Error("bad point: x or y not FE");
                        let o = n.sqr(i),
                          a = s(r);
                        if (!n.eql(o, a))
                          throw Error("bad point: equation left != right");
                        if (!e.isTorsionFree())
                          throw Error("bad point: not in prime-order subgroup");
                        return !0;
                      });
                    class d {
                      constructor(e, t, r) {
                        if (
                          ((this.px = e),
                          (this.py = t),
                          (this.pz = r),
                          null == e || !n.isValid(e))
                        )
                          throw Error("x required");
                        if (null == t || !n.isValid(t))
                          throw Error("y required");
                        if (null == r || !n.isValid(r))
                          throw Error("z required");
                        Object.freeze(this);
                      }
                      static fromAffine(e) {
                        let { x: t, y: r } = e || {};
                        if (!e || !n.isValid(t) || !n.isValid(r))
                          throw Error("invalid affine point");
                        if (e instanceof d)
                          throw Error("projective point not allowed");
                        let i = (e) => n.eql(e, n.ZERO);
                        return i(t) && i(r) ? d.ZERO : new d(t, r, n.ONE);
                      }
                      get x() {
                        return this.toAffine().x;
                      }
                      get y() {
                        return this.toAffine().y;
                      }
                      static normalizeZ(e) {
                        let t = n.invertBatch(e.map((e) => e.pz));
                        return e
                          .map((e, n) => e.toAffine(t[n]))
                          .map(d.fromAffine);
                      }
                      static fromHex(e) {
                        let t = d.fromAffine(o((0, c.ql)("pointHex", e)));
                        return t.assertValidity(), t;
                      }
                      static fromPrivateKey(e) {
                        return d.BASE.multiply(a(e));
                      }
                      static msm(e, t) {
                        return (function (e, t, n, r) {
                          if (
                            !Array.isArray(n) ||
                            !Array.isArray(r) ||
                            r.length !== n.length
                          )
                            throw Error(
                              "arrays of points and scalars must have equal length"
                            );
                          r.forEach((e, n) => {
                            if (!t.isValid(e))
                              throw Error(`wrong scalar at index ${n}`);
                          }),
                            n.forEach((t, n) => {
                              if (!(t instanceof e))
                                throw Error(`wrong point at index ${n}`);
                            });
                          let i = (0, c.Dd)(BigInt(n.length)),
                            o = i > 12 ? i - 3 : i > 4 ? i - 2 : i ? 2 : 1,
                            s = (1 << o) - 1,
                            a = Array(s + 1).fill(e.ZERO),
                            u = Math.floor((t.BITS - 1) / o) * o,
                            l = e.ZERO;
                          for (let t = u; t >= 0; t -= o) {
                            a.fill(e.ZERO);
                            for (let e = 0; e < r.length; e++) {
                              let i = Number((r[e] >> BigInt(t)) & BigInt(s));
                              a[i] = a[i].add(n[e]);
                            }
                            let i = e.ZERO;
                            for (let t = a.length - 1, n = e.ZERO; t > 0; t--)
                              (n = n.add(a[t])), (i = i.add(n));
                            if (((l = l.add(i)), 0 !== t))
                              for (let e = 0; e < o; e++) l = l.double();
                          }
                          return l;
                        })(d, r, e, t);
                      }
                      _setWindowSize(e) {
                        p.setWindowSize(this, e);
                      }
                      assertValidity() {
                        f(this);
                      }
                      hasEvenY() {
                        let { y: e } = this.toAffine();
                        if (n.isOdd) return !n.isOdd(e);
                        throw Error("Field doesn't support isOdd");
                      }
                      equals(e) {
                        u(e);
                        let { px: t, py: r, pz: i } = this,
                          { px: o, py: s, pz: a } = e,
                          c = n.eql(n.mul(t, a), n.mul(o, i)),
                          l = n.eql(n.mul(r, a), n.mul(s, i));
                        return c && l;
                      }
                      negate() {
                        return new d(this.px, n.neg(this.py), this.pz);
                      }
                      double() {
                        let { a: e, b: r } = t,
                          i = n.mul(r, L),
                          { px: o, py: s, pz: a } = this,
                          c = n.ZERO,
                          u = n.ZERO,
                          l = n.ZERO,
                          f = n.mul(o, o),
                          h = n.mul(s, s),
                          p = n.mul(a, a),
                          m = n.mul(o, s);
                        return (
                          (m = n.add(m, m)),
                          (l = n.mul(o, a)),
                          (l = n.add(l, l)),
                          (c = n.mul(e, l)),
                          (u = n.mul(i, p)),
                          (u = n.add(c, u)),
                          (c = n.sub(h, u)),
                          (u = n.add(h, u)),
                          (u = n.mul(c, u)),
                          (c = n.mul(m, c)),
                          (l = n.mul(i, l)),
                          (p = n.mul(e, p)),
                          (m = n.sub(f, p)),
                          (m = n.mul(e, m)),
                          (m = n.add(m, l)),
                          (l = n.add(f, f)),
                          (f = n.add(l, f)),
                          (f = n.add(f, p)),
                          (f = n.mul(f, m)),
                          (u = n.add(u, f)),
                          (p = n.mul(s, a)),
                          (p = n.add(p, p)),
                          (f = n.mul(p, m)),
                          (c = n.sub(c, f)),
                          (l = n.mul(p, h)),
                          (l = n.add(l, l)),
                          new d(c, u, (l = n.add(l, l)))
                        );
                      }
                      add(e) {
                        u(e);
                        let { px: r, py: i, pz: o } = this,
                          { px: s, py: a, pz: c } = e,
                          l = n.ZERO,
                          f = n.ZERO,
                          h = n.ZERO,
                          p = t.a,
                          m = n.mul(t.b, L),
                          g = n.mul(r, s),
                          y = n.mul(i, a),
                          b = n.mul(o, c),
                          w = n.add(r, i),
                          v = n.add(s, a);
                        (w = n.mul(w, v)),
                          (v = n.add(g, y)),
                          (w = n.sub(w, v)),
                          (v = n.add(r, o));
                        let A = n.add(s, c);
                        return (
                          (v = n.mul(v, A)),
                          (A = n.add(g, b)),
                          (v = n.sub(v, A)),
                          (A = n.add(i, o)),
                          (l = n.add(a, c)),
                          (A = n.mul(A, l)),
                          (l = n.add(y, b)),
                          (A = n.sub(A, l)),
                          (h = n.mul(p, v)),
                          (l = n.mul(m, b)),
                          (h = n.add(l, h)),
                          (l = n.sub(y, h)),
                          (h = n.add(y, h)),
                          (f = n.mul(l, h)),
                          (y = n.add(g, g)),
                          (y = n.add(y, g)),
                          (b = n.mul(p, b)),
                          (v = n.mul(m, v)),
                          (y = n.add(y, b)),
                          (b = n.sub(g, b)),
                          (b = n.mul(p, b)),
                          (v = n.add(v, b)),
                          (g = n.mul(y, v)),
                          (f = n.add(f, g)),
                          (g = n.mul(A, v)),
                          (l = n.mul(w, l)),
                          (l = n.sub(l, g)),
                          (g = n.mul(w, y)),
                          (h = n.mul(A, h)),
                          new d(l, f, (h = n.add(h, g)))
                        );
                      }
                      subtract(e) {
                        return this.add(e.negate());
                      }
                      is0() {
                        return this.equals(d.ZERO);
                      }
                      wNAF(e) {
                        return p.wNAFCached(this, e, d.normalizeZ);
                      }
                      multiplyUnsafe(e) {
                        c.Fy("scalar", e, N, t.n);
                        let r = d.ZERO;
                        if (e === N) return r;
                        if (e === M) return this;
                        let { endo: i } = t;
                        if (!i) return p.unsafeLadder(this, e);
                        let {
                            k1neg: o,
                            k1: s,
                            k2neg: a,
                            k2: u,
                          } = i.splitScalar(e),
                          l = r,
                          f = r,
                          h = this;
                        for (; s > N || u > N; )
                          s & M && (l = l.add(h)),
                            u & M && (f = f.add(h)),
                            (h = h.double()),
                            (s >>= M),
                            (u >>= M);
                        return (
                          o && (l = l.negate()),
                          a && (f = f.negate()),
                          (f = new d(n.mul(f.px, i.beta), f.py, f.pz)),
                          l.add(f)
                        );
                      }
                      multiply(e) {
                        let r, i;
                        let { endo: o, n: s } = t;
                        if ((c.Fy("scalar", e, M, s), o)) {
                          let {
                              k1neg: t,
                              k1: s,
                              k2neg: a,
                              k2: c,
                            } = o.splitScalar(e),
                            { p: u, f: l } = this.wNAF(s),
                            { p: f, f: h } = this.wNAF(c);
                          (u = p.constTimeNegate(t, u)),
                            (f = p.constTimeNegate(a, f)),
                            (f = new d(n.mul(f.px, o.beta), f.py, f.pz)),
                            (r = u.add(f)),
                            (i = l.add(h));
                        } else {
                          let { p: t, f: n } = this.wNAF(e);
                          (r = t), (i = n);
                        }
                        return d.normalizeZ([r, i])[0];
                      }
                      multiplyAndAddUnsafe(e, t, n) {
                        let r = d.BASE,
                          i = (e, t) =>
                            t !== N && t !== M && e.equals(r)
                              ? e.multiply(t)
                              : e.multiplyUnsafe(t),
                          o = i(this, t).add(i(e, n));
                        return o.is0() ? void 0 : o;
                      }
                      toAffine(e) {
                        return l(this, e);
                      }
                      isTorsionFree() {
                        let { h: e, isTorsionFree: n } = t;
                        if (e === M) return !0;
                        if (n) return n(d, this);
                        throw Error(
                          "isTorsionFree() has not been declared for the elliptic curve"
                        );
                      }
                      clearCofactor() {
                        let { h: e, clearCofactor: n } = t;
                        return e === M
                          ? this
                          : n
                          ? n(d, this)
                          : this.multiplyUnsafe(t.h);
                      }
                      toRawBytes(e = !0) {
                        return (
                          (0, c.uw)("isCompressed", e),
                          this.assertValidity(),
                          i(d, this, e)
                        );
                      }
                      toHex(e = !0) {
                        return (
                          (0, c.uw)("isCompressed", e), c.ci(this.toRawBytes(e))
                        );
                      }
                    }
                    (d.BASE = new d(t.Gx, t.Gy, n.ONE)),
                      (d.ZERO = new d(n.ZERO, n.ONE, n.ZERO));
                    let h = t.nBitLength,
                      p = (function (e, t) {
                        let n = (e, t) => {
                            let n = t.negate();
                            return e ? n : t;
                          },
                          r = (e) => {
                            if (!Number.isSafeInteger(e) || e <= 0 || e > t)
                              throw Error(
                                `Wrong window size=${e}, should be [1..${t}]`
                              );
                          },
                          i = (e) => (
                            r(e),
                            {
                              windows: Math.ceil(t / e) + 1,
                              windowSize: 2 ** (e - 1),
                            }
                          );
                        return {
                          constTimeNegate: n,
                          unsafeLadder(t, n) {
                            let r = e.ZERO,
                              i = t;
                            for (; n > x; )
                              n & B && (r = r.add(i)),
                                (i = i.double()),
                                (n >>= B);
                            return r;
                          },
                          precomputeWindow(e, t) {
                            let { windows: n, windowSize: r } = i(t),
                              o = [],
                              s = e,
                              a = s;
                            for (let e = 0; e < n; e++) {
                              (a = s), o.push(a);
                              for (let e = 1; e < r; e++)
                                (a = a.add(s)), o.push(a);
                              s = a.double();
                            }
                            return o;
                          },
                          wNAF(t, r, o) {
                            let { windows: s, windowSize: a } = i(t),
                              c = e.ZERO,
                              u = e.BASE,
                              l = BigInt(2 ** t - 1),
                              f = 2 ** t,
                              d = BigInt(t);
                            for (let e = 0; e < s; e++) {
                              let t = e * a,
                                i = Number(o & l);
                              (o >>= d), i > a && ((i -= f), (o += B));
                              let s = t + Math.abs(i) - 1,
                                h = e % 2 != 0,
                                p = i < 0;
                              0 === i
                                ? (u = u.add(n(h, r[t])))
                                : (c = c.add(n(p, r[s])));
                            }
                            return { p: c, f: u };
                          },
                          wNAFCached(e, t, n) {
                            let r = S.get(e) || 1,
                              i = I.get(e);
                            return (
                              i ||
                                ((i = this.precomputeWindow(e, r)),
                                1 !== r && I.set(e, n(i))),
                              this.wNAF(r, i, t)
                            );
                          },
                          setWindowSize(e, t) {
                            r(t), S.set(e, t), I.delete(e);
                          },
                        };
                      })(d, t.endo ? Math.ceil(h / 2) : h);
                    return {
                      CURVE: t,
                      ProjectivePoint: d,
                      normPrivateKeyToScalar: a,
                      weierstrassEquation: s,
                      isWithinCurveOrder: function (e) {
                        return c.Z2(e, M, t.n);
                      },
                    };
                  })({
                    ...t,
                    toBytes(e, t, r) {
                      let i = t.toAffine(),
                        o = n.toBytes(i.x),
                        s = c.eV;
                      return ((0, c.uw)("isCompressed", r), r)
                        ? s(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o)
                        : s(Uint8Array.from([4]), o, n.toBytes(i.y));
                    },
                    fromBytes(e) {
                      let t = e.length,
                        r = e[0],
                        s = e.subarray(1);
                      if (t === i && (2 === r || 3 === r)) {
                        let e;
                        let t = c.bytesToNumberBE(s);
                        if (!c.Z2(t, M, n.ORDER))
                          throw Error("Point is not on curve");
                        let i = f(t);
                        try {
                          e = n.sqrt(i);
                        } catch (e) {
                          throw Error(
                            "Point is not on curve" +
                              (e instanceof Error ? ": " + e.message : "")
                          );
                        }
                        return (
                          ((1 & r) == 1) != ((e & M) === M) && (e = n.neg(e)),
                          { x: t, y: e }
                        );
                      }
                      if (t === o && 4 === r)
                        return {
                          x: n.fromBytes(s.subarray(0, n.BYTES)),
                          y: n.fromBytes(s.subarray(n.BYTES, 2 * n.BYTES)),
                        };
                      throw Error(
                        `Point of length ${t} was invalid. Expected ${i} compressed bytes or ${o} uncompressed bytes`
                      );
                    },
                  }),
                  h = (e) => c.ci(c.tL(e, t.nByteLength)),
                  p = (e, t, n) => c.bytesToNumberBE(e.slice(t, n));
                class m {
                  constructor(e, t, n) {
                    (this.r = e),
                      (this.s = t),
                      (this.recovery = n),
                      this.assertValidity();
                  }
                  static fromCompact(e) {
                    let n = t.nByteLength;
                    return new m(
                      p((e = (0, c.ql)("compactSignature", e, 2 * n)), 0, n),
                      p(e, n, 2 * n)
                    );
                  }
                  static fromDER(e) {
                    let { r: t, s: n } = R.toSig((0, c.ql)("DER", e));
                    return new m(t, n);
                  }
                  assertValidity() {
                    c.Fy("r", this.r, M, r), c.Fy("s", this.s, M, r);
                  }
                  addRecoveryBit(e) {
                    return new m(this.r, this.s, e);
                  }
                  recoverPublicKey(e) {
                    let { r: i, s: o, recovery: u } = this,
                      l = v((0, c.ql)("msgHash", e));
                    if (null == u || ![0, 1, 2, 3].includes(u))
                      throw Error("recovery id invalid");
                    let f = 2 === u || 3 === u ? i + t.n : i;
                    if (f >= n.ORDER) throw Error("recovery id 2 or 3 invalid");
                    let d = (1 & u) == 0 ? "02" : "03",
                      p = a.fromHex(d + h(f)),
                      m = b(f, r),
                      g = s(-l * m),
                      y = s(o * m),
                      w = a.BASE.multiplyAndAddUnsafe(p, g, y);
                    if (!w) throw Error("point at infinify");
                    return w.assertValidity(), w;
                  }
                  hasHighS() {
                    return this.s > r >> M;
                  }
                  normalizeS() {
                    return this.hasHighS()
                      ? new m(this.r, s(-this.s), this.recovery)
                      : this;
                  }
                  toDERRawBytes() {
                    return c.hexToBytes(this.toDERHex());
                  }
                  toDERHex() {
                    return R.hexFromSig({ r: this.r, s: this.s });
                  }
                  toCompactRawBytes() {
                    return c.hexToBytes(this.toCompactHex());
                  }
                  toCompactHex() {
                    return h(this.r) + h(this.s);
                  }
                }
                function y(e) {
                  let t = c._t(e),
                    n = "string" == typeof e,
                    r = (t || n) && e.length;
                  return t
                    ? r === i || r === o
                    : n
                    ? r === 2 * i || r === 2 * o
                    : e instanceof a;
                }
                let w =
                    t.bits2int ||
                    function (e) {
                      let n = c.bytesToNumberBE(e),
                        r = 8 * e.length - t.nBitLength;
                      return r > 0 ? n >> BigInt(r) : n;
                    },
                  v =
                    t.bits2int_modN ||
                    function (e) {
                      return s(w(e));
                    },
                  O = c.dQ(t.nBitLength);
                function k(e) {
                  return (
                    c.Fy(`num < 2^${t.nBitLength}`, e, N, O),
                    c.tL(e, t.nByteLength)
                  );
                }
                let F = { lowS: t.lowS, prehash: !1 },
                  U = { lowS: t.lowS, prehash: !1 };
                return (
                  a.BASE._setWindowSize(8),
                  {
                    CURVE: t,
                    getPublicKey: function (e, t = !0) {
                      return a.fromPrivateKey(e).toRawBytes(t);
                    },
                    getSharedSecret: function (e, t, n = !0) {
                      if (y(e)) throw Error("first arg must be private key");
                      if (!y(t)) throw Error("second arg must be public key");
                      return a.fromHex(t).multiply(u(e)).toRawBytes(n);
                    },
                    sign: function (e, i, o = F) {
                      let { seed: l, k2sig: f } = (function (e, i, o = F) {
                        if (["recovered", "canonical"].some((e) => e in o))
                          throw Error("sign() legacy options not supported");
                        let { hash: l, randomBytes: f } = t,
                          { lowS: h, prehash: p, extraEntropy: g } = o;
                        null == h && (h = !0),
                          (e = (0, c.ql)("msgHash", e)),
                          T(o),
                          p && (e = (0, c.ql)("prehashed msgHash", l(e)));
                        let y = v(e),
                          A = u(i),
                          E = [k(A), k(y)];
                        if (null != g && !1 !== g) {
                          let e = !0 === g ? f(n.BYTES) : g;
                          E.push((0, c.ql)("extraEntropy", e));
                        }
                        return {
                          seed: c.eV(...E),
                          k2sig: function (e) {
                            let t = w(e);
                            if (!d(t)) return;
                            let n = b(t, r),
                              i = a.BASE.multiply(t).toAffine(),
                              o = s(i.x);
                            if (o === N) return;
                            let c = s(n * s(y + o * A));
                            if (c === N) return;
                            let u = (i.x === o ? 0 : 2) | Number(i.y & M),
                              l = c;
                            if (h && c > r >> M)
                              (l = c > r >> M ? s(-c) : c), (u ^= 1);
                            return new m(o, l, u);
                          },
                        };
                      })(e, i, o);
                      return c.n$(
                        t.hash.outputLen,
                        t.nByteLength,
                        t.hmac
                      )(l, f);
                    },
                    verify: function (e, n, i, o = U) {
                      let u, l;
                      if (
                        ((n = (0, c.ql)("msgHash", n)),
                        (i = (0, c.ql)("publicKey", i)),
                        "strict" in o)
                      )
                        throw Error("options.strict was renamed to lowS");
                      T(o);
                      let { lowS: f, prehash: d } = o;
                      try {
                        if ("string" == typeof e || c._t(e))
                          try {
                            l = m.fromDER(e);
                          } catch (t) {
                            if (!(t instanceof R.Err)) throw t;
                            l = m.fromCompact(e);
                          }
                        else if (
                          "object" == typeof e &&
                          "bigint" == typeof e.r &&
                          "bigint" == typeof e.s
                        ) {
                          let { r: t, s: n } = e;
                          l = new m(t, n);
                        } else throw Error("PARSE");
                        u = a.fromHex(i);
                      } catch (e) {
                        if ("PARSE" === e.message)
                          throw Error(
                            "signature must be Signature instance, Uint8Array or hex string"
                          );
                        return !1;
                      }
                      if (f && l.hasHighS()) return !1;
                      d && (n = t.hash(n));
                      let { r: h, s: p } = l,
                        g = v(n),
                        y = b(p, r),
                        w = s(g * y),
                        A = s(h * y),
                        E = a.BASE.multiplyAndAddUnsafe(u, w, A)?.toAffine();
                      return !!E && s(E.x) === h;
                    },
                    ProjectivePoint: a,
                    Signature: m,
                    utils: {
                      isValidPrivateKey(e) {
                        try {
                          return u(e), !0;
                        } catch (e) {
                          return !1;
                        }
                      },
                      normPrivateKeyToScalar: u,
                      randomPrivateKey: () => {
                        let e = C(t.n);
                        return (function (e, t, n = !1) {
                          let r = e.length,
                            i = E(t),
                            o = C(t);
                          if (r < 16 || r < o || r > 1024)
                            throw Error(
                              `expected ${o}-1024 bytes of input, got ${r}`
                            );
                          let s =
                            g(
                              n ? (0, c.bytesToNumberBE)(e) : (0, c.ty)(e),
                              t - l
                            ) + l;
                          return n ? (0, c.S5)(s, i) : (0, c.tL)(s, i);
                        })(t.randomBytes(e), t.n);
                      },
                      precompute: (e = 8, t = a.BASE) => (
                        t._setWindowSize(e), t.multiply(BigInt(3)), t
                      ),
                    },
                  }
                );
              })({
                ...e,
                hash: t,
                hmac: (e, ...n) => a(t, e, (0, o.eV)(...n)),
                randomBytes: o.O6,
              });
            return Object.freeze({ ...n(t), create: n });
          })(
            {
              a: BigInt(0),
              b: BigInt(7),
              Fp: G,
              n: U,
              Gx: BigInt(
                "55066263022277343669578718895168534326250603453777594175500187360389116729240"
              ),
              Gy: BigInt(
                "32670510020758816978083085130507043184471273380659243275938904335757337482424"
              ),
              h: BigInt(1),
              lowS: !0,
              endo: {
                beta: BigInt(
                  "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
                ),
                splitScalar: (e) => {
                  let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                    n = -D * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                    r = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                    i = BigInt("0x100000000000000000000000000000000"),
                    o = j(t * e, U),
                    s = j(-n * e, U),
                    a = g(e - o * t - s * r, U),
                    c = g(-o * n - s * t, U),
                    u = a > i,
                    l = c > i;
                  if ((u && (a = U - a), l && (c = U - c), a > i || c > i))
                    throw Error("splitScalar: Endomorphism failed, k=" + e);
                  return { k1neg: u, k1: a, k2neg: l, k2: c };
                },
              },
            },
            r.JQ
          );
        BigInt(0), H.ProjectivePoint;
      },
      74043: function (e, t, n) {
        "use strict";
        function r(e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`positive integer expected, not ${e}`);
        }
        function i(e, ...t) {
          if (
            !(
              e instanceof Uint8Array ||
              (null != e &&
                "object" == typeof e &&
                "Uint8Array" === e.constructor.name)
            )
          )
            throw Error("Uint8Array expected");
          if (t.length > 0 && !t.includes(e.length))
            throw Error(
              `Uint8Array expected of length ${t}, not of length=${e.length}`
            );
        }
        function o(e) {
          if ("function" != typeof e || "function" != typeof e.create)
            throw Error("Hash should be wrapped by utils.wrapConstructor");
          r(e.outputLen), r(e.blockLen);
        }
        function s(e, t = !0) {
          if (e.destroyed) throw Error("Hash instance has been destroyed");
          if (t && e.finished)
            throw Error("Hash#digest() has already been called");
        }
        function a(e, t) {
          i(e);
          let n = t.outputLen;
          if (e.length < n)
            throw Error(
              `digestInto() expects output buffer of length at least ${n}`
            );
        }
        n.d(t, {
          Gg: function () {
            return s;
          },
          J8: function () {
            return a;
          },
          Rx: function () {
            return r;
          },
          aI: function () {
            return i;
          },
          vp: function () {
            return o;
          },
        });
      },
      88577: function (e, t, n) {
        "use strict";
        n.d(t, {
          VR: function () {
            return a;
          },
          bc: function () {
            return o;
          },
          l3: function () {
            return s;
          },
        });
        var r = n(74043),
          i = n(25884);
        let o = (e, t, n) => (e & t) ^ (~e & n),
          s = (e, t, n) => (e & t) ^ (e & n) ^ (t & n);
        class a extends i.kb {
          constructor(e, t, n, r) {
            super(),
              (this.blockLen = e),
              (this.outputLen = t),
              (this.padOffset = n),
              (this.isLE = r),
              (this.finished = !1),
              (this.length = 0),
              (this.pos = 0),
              (this.destroyed = !1),
              (this.buffer = new Uint8Array(e)),
              (this.view = (0, i.GL)(this.buffer));
          }
          update(e) {
            (0, r.Gg)(this);
            let { view: t, buffer: n, blockLen: o } = this,
              s = (e = (0, i.O0)(e)).length;
            for (let r = 0; r < s; ) {
              let a = Math.min(o - this.pos, s - r);
              if (a === o) {
                let t = (0, i.GL)(e);
                for (; o <= s - r; r += o) this.process(t, r);
                continue;
              }
              n.set(e.subarray(r, r + a), this.pos),
                (this.pos += a),
                (r += a),
                this.pos === o && (this.process(t, 0), (this.pos = 0));
            }
            return (this.length += e.length), this.roundClean(), this;
          }
          digestInto(e) {
            (0, r.Gg)(this), (0, r.J8)(e, this), (this.finished = !0);
            let { buffer: t, view: n, blockLen: o, isLE: s } = this,
              { pos: a } = this;
            (t[a++] = 128),
              this.buffer.subarray(a).fill(0),
              this.padOffset > o - a && (this.process(n, 0), (a = 0));
            for (let e = a; e < o; e++) t[e] = 0;
            (function (e, t, n, r) {
              if ("function" == typeof e.setBigUint64)
                return e.setBigUint64(t, n, r);
              let i = BigInt(32),
                o = BigInt(4294967295),
                s = Number((n >> i) & o),
                a = Number(n & o),
                c = r ? 4 : 0,
                u = r ? 0 : 4;
              e.setUint32(t + c, s, r), e.setUint32(t + u, a, r);
            })(n, o - 8, BigInt(8 * this.length), s),
              this.process(n, 0);
            let c = (0, i.GL)(e),
              u = this.outputLen;
            if (u % 4)
              throw Error("_sha2: outputLen should be aligned to 32bit");
            let l = u / 4,
              f = this.get();
            if (l > f.length) throw Error("_sha2: outputLen bigger than state");
            for (let e = 0; e < l; e++) c.setUint32(4 * e, f[e], s);
          }
          digest() {
            let { buffer: e, outputLen: t } = this;
            this.digestInto(e);
            let n = e.slice(0, t);
            return this.destroy(), n;
          }
          _cloneInto(e) {
            e || (e = new this.constructor()), e.set(...this.get());
            let {
              blockLen: t,
              buffer: n,
              length: r,
              finished: i,
              destroyed: o,
              pos: s,
            } = this;
            return (
              (e.length = r),
              (e.pos = s),
              (e.finished = i),
              (e.destroyed = o),
              r % t && e.buffer.set(n),
              e
            );
          }
        }
      },
      29272: function (e, t, n) {
        "use strict";
        n.d(t, {
          JQ: function () {
            return u;
          },
        });
        var r = n(88577),
          i = n(25884);
        let o = new Uint32Array([
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ]),
          s = new Uint32Array([
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
            2600822924, 528734635, 1541459225,
          ]),
          a = new Uint32Array(64);
        class c extends r.VR {
          constructor() {
            super(64, 32, 8, !1),
              (this.A = 0 | s[0]),
              (this.B = 0 | s[1]),
              (this.C = 0 | s[2]),
              (this.D = 0 | s[3]),
              (this.E = 0 | s[4]),
              (this.F = 0 | s[5]),
              (this.G = 0 | s[6]),
              (this.H = 0 | s[7]);
          }
          get() {
            let { A: e, B: t, C: n, D: r, E: i, F: o, G: s, H: a } = this;
            return [e, t, n, r, i, o, s, a];
          }
          set(e, t, n, r, i, o, s, a) {
            (this.A = 0 | e),
              (this.B = 0 | t),
              (this.C = 0 | n),
              (this.D = 0 | r),
              (this.E = 0 | i),
              (this.F = 0 | o),
              (this.G = 0 | s),
              (this.H = 0 | a);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) a[n] = e.getUint32(t, !1);
            for (let e = 16; e < 64; e++) {
              let t = a[e - 15],
                n = a[e - 2],
                r = (0, i.np)(t, 7) ^ (0, i.np)(t, 18) ^ (t >>> 3),
                o = (0, i.np)(n, 17) ^ (0, i.np)(n, 19) ^ (n >>> 10);
              a[e] = (o + a[e - 7] + r + a[e - 16]) | 0;
            }
            let { A: n, B: s, C: c, D: u, E: l, F: f, G: d, H: h } = this;
            for (let e = 0; e < 64; e++) {
              let t =
                  (h +
                    ((0, i.np)(l, 6) ^ (0, i.np)(l, 11) ^ (0, i.np)(l, 25)) +
                    (0, r.bc)(l, f, d) +
                    o[e] +
                    a[e]) |
                  0,
                p =
                  (((0, i.np)(n, 2) ^ (0, i.np)(n, 13) ^ (0, i.np)(n, 22)) +
                    (0, r.l3)(n, s, c)) |
                  0;
              (h = d),
                (d = f),
                (f = l),
                (l = (u + t) | 0),
                (u = c),
                (c = s),
                (s = n),
                (n = (t + p) | 0);
            }
            (n = (n + this.A) | 0),
              (s = (s + this.B) | 0),
              (c = (c + this.C) | 0),
              (u = (u + this.D) | 0),
              (l = (l + this.E) | 0),
              (f = (f + this.F) | 0),
              (d = (d + this.G) | 0),
              (h = (h + this.H) | 0),
              this.set(n, s, c, u, l, f, d, h);
          }
          roundClean() {
            a.fill(0);
          }
          destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
          }
        }
        let u = (0, i.hE)(() => new c());
      },
      86691: function (e, t, n) {
        "use strict";
        n.d(t, {
          fr: function () {
            return B;
          },
        });
        var r = n(74043);
        let i = BigInt(4294967296 - 1),
          o = BigInt(32),
          s = (e, t, n) => (e << n) | (t >>> (32 - n)),
          a = (e, t, n) => (t << n) | (e >>> (32 - n)),
          c = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n)),
          u = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n));
        var l = n(25884);
        let f = [],
          d = [],
          h = [],
          p = BigInt(0),
          m = BigInt(1),
          g = BigInt(2),
          y = BigInt(7),
          b = BigInt(256),
          w = BigInt(113);
        for (let e = 0, t = m, n = 1, r = 0; e < 24; e++) {
          ([n, r] = [r, (2 * n + 3 * r) % 5]),
            f.push(2 * (5 * r + n)),
            d.push((((e + 1) * (e + 2)) / 2) % 64);
          let i = p;
          for (let e = 0; e < 7; e++)
            (t = ((t << m) ^ ((t >> y) * w)) % b) & g &&
              (i ^= m << ((m << BigInt(e)) - m));
          h.push(i);
        }
        let [v, A] = (function (e, t = !1) {
            let n = new Uint32Array(e.length),
              r = new Uint32Array(e.length);
            for (let s = 0; s < e.length; s++) {
              let { h: a, l: c } = (function (e, t = !1) {
                return t
                  ? { h: Number(e & i), l: Number((e >> o) & i) }
                  : { h: 0 | Number((e >> o) & i), l: 0 | Number(e & i) };
              })(e[s], t);
              [n[s], r[s]] = [a, c];
            }
            return [n, r];
          })(h, !0),
          E = (e, t, n) => (n > 32 ? c(e, t, n) : s(e, t, n)),
          C = (e, t, n) => (n > 32 ? u(e, t, n) : a(e, t, n));
        class x extends l.kb {
          constructor(e, t, n, i = !1, o = 24) {
            if (
              (super(),
              (this.blockLen = e),
              (this.suffix = t),
              (this.outputLen = n),
              (this.enableXOF = i),
              (this.rounds = o),
              (this.pos = 0),
              (this.posOut = 0),
              (this.finished = !1),
              (this.destroyed = !1),
              (0, r.Rx)(n),
              0 >= this.blockLen || this.blockLen >= 200)
            )
              throw Error("Sha3 supports only keccak-f1600 function");
            (this.state = new Uint8Array(200)),
              (this.state32 = (0, l.Jq)(this.state));
          }
          keccak() {
            l.iA || (0, l.l1)(this.state32),
              (function (e, t = 24) {
                let n = new Uint32Array(10);
                for (let r = 24 - t; r < 24; r++) {
                  for (let t = 0; t < 10; t++)
                    n[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                  for (let t = 0; t < 10; t += 2) {
                    let r = (t + 8) % 10,
                      i = (t + 2) % 10,
                      o = n[i],
                      s = n[i + 1],
                      a = E(o, s, 1) ^ n[r],
                      c = C(o, s, 1) ^ n[r + 1];
                    for (let n = 0; n < 50; n += 10)
                      (e[t + n] ^= a), (e[t + n + 1] ^= c);
                  }
                  let t = e[2],
                    i = e[3];
                  for (let n = 0; n < 24; n++) {
                    let r = d[n],
                      o = E(t, i, r),
                      s = C(t, i, r),
                      a = f[n];
                    (t = e[a]), (i = e[a + 1]), (e[a] = o), (e[a + 1] = s);
                  }
                  for (let t = 0; t < 50; t += 10) {
                    for (let r = 0; r < 10; r++) n[r] = e[t + r];
                    for (let r = 0; r < 10; r++)
                      e[t + r] ^= ~n[(r + 2) % 10] & n[(r + 4) % 10];
                  }
                  (e[0] ^= v[r]), (e[1] ^= A[r]);
                }
                n.fill(0);
              })(this.state32, this.rounds),
              l.iA || (0, l.l1)(this.state32),
              (this.posOut = 0),
              (this.pos = 0);
          }
          update(e) {
            (0, r.Gg)(this);
            let { blockLen: t, state: n } = this,
              i = (e = (0, l.O0)(e)).length;
            for (let r = 0; r < i; ) {
              let o = Math.min(t - this.pos, i - r);
              for (let t = 0; t < o; t++) n[this.pos++] ^= e[r++];
              this.pos === t && this.keccak();
            }
            return this;
          }
          finish() {
            if (this.finished) return;
            this.finished = !0;
            let { state: e, suffix: t, pos: n, blockLen: r } = this;
            (e[n] ^= t),
              (128 & t) != 0 && n === r - 1 && this.keccak(),
              (e[r - 1] ^= 128),
              this.keccak();
          }
          writeInto(e) {
            (0, r.Gg)(this, !1), (0, r.aI)(e), this.finish();
            let t = this.state,
              { blockLen: n } = this;
            for (let r = 0, i = e.length; r < i; ) {
              this.posOut >= n && this.keccak();
              let o = Math.min(n - this.posOut, i - r);
              e.set(t.subarray(this.posOut, this.posOut + o), r),
                (this.posOut += o),
                (r += o);
            }
            return e;
          }
          xofInto(e) {
            if (!this.enableXOF)
              throw Error("XOF is not possible for this instance");
            return this.writeInto(e);
          }
          xof(e) {
            return (0, r.Rx)(e), this.xofInto(new Uint8Array(e));
          }
          digestInto(e) {
            if (((0, r.J8)(e, this), this.finished))
              throw Error("digest() was already called");
            return this.writeInto(e), this.destroy(), e;
          }
          digest() {
            return this.digestInto(new Uint8Array(this.outputLen));
          }
          destroy() {
            (this.destroyed = !0), this.state.fill(0);
          }
          _cloneInto(e) {
            let {
              blockLen: t,
              suffix: n,
              outputLen: r,
              rounds: i,
              enableXOF: o,
            } = this;
            return (
              e || (e = new x(t, n, r, o, i)),
              e.state32.set(this.state32),
              (e.pos = this.pos),
              (e.posOut = this.posOut),
              (e.finished = this.finished),
              (e.rounds = i),
              (e.suffix = n),
              (e.outputLen = r),
              (e.enableXOF = o),
              (e.destroyed = this.destroyed),
              e
            );
          }
        }
        let B = (0, l.hE)(() => new x(136, 1, 32));
      },
      25884: function (e, t, n) {
        "use strict";
        n.d(t, {
          kb: function () {
            return p;
          },
          l1: function () {
            return f;
          },
          eV: function () {
            return h;
          },
          GL: function () {
            return s;
          },
          iA: function () {
            return u;
          },
          O6: function () {
            return g;
          },
          XG: function () {
            return c;
          },
          np: function () {
            return a;
          },
          O0: function () {
            return d;
          },
          Jq: function () {
            return o;
          },
          hE: function () {
            return m;
          },
        });
        let r =
          "object" == typeof globalThis && "crypto" in globalThis
            ? globalThis.crypto
            : void 0;
        var i = n(74043);
        let o = (e) =>
            new Uint32Array(
              e.buffer,
              e.byteOffset,
              Math.floor(e.byteLength / 4)
            ),
          s = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength),
          a = (e, t) => (e << (32 - t)) | (e >>> t),
          c = (e, t) => (e << t) | ((e >>> (32 - t)) >>> 0),
          u = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0],
          l = (e) =>
            ((e << 24) & 4278190080) |
            ((e << 8) & 16711680) |
            ((e >>> 8) & 65280) |
            ((e >>> 24) & 255);
        function f(e) {
          for (let t = 0; t < e.length; t++) e[t] = l(e[t]);
        }
        function d(e) {
          return (
            "string" == typeof e &&
              (e = (function (e) {
                if ("string" != typeof e)
                  throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e));
              })(e)),
            (0, i.aI)(e),
            e
          );
        }
        function h(...e) {
          let t = 0;
          for (let n = 0; n < e.length; n++) {
            let r = e[n];
            (0, i.aI)(r), (t += r.length);
          }
          let n = new Uint8Array(t);
          for (let t = 0, r = 0; t < e.length; t++) {
            let i = e[t];
            n.set(i, r), (r += i.length);
          }
          return n;
        }
        class p {
          clone() {
            return this._cloneInto();
          }
        }
        function m(e) {
          let t = (t) => e().update(d(t)).digest(),
            n = e();
          return (
            (t.outputLen = n.outputLen),
            (t.blockLen = n.blockLen),
            (t.create = () => e()),
            t
          );
        }
        function g(e = 32) {
          if (r && "function" == typeof r.getRandomValues)
            return r.getRandomValues(new Uint8Array(e));
          if (r && "function" == typeof r.randomBytes) return r.randomBytes(e);
          throw Error("crypto.getRandomValues must be defined");
        }
      },
      4609: function (e, t, n) {
        "use strict";
        n.d(t, {
          W: function () {
            return l;
          },
        });
        var r =
            '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
          i = {
            rounded: 'SFRounded, ui-rounded, "SF Pro Rounded", '.concat(r),
            system: r,
          },
          o = {
            large: {
              actionButton: "9999px",
              connectButton: "12px",
              modal: "24px",
              modalMobile: "28px",
            },
            medium: {
              actionButton: "10px",
              connectButton: "8px",
              modal: "16px",
              modalMobile: "18px",
            },
            none: {
              actionButton: "0px",
              connectButton: "0px",
              modal: "0px",
              modalMobile: "0px",
            },
            small: {
              actionButton: "4px",
              connectButton: "4px",
              modal: "8px",
              modalMobile: "8px",
            },
          },
          s = {
            large: { modalOverlay: "blur(20px)" },
            none: { modalOverlay: "blur(0px)" },
            small: { modalOverlay: "blur(4px)" },
          },
          a = (e) => {
            let {
              borderRadius: t = "large",
              fontStack: n = "rounded",
              overlayBlur: r = "none",
            } = e;
            return {
              blurs: { modalOverlay: s[r].modalOverlay },
              fonts: { body: i[n] },
              radii: {
                actionButton: o[t].actionButton,
                connectButton: o[t].connectButton,
                menuButton: o[t].connectButton,
                modal: o[t].modal,
                modalMobile: o[t].modalMobile,
              },
            };
          },
          c = {
            blue: { accentColor: "#0E76FD", accentColorForeground: "#FFF" },
            green: { accentColor: "#1DB847", accentColorForeground: "#FFF" },
            orange: { accentColor: "#FF801F", accentColorForeground: "#FFF" },
            pink: { accentColor: "#FF5CA0", accentColorForeground: "#FFF" },
            purple: { accentColor: "#5F5AFA", accentColorForeground: "#FFF" },
            red: { accentColor: "#FA423C", accentColorForeground: "#FFF" },
          },
          u = c.blue,
          l = function () {
            let {
              accentColor: e = u.accentColor,
              accentColorForeground: t = u.accentColorForeground,
              ...n
            } = arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : {};
            return {
              ...a(n),
              colors: {
                accentColor: e,
                accentColorForeground: t,
                actionButtonBorder: "rgba(0, 0, 0, 0.04)",
                actionButtonBorderMobile: "rgba(0, 0, 0, 0.06)",
                actionButtonSecondaryBackground: "rgba(0, 0, 0, 0.06)",
                closeButton: "rgba(60, 66, 66, 0.8)",
                closeButtonBackground: "rgba(0, 0, 0, 0.06)",
                connectButtonBackground: "#FFF",
                connectButtonBackgroundError: "#FF494A",
                connectButtonInnerBackground:
                  "linear-gradient(0deg, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.06))",
                connectButtonText: "#25292E",
                connectButtonTextError: "#FFF",
                connectionIndicator: "#30E000",
                downloadBottomCardBackground:
                  "linear-gradient(126deg, rgba(255, 255, 255, 0) 9.49%, rgba(171, 171, 171, 0.04) 71.04%), #FFFFFF",
                downloadTopCardBackground:
                  "linear-gradient(126deg, rgba(171, 171, 171, 0.2) 9.49%, rgba(255, 255, 255, 0) 71.04%), #FFFFFF",
                error: "#FF494A",
                generalBorder: "rgba(0, 0, 0, 0.06)",
                generalBorderDim: "rgba(0, 0, 0, 0.03)",
                menuItemBackground: "rgba(60, 66, 66, 0.1)",
                modalBackdrop: "rgba(0, 0, 0, 0.3)",
                modalBackground: "#FFF",
                modalBorder: "transparent",
                modalText: "#25292E",
                modalTextDim: "rgba(60, 66, 66, 0.3)",
                modalTextSecondary: "rgba(60, 66, 66, 0.6)",
                profileAction: "#FFF",
                profileActionHover: "rgba(255, 255, 255, 0.5)",
                profileForeground: "rgba(60, 66, 66, 0.06)",
                selectedOptionBorder: "rgba(60, 66, 66, 0.1)",
                standby: "#FFD641",
              },
              shadows: {
                connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
                dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
                profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
                selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
                selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.12)",
                walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)",
              },
            };
          };
        l.accentColors = c;
      },
      30224: function (e, t, n) {
        "use strict";
        n.d(t, {
          I: function () {
            return r;
          },
        });
        var r =
          '{\n  "connect_wallet": {\n    "label": "Connect Wallet",\n    "wrong_network": {\n      "label": "Wrong network"\n    }\n  },\n\n  "intro": {\n    "title": "What is a Wallet?",\n    "description": "A wallet is used to send, receive, store, and display digital assets. It\'s also a new way to log in, without needing to create new accounts and passwords on every website.",\n    "digital_asset": {\n      "title": "A Home for your Digital Assets",\n      "description": "Wallets are used to send, receive, store, and display digital assets like Ethereum and NFTs."\n    },\n    "login": {\n      "title": "A New Way to Log In",\n      "description": "Instead of creating new accounts and passwords on every website, just connect your wallet."\n    },\n    "get": {\n      "label": "Get a Wallet"\n    },\n    "learn_more": {\n      "label": "Learn More"\n    }\n  },\n\n  "sign_in": {\n    "label": "Verify your account",\n    "description": "To finish connecting, you must sign a message in your wallet to verify that you are the owner of this account.",\n    "message": {\n      "send": "Sign message",\n      "preparing": "Preparing message...",\n      "cancel": "Cancel",\n      "preparing_error": "Error preparing message, please retry!"\n    },\n    "signature": {\n      "waiting": "Waiting for signature...",\n      "verifying": "Verifying signature...",\n      "signing_error": "Error signing message, please retry!",\n      "verifying_error": "Error verifying signature, please retry!",\n      "oops_error": "Oops, something went wrong!"\n    }\n  },\n\n  "connect": {\n    "label": "Connect",\n    "title": "Connect a Wallet",\n    "new_to_ethereum": {\n      "description": "New to Ethereum wallets?",\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "learn_more": {\n      "label": "Learn more"\n    },\n    "recent": "Recent",\n    "status": {\n      "opening": "Opening %{wallet}...",\n      "connecting": "Connecting",\n      "connect_mobile": "Continue in %{wallet}",\n      "not_installed": "%{wallet} is not installed",\n      "not_available": "%{wallet} is not available",\n      "confirm": "Confirm connection in the extension",\n      "confirm_mobile": "Accept connection request in the wallet"\n    },\n    "secondary_action": {\n      "get": {\n        "description": "Don\'t have %{wallet}?",\n        "label": "GET"\n      },\n      "install": {\n        "label": "INSTALL"\n      },\n      "retry": {\n        "label": "RETRY"\n      }\n    },\n    "walletconnect": {\n      "description": {\n        "full": "Need the official WalletConnect modal?",\n        "compact": "Need the WalletConnect modal?"\n      },\n      "open": {\n        "label": "OPEN"\n      }\n    }\n  },\n\n  "connect_scan": {\n    "title": "Scan with %{wallet}",\n    "fallback_title": "Scan with your phone"\n  },\n\n  "connector_group": {\n    "installed": "Installed",\n    "recommended": "Recommended",\n    "other": "Other",\n    "popular": "Popular",\n    "more": "More",\n    "others": "Others"\n  },\n\n  "get": {\n    "title": "Get a Wallet",\n    "action": {\n      "label": "GET"\n    },\n    "mobile": {\n      "description": "Mobile Wallet"\n    },\n    "extension": {\n      "description": "Browser Extension"\n    },\n    "mobile_and_extension": {\n      "description": "Mobile Wallet and Extension"\n    },\n    "mobile_and_desktop": {\n      "description": "Mobile and Desktop Wallet"\n    },\n    "looking_for": {\n      "title": "Not what you\'re looking for?",\n      "mobile": {\n        "description": "Select a wallet on the main screen to get started with a different wallet provider."\n      },\n      "desktop": {\n        "compact_description": "Select a wallet on the main screen to get started with a different wallet provider.",\n        "wide_description": "Select a wallet on the left to get started with a different wallet provider."\n      }\n    }\n  },\n\n  "get_options": {\n    "title": "Get started with %{wallet}",\n    "short_title": "Get %{wallet}",\n    "mobile": {\n      "title": "%{wallet} for Mobile",\n      "description": "Use the mobile wallet to explore the world of Ethereum.",\n      "download": {\n        "label": "Get the app"\n      }\n    },\n    "extension": {\n      "title": "%{wallet} for %{browser}",\n      "description": "Access your wallet right from your favorite web browser.",\n      "download": {\n        "label": "Add to %{browser}"\n      }\n    },\n    "desktop": {\n      "title": "%{wallet} for %{platform}",\n      "description": "Access your wallet natively from your powerful desktop.",\n      "download": {\n        "label": "Add to %{platform}"\n      }\n    }\n  },\n\n  "get_mobile": {\n    "title": "Install %{wallet}",\n    "description": "Scan with your phone to download on iOS or Android",\n    "continue": {\n      "label": "Continue"\n    }\n  },\n\n  "get_instructions": {\n    "mobile": {\n      "connect": {\n        "label": "Connect"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "extension": {\n      "refresh": {\n        "label": "Refresh"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    },\n    "desktop": {\n      "connect": {\n        "label": "Connect"\n      },\n      "learn_more": {\n        "label": "Learn More"\n      }\n    }\n  },\n\n  "chains": {\n    "title": "Switch Networks",\n    "wrong_network": "Wrong network detected, switch or disconnect to continue.",\n    "confirm": "Confirm in Wallet",\n    "switching_not_supported": "Your wallet does not support switching networks from %{appName}. Try switching networks from within your wallet instead.",\n    "switching_not_supported_fallback": "Your wallet does not support switching networks from this app. Try switching networks from within your wallet instead.",\n    "disconnect": "Disconnect",\n    "connected": "Connected"\n  },\n\n  "profile": {\n    "disconnect": {\n      "label": "Disconnect"\n    },\n    "copy_address": {\n      "label": "Copy Address",\n      "copied": "Copied!"\n    },\n    "explorer": {\n      "label": "View more on explorer"\n    },\n    "transactions": {\n      "description": "%{appName} transactions will appear here...",\n      "description_fallback": "Your transactions will appear here...",\n      "recent": {\n        "title": "Recent Transactions"\n      },\n      "clear": {\n        "label": "Clear All"\n      }\n    }\n  },\n\n  "wallet_connectors": {\n    "argent": {\n      "qr_code": {\n        "step1": {\n          "description": "Put Argent on your home screen for faster access to your wallet.",\n          "title": "Open the Argent app"\n        },\n        "step2": {\n          "description": "Create a wallet and username, or import an existing wallet.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the Scan QR button"\n        }\n      }\n    },\n\n    "best": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Best Wallet app",\n          "description": "Add Best Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "bifrost": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bifrost Wallet on your home screen for quicker access.",\n          "title": "Open the Bifrost Wallet app"\n        },\n        "step2": {\n          "description": "Create or import a wallet using your recovery phrase.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      }\n    },\n\n    "bitget": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bitget Wallet on your home screen for quicker access.",\n          "title": "Open the Bitget Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Bitget Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Bitget Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "bitski": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Bitski to your taskbar for quicker access to your wallet.",\n          "title": "Install the Bitski extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "bitverse": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Bitverse Wallet app",\n          "description": "Add Bitverse Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "bloom": {\n      "desktop": {\n        "step1": {\n          "title": "Open the Bloom Wallet app",\n          "description": "We recommend putting Bloom Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "description": "Create or import a wallet using your recovery phrase.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you have a wallet, click on Connect to connect via Bloom. A connection prompt in the app will appear for you to confirm the connection.",\n          "title": "Click on Connect"\n        }\n      }\n    },\n\n    "bybit": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Bybit on your home screen for faster access to your wallet.",\n          "title": "Open the Bybit app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "Click at the top right of your browser and pin Bybit Wallet for easy access.",\n          "title": "Install the Bybit Wallet extension"\n        },\n        "step2": {\n          "description": "Create a new wallet or import an existing one.",\n          "title": "Create or Import a wallet"\n        },\n        "step3": {\n          "description": "Once you set up Bybit Wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "binance": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Binance on your home screen for faster access to your wallet.",\n          "title": "Open the Binance app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      }\n    },\n\n    "coin98": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Coin98 Wallet on your home screen for faster access to your wallet.",\n          "title": "Open the Coin98 Wallet app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "Click at the top right of your browser and pin Coin98 Wallet for easy access.",\n          "title": "Install the Coin98 Wallet extension"\n        },\n        "step2": {\n          "description": "Create a new wallet or import an existing one.",\n          "title": "Create or Import a wallet"\n        },\n        "step3": {\n          "description": "Once you set up Coin98 Wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "coinbase": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Coinbase Wallet on your home screen for quicker access.",\n          "title": "Open the Coinbase Wallet app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using the cloud backup feature.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Coinbase Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "compass": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Compass Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Compass Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "core": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Core on your home screen for faster access to your wallet.",\n          "title": "Open the Core app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Core to your taskbar for quicker access to your wallet.",\n          "title": "Install the Core extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "fox": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting FoxWallet on your home screen for quicker access.",\n          "title": "Open the FoxWallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      }\n    },\n\n    "frontier": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Frontier Wallet on your home screen for quicker access.",\n          "title": "Open the Frontier Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Frontier Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Frontier Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "im_token": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the imToken app",\n          "description": "Put imToken app on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap Scanner Icon in top right corner",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "iopay": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting ioPay on your home screen for faster access to your wallet.",\n          "title": "Open the ioPay app"\n        },\n        "step2": {\n          "description": "You can easily backup your wallet using our backup feature on your phone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the WalletConnect button"\n        }\n      }\n    },\n\n    "kaikas": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Kaikas to your taskbar for quicker access to your wallet.",\n          "title": "Install the Kaikas extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the Kaikas app",\n          "description": "Put Kaikas app on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap Scanner Icon in top right corner",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "kaia": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Kaia to your taskbar for quicker access to your wallet.",\n          "title": "Install the Kaia extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the Kaia app",\n          "description": "Put Kaia app on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap Scanner Icon in top right corner",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "kraken": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Kraken Wallet app",\n          "description": "Add Kraken Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "kresus": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Kresus Wallet app",\n          "description": "Add Kresus Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "magicEden": {\n      "extension": {\n        "step1": {\n          "title": "Install the Magic Eden extension",\n          "description": "We recommend pinning Magic Eden to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "metamask": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the MetaMask app",\n          "description": "We recommend putting MetaMask on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the MetaMask extension",\n          "description": "We recommend pinning MetaMask to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "nestwallet": {\n      "extension": {\n        "step1": {\n          "title": "Install the NestWallet extension",\n          "description": "We recommend pinning NestWallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "okx": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the OKX Wallet app",\n          "description": "We recommend putting OKX Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the OKX Wallet extension",\n          "description": "We recommend pinning OKX Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "omni": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Omni app",\n          "description": "Add Omni to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your home screen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "1inch": {\n      "qr_code": {\n        "step1": {\n          "description": "Put 1inch Wallet on your home screen for faster access to your wallet.",\n          "title": "Open the 1inch Wallet app"\n        },\n        "step2": {\n          "description": "Create a wallet and username, or import an existing wallet.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the Scan QR button"\n        }\n      }\n    },\n\n    "token_pocket": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the TokenPocket app",\n          "description": "We recommend putting TokenPocket on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the TokenPocket extension",\n          "description": "We recommend pinning TokenPocket to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "trust": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Trust Wallet app",\n          "description": "Put Trust Wallet on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the Trust Wallet extension",\n          "description": "Click at the top right of your browser and pin Trust Wallet for easy access."\n        },\n        "step2": {\n          "title": "Create or Import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up Trust Wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "uniswap": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Uniswap app",\n          "description": "Add Uniswap Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "zerion": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Zerion app",\n          "description": "We recommend putting Zerion on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "title": "Install the Zerion extension",\n          "description": "We recommend pinning Zerion to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "rainbow": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Rainbow app",\n          "description": "We recommend putting Rainbow on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "You can easily backup your wallet using our backup feature on your phone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "enkrypt": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Enkrypt Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Enkrypt Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "frame": {\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Frame to your taskbar for quicker access to your wallet.",\n          "title": "Install Frame & the companion extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "one_key": {\n      "extension": {\n        "step1": {\n          "title": "Install the OneKey Wallet extension",\n          "description": "We recommend pinning OneKey Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "paraswap": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the ParaSwap app",\n          "description": "Add ParaSwap Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "phantom": {\n      "extension": {\n        "step1": {\n          "title": "Install the Phantom extension",\n          "description": "We recommend pinning Phantom to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "rabby": {\n      "extension": {\n        "step1": {\n          "title": "Install the Rabby extension",\n          "description": "We recommend pinning Rabby to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "ronin": {\n      "qr_code": {\n        "step1": {\n          "description": "We recommend putting Ronin Wallet on your home screen for quicker access.",\n          "title": "Open the Ronin Wallet app"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet.",\n          "title": "Tap the scan button"\n        }\n      },\n\n      "extension": {\n        "step1": {\n          "description": "We recommend pinning Ronin Wallet to your taskbar for quicker access to your wallet.",\n          "title": "Install the Ronin Wallet extension"\n        },\n        "step2": {\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",\n          "title": "Create or Import a Wallet"\n        },\n        "step3": {\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension.",\n          "title": "Refresh your browser"\n        }\n      }\n    },\n\n    "ramper": {\n      "extension": {\n        "step1": {\n          "title": "Install the Ramper extension",\n          "description": "We recommend pinning Ramper to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "safeheron": {\n      "extension": {\n        "step1": {\n          "title": "Install the Core extension",\n          "description": "We recommend pinning Safeheron to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "taho": {\n      "extension": {\n        "step1": {\n          "title": "Install the Taho extension",\n          "description": "We recommend pinning Taho to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "talisman": {\n      "extension": {\n        "step1": {\n          "title": "Install the Talisman extension",\n          "description": "We recommend pinning Talisman to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import an Ethereum Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "xdefi": {\n      "extension": {\n        "step1": {\n          "title": "Install the XDEFI Wallet extension",\n          "description": "We recommend pinning XDEFI Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "zeal": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Zeal app",\n          "description": "Add Zeal Wallet to your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the QR icon and scan",\n          "description": "Tap the QR icon on your homescreen, scan the code and confirm the prompt to connect."\n        }\n      },\n      "extension": {\n        "step1": {\n          "title": "Install the Zeal extension",\n          "description": "We recommend pinning Zeal to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "safepal": {\n      "extension": {\n        "step1": {\n          "title": "Install the SafePal Wallet extension",\n          "description": "Click at the top right of your browser and pin SafePal Wallet for easy access."\n        },\n        "step2": {\n          "title": "Create or Import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up SafePal Wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the SafePal Wallet app",\n          "description": "Put SafePal Wallet on your home screen for faster access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Choose New Connection, then scan the QR code and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "desig": {\n      "extension": {\n        "step1": {\n          "title": "Install the Desig extension",\n          "description": "We recommend pinning Desig to your taskbar for easier access to your wallet."\n        },\n        "step2": {\n          "title": "Create a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      }\n    },\n\n    "subwallet": {\n      "extension": {\n        "step1": {\n          "title": "Install the SubWallet extension",\n          "description": "We recommend pinning SubWallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your recovery phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the SubWallet app",\n          "description": "We recommend putting SubWallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "clv": {\n      "extension": {\n        "step1": {\n          "title": "Install the CLV Wallet extension",\n          "description": "We recommend pinning CLV Wallet to your taskbar for quicker access to your wallet."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Refresh your browser",\n          "description": "Once you set up your wallet, click below to refresh the browser and load up the extension."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the CLV Wallet app",\n          "description": "We recommend putting CLV Wallet on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or Import a Wallet",\n          "description": "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "okto": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Okto app",\n          "description": "Add Okto to your home screen for quick access"\n        },\n        "step2": {\n          "title": "Create an MPC Wallet",\n          "description": "Create an account and generate a wallet"\n        },\n        "step3": {\n          "title": "Tap WalletConnect in Settings",\n          "description": "Tap the Scan QR icon at the top right and confirm the prompt to connect."\n        }\n      }\n    },\n\n    "ledger": {\n      "desktop": {\n        "step1": {\n          "title": "Open the Ledger Live app",\n          "description": "We recommend putting Ledger Live on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Set up your Ledger",\n          "description": "Set up a new Ledger or connect to an existing one."\n        },\n        "step3": {\n          "title": "Connect",\n          "description": "A connection prompt will appear for you to connect your wallet."\n        }\n      },\n      "qr_code": {\n        "step1": {\n          "title": "Open the Ledger Live app",\n          "description": "We recommend putting Ledger Live on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Set up your Ledger",\n          "description": "You can either sync with the desktop app or connect your Ledger."\n        },\n        "step3": {\n          "title": "Scan the code",\n          "description": "Tap WalletConnect then Switch to Scanner. After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    },\n\n    "valora": {\n      "qr_code": {\n        "step1": {\n          "title": "Open the Valora app",\n          "description": "We recommend putting Valora on your home screen for quicker access."\n        },\n        "step2": {\n          "title": "Create or import a wallet",\n          "description": "Create a new wallet or import an existing one."\n        },\n        "step3": {\n          "title": "Tap the scan button",\n          "description": "After you scan, a connection prompt will appear for you to connect your wallet."\n        }\n      }\n    }\n  }\n}\n';
      },
      90950: function (e, t, n) {
        "use strict";
        n.d(t, {
          X: function () {
            return s;
          },
        });
        var r = n(65225),
          i = n(1633),
          o = n(42479),
          s = (e) => {
            let { projectId: t, walletConnectParameters: s } = e,
              a = (0, r.B)({
                namespace: "bitkeep.ethereum",
                flag: "isBitKeep",
              }),
              c = !a;
            return {
              id: "bitget",
              name: "Bitget Wallet",
              rdns: "com.bitget.web3",
              iconUrl: async () =>
                (await n.e(946).then(n.bind(n, 946))).default,
              iconAccent: "#f6851a",
              iconBackground: "#fff",
              installed: c ? void 0 : a,
              downloadUrls: {
                android: "https://web3.bitget.com/en/wallet-download?type=0",
                ios: "https://apps.apple.com/app/bitkeep/id1395301115",
                mobile: "https://web3.bitget.com/en/wallet-download?type=2",
                qrCode: "https://web3.bitget.com/en/wallet-download",
                chrome:
                  "https://chrome.google.com/webstore/detail/bitkeep-crypto-nft-wallet/jiidiaalihmmhddjgbnbgdfflelocpak",
                browserExtension: "https://web3.bitget.com/en/wallet-download",
              },
              extension: {
                instructions: {
                  learnMoreUrl: "https://web3.bitget.com/en/academy",
                  steps: [
                    {
                      description:
                        "wallet_connectors.bitget.extension.step1.description",
                      step: "install",
                      title: "wallet_connectors.bitget.extension.step1.title",
                    },
                    {
                      description:
                        "wallet_connectors.bitget.extension.step2.description",
                      step: "create",
                      title: "wallet_connectors.bitget.extension.step2.title",
                    },
                    {
                      description:
                        "wallet_connectors.bitget.extension.step3.description",
                      step: "refresh",
                      title:
                        "wallet_connectors.bitget.extension.step3.description",
                    },
                  ],
                },
              },
              mobile: {
                getUri: c
                  ? (e) =>
                      (0, i.Dt)()
                        ? e
                        : "bitkeep://wc?uri=".concat(encodeURIComponent(e))
                  : void 0,
              },
              qrCode: c
                ? {
                    getUri: (e) => e,
                    instructions: {
                      learnMoreUrl: "https://web3.bitget.com/en/academy",
                      steps: [
                        {
                          description:
                            "wallet_connectors.bitget.qr_code.step1.description",
                          step: "install",
                          title: "wallet_connectors.bitget.qr_code.step1.title",
                        },
                        {
                          description:
                            "wallet_connectors.bitget.qr_code.step2.description",
                          step: "create",
                          title: "wallet_connectors.bitget.qr_code.step2.title",
                        },
                        {
                          description:
                            "wallet_connectors.bitget.qr_code.step3.description",
                          step: "scan",
                          title: "wallet_connectors.bitget.qr_code.step3.title",
                        },
                      ],
                    },
                  }
                : void 0,
              createConnector: c
                ? (0, o.d)({ projectId: t, walletConnectParameters: s })
                : (0, r.K)({
                    namespace: "bitkeep.ethereum",
                    flag: "isBitKeep",
                  }),
            };
          };
      },
      14405: function (e, t, n) {
        "use strict";
        n.d(t, {
          c: function () {
            return s;
          },
        });
        var r = n(65225),
          i = n(1633),
          o = n(42479),
          s = (e) => {
            let { projectId: t, walletConnectParameters: s } = e,
              a = !(0, r.B)({ namespace: "okxwallet" });
            return {
              id: "okx",
              name: "OKX Wallet",
              rdns: "com.okex.wallet",
              iconUrl: async () =>
                (await n.e(6915).then(n.bind(n, 76915))).default,
              iconAccent: "#000",
              iconBackground: "#000",
              downloadUrls: {
                android:
                  "https://play.google.com/store/apps/details?id=com.okinc.okex.gp",
                ios: "https://itunes.apple.com/app/id1327268470?mt=8",
                mobile: "https://okx.com/download",
                qrCode: "https://okx.com/download",
                chrome:
                  "https://chrome.google.com/webstore/detail/okx-wallet/mcohilncbfahbmgdjkbpemcciiolgcge",
                edge: "https://microsoftedge.microsoft.com/addons/detail/okx-wallet/pbpjkcldjiffchgbbndmhojiacbgflha",
                firefox: "https://addons.mozilla.org/firefox/addon/okexwallet/",
                browserExtension: "https://okx.com/download",
              },
              mobile: {
                getUri: a
                  ? (e) =>
                      (0, i.Dt)()
                        ? e
                        : "okex://main/wc?uri=".concat(encodeURIComponent(e))
                  : void 0,
              },
              qrCode: a
                ? {
                    getUri: (e) => e,
                    instructions: {
                      learnMoreUrl: "https://okx.com/web3/",
                      steps: [
                        {
                          description:
                            "wallet_connectors.okx.qr_code.step1.description",
                          step: "install",
                          title: "wallet_connectors.okx.qr_code.step1.title",
                        },
                        {
                          description:
                            "wallet_connectors.okx.qr_code.step2.description",
                          step: "create",
                          title: "wallet_connectors.okx.qr_code.step2.title",
                        },
                        {
                          description:
                            "wallet_connectors.okx.qr_code.step3.description",
                          step: "scan",
                          title: "wallet_connectors.okx.qr_code.step3.title",
                        },
                      ],
                    },
                  }
                : void 0,
              extension: {
                instructions: {
                  learnMoreUrl: "https://okx.com/web3/",
                  steps: [
                    {
                      description:
                        "wallet_connectors.okx.extension.step1.description",
                      step: "install",
                      title: "wallet_connectors.okx.extension.step1.title",
                    },
                    {
                      description:
                        "wallet_connectors.okx.extension.step2.description",
                      step: "create",
                      title: "wallet_connectors.okx.extension.step2.title",
                    },
                    {
                      description:
                        "wallet_connectors.okx.extension.step3.description",
                      step: "refresh",
                      title: "wallet_connectors.okx.extension.step3.title",
                    },
                  ],
                },
              },
              createConnector: a
                ? (0, o.d)({ projectId: t, walletConnectParameters: s })
                : (0, r.K)({ namespace: "okxwallet" }),
            };
          };
      },
      42479: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return h;
          },
        });
        var r = n(53738),
          i = n(14478),
          o = n(17454),
          s = n(13102),
          a = n(31669),
          c = n(77014),
          u = n(59455);
        function l(e) {
          let t, f, d, h, p, m, g, y;
          let b = e.isNewChainsStale ?? !0;
          return (0, r.K)((r) => ({
            id: "walletConnect",
            name: "WalletConnect",
            type: l.type,
            async setup() {
              let e = await this.getProvider().catch(() => null);
              e &&
                (p || ((p = this.onConnect.bind(this)), e.on("connect", p)),
                g ||
                  ((g = this.onSessionDelete.bind(this)),
                  e.on("session_delete", g)));
            },
            async connect({ chainId: e, ...t } = {}) {
              try {
                let n = await this.getProvider();
                if (!n) throw new i.M();
                m || ((m = this.onDisplayUri), n.on("display_uri", m));
                let o = e;
                if (!o) {
                  let e = (await r.storage?.getItem("state")) ?? {};
                  o = r.chains.some((t) => t.id === e.chainId)
                    ? e.chainId
                    : r.chains[0]?.id;
                }
                if (!o) throw Error("No chains found on connector.");
                let s = await this.isChainsStale();
                if (
                  (n.session && s && (await n.disconnect()), !n.session || s)
                ) {
                  let e = r.chains.filter((e) => e.id !== o).map((e) => e.id);
                  await n.connect({
                    optionalChains: [o, ...e],
                    ...("pairingTopic" in t
                      ? { pairingTopic: t.pairingTopic }
                      : {}),
                  }),
                    this.setRequestedChainsIds(r.chains.map((e) => e.id));
                }
                let c = (await n.enable()).map((e) => (0, a.K)(e)),
                  u = await this.getChainId();
                return (
                  m && (n.removeListener("display_uri", m), (m = void 0)),
                  p && (n.removeListener("connect", p), (p = void 0)),
                  d ||
                    ((d = this.onAccountsChanged.bind(this)),
                    n.on("accountsChanged", d)),
                  h ||
                    ((h = this.onChainChanged.bind(this)),
                    n.on("chainChanged", h)),
                  y ||
                    ((y = this.onDisconnect.bind(this)), n.on("disconnect", y)),
                  g ||
                    ((g = this.onSessionDelete.bind(this)),
                    n.on("session_delete", g)),
                  { accounts: c, chainId: u }
                );
              } catch (e) {
                if (
                  /(user rejected|connection request reset)/i.test(e?.message)
                )
                  throw new c.ab(e);
                throw e;
              }
            },
            async disconnect() {
              let e = await this.getProvider();
              try {
                await e?.disconnect();
              } catch (e) {
                if (!/No matching key/i.test(e.message)) throw e;
              } finally {
                h && (e?.removeListener("chainChanged", h), (h = void 0)),
                  y && (e?.removeListener("disconnect", y), (y = void 0)),
                  p || ((p = this.onConnect.bind(this)), e?.on("connect", p)),
                  d && (e?.removeListener("accountsChanged", d), (d = void 0)),
                  g && (e?.removeListener("session_delete", g), (g = void 0)),
                  this.setRequestedChainsIds([]);
              }
            },
            async getAccounts() {
              return (await this.getProvider()).accounts.map((e) =>
                (0, a.K)(e)
              );
            },
            async getProvider({ chainId: i } = {}) {
              async function s() {
                let t = r.chains.map((e) => e.id);
                if (!t.length) return;
                let { EthereumProvider: i } = await Promise.all([
                  n.e(6764),
                  n.e(3039),
                  n.e(4680),
                ]).then(n.bind(n, 4055));
                return await i.init({
                  ...e,
                  disableProviderPing: !0,
                  optionalChains: t,
                  projectId: e.projectId,
                  rpcMap: Object.fromEntries(
                    r.chains.map((e) => {
                      let [t] = (0, o.N)({
                        chain: e,
                        transports: r.transports,
                      });
                      return [e.id, t];
                    })
                  ),
                  showQrModal: e.showQrModal ?? !0,
                });
              }
              return (
                t ||
                  (f || (f = s()),
                  (t = await f),
                  t?.events.setMaxListeners(Number.POSITIVE_INFINITY)),
                i && (await this.switchChain?.({ chainId: i })),
                t
              );
            },
            async getChainId() {
              return (await this.getProvider()).chainId;
            },
            async isAuthorized() {
              try {
                let [e, t] = await Promise.all([
                  this.getAccounts(),
                  this.getProvider(),
                ]);
                if (!e.length) return !1;
                if ((await this.isChainsStale()) && t.session)
                  return await t.disconnect().catch(() => {}), !1;
                return !0;
              } catch {
                return !1;
              }
            },
            async switchChain({ addEthereumChainParameter: e, chainId: t }) {
              let n = await this.getProvider();
              if (!n) throw new i.M();
              let o = r.chains.find((e) => e.id === t);
              if (!o) throw new c.x3(new s.X4());
              try {
                await Promise.all([
                  new Promise((e) => {
                    let n = ({ chainId: i }) => {
                      i === t && (r.emitter.off("change", n), e());
                    };
                    r.emitter.on("change", n);
                  }),
                  n.request({
                    method: "wallet_switchEthereumChain",
                    params: [{ chainId: (0, u.eC)(t) }],
                  }),
                ]);
                let e = await this.getRequestedChainsIds();
                return this.setRequestedChainsIds([...e, t]), o;
              } catch (r) {
                if (/(user rejected)/i.test(r.message)) throw new c.ab(r);
                try {
                  let r, i;
                  (r = e?.blockExplorerUrls
                    ? e.blockExplorerUrls
                    : o.blockExplorers?.default.url
                    ? [o.blockExplorers?.default.url]
                    : []),
                    (i = e?.rpcUrls?.length
                      ? e.rpcUrls
                      : [...o.rpcUrls.default.http]);
                  let s = {
                    blockExplorerUrls: r,
                    chainId: (0, u.eC)(t),
                    chainName: e?.chainName ?? o.name,
                    iconUrls: e?.iconUrls,
                    nativeCurrency: e?.nativeCurrency ?? o.nativeCurrency,
                    rpcUrls: i,
                  };
                  await n.request({
                    method: "wallet_addEthereumChain",
                    params: [s],
                  });
                  let a = await this.getRequestedChainsIds();
                  return this.setRequestedChainsIds([...a, t]), o;
                } catch (e) {
                  throw new c.ab(e);
                }
              }
            },
            onAccountsChanged(e) {
              0 === e.length
                ? this.onDisconnect()
                : r.emitter.emit("change", {
                    accounts: e.map((e) => (0, a.K)(e)),
                  });
            },
            onChainChanged(e) {
              let t = Number(e);
              r.emitter.emit("change", { chainId: t });
            },
            async onConnect(e) {
              let t = Number(e.chainId),
                n = await this.getAccounts();
              r.emitter.emit("connect", { accounts: n, chainId: t });
            },
            async onDisconnect(e) {
              this.setRequestedChainsIds([]), r.emitter.emit("disconnect");
              let t = await this.getProvider();
              d && (t.removeListener("accountsChanged", d), (d = void 0)),
                h && (t.removeListener("chainChanged", h), (h = void 0)),
                y && (t.removeListener("disconnect", y), (y = void 0)),
                g && (t.removeListener("session_delete", g), (g = void 0)),
                p || ((p = this.onConnect.bind(this)), t.on("connect", p));
            },
            onDisplayUri(e) {
              r.emitter.emit("message", { type: "display_uri", data: e });
            },
            onSessionDelete() {
              this.onDisconnect();
            },
            getNamespaceChainsIds: () =>
              t
                ? t.session?.namespaces.eip155?.accounts?.map((e) =>
                    Number.parseInt(e.split(":")[1] || "")
                  ) ?? []
                : [],
            async getRequestedChainsIds() {
              return (
                (await r.storage?.getItem(this.requestedChainsStorageKey)) ?? []
              );
            },
            async isChainsStale() {
              if (!b) return !1;
              let e = r.chains.map((e) => e.id),
                t = this.getNamespaceChainsIds();
              if (t.length && !t.some((t) => e.includes(t))) return !1;
              let n = await this.getRequestedChainsIds();
              return !e.every((e) => n.includes(e));
            },
            async setRequestedChainsIds(e) {
              await r.storage?.setItem(this.requestedChainsStorageKey, e);
            },
            get requestedChainsStorageKey() {
              return `${this.id}.requestedChains`;
            },
          }));
        }
        l.type = "walletConnect";
        var f = new Map(),
          d = (e) => {
            let {
                projectId: t,
                walletConnectParameters: n,
                rkDetailsShowQrModal: r,
              } = e,
              i = { ...(n || {}), projectId: t, showQrModal: !1 };
            r && (i = { ...i, showQrModal: !0 });
            let o = JSON.stringify(i),
              s = f.get(o);
            if (s) return s;
            let a = l(i);
            return f.set(o, a), a;
          };
        function h(e) {
          let { projectId: t, walletConnectParameters: n } = e;
          if (!t || "" === t)
            throw Error(
              "No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure"
            );
          return (
            "YOUR_PROJECT_ID" === t && (t = "21fef48091f12692cad574a6f7753643"),
            (e) =>
              (function (e) {
                let {
                  projectId: t,
                  walletDetails: n,
                  walletConnectParameters: i,
                } = e;
                return (0, r.K)((e) => ({
                  ...d({
                    projectId: t,
                    walletConnectParameters: i,
                    rkDetailsShowQrModal: n.rkDetails.showQrModal,
                  })(e),
                  ...n,
                }));
              })({ projectId: t, walletDetails: e, walletConnectParameters: n })
          );
        }
      },
      48374: function (e, t, n) {
        "use strict";
        n.d(t, {
          U: function () {
            return i;
          },
        });
        var r = n(65225),
          i = () => ({
            id: "injected",
            name: "Browser Wallet",
            iconUrl: async () =>
              (await n.e(3940).then(n.bind(n, 3940))).default,
            iconBackground: "#fff",
            createConnector: (0, r.K)({}),
          });
      },
      65225: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return a;
          },
          K: function () {
            return c;
          },
        });
        var r = n(53738),
          i = n(81467);
        function o(e) {
          let t = "undefined" != typeof window ? window : void 0;
          if (void 0 === t || void 0 === t.ethereum) return;
          let n = t.ethereum.providers;
          return n ? n.find((t) => t[e]) : t.ethereum[e] ? t.ethereum : void 0;
        }
        function s(e) {
          let t = (e, n) => {
            let [r, ...i] = n.split("."),
              o = e[r];
            if (o) return 0 === i.length ? o : t(o, i.join("."));
          };
          if ("undefined" != typeof window) return t(window, e);
        }
        function a(e) {
          let { flag: t, namespace: n } = e;
          return (!!n && void 0 !== s(n)) || (!!t && void 0 !== o(t));
        }
        function c(e) {
          var t;
          let { flag: n, namespace: a, target: c } = e;
          return (
            (t =
              c ||
              (function (e) {
                var t;
                let { flag: n, namespace: r } = e,
                  i = "undefined" != typeof window ? window : void 0;
                if (void 0 === i) return;
                if (r) {
                  let e = s(r);
                  if (e) return e;
                }
                let a =
                  null === (t = i.ethereum) || void 0 === t
                    ? void 0
                    : t.providers;
                if (n) {
                  let e = o(n);
                  if (e) return e;
                }
                return void 0 !== a && a.length > 0 ? a[0] : i.ethereum;
              })({ flag: n, namespace: a })),
            (e) => {
              let n = t
                ? {
                    target: () => ({
                      id: e.rkDetails.id,
                      name: e.rkDetails.name,
                      provider: t,
                    }),
                  }
                : {};
              return (0, r.K)((t) => ({ ...(0, i.L)(n)(t), ...e }));
            }
          );
        }
      },
      66378: function (e, t, n) {
        "use strict";
        n.d(t, {
          D: function () {
            return i;
          },
        });
        var r = n(42479),
          i = (e) => {
            let { projectId: t, options: i } = e;
            return {
              id: "walletConnect",
              name: "WalletConnect",
              installed: void 0,
              iconUrl: async () =>
                (await n.e(7364).then(n.bind(n, 97364))).default,
              iconBackground: "#3b99fc",
              qrCode: { getUri: (e) => e },
              createConnector: (0, r.d)({
                projectId: t,
                walletConnectParameters: i,
              }),
            };
          };
      },
      1633: function (e, t, n) {
        "use strict";
        function r() {
          return (
            "undefined" != typeof navigator &&
            /android/i.test(navigator.userAgent)
          );
        }
        n.d(t, {
          Dt: function () {
            return r;
          },
        });
      },
      54990: function (e, t, n) {
        "use strict";
        t.Z = function () {
          for (var e, t, n = 0, r = "", i = arguments.length; n < i; n++)
            (e = arguments[n]) &&
              (t = (function e(t) {
                var n,
                  r,
                  i = "";
                if ("string" == typeof t || "number" == typeof t) i += t;
                else if ("object" == typeof t) {
                  if (Array.isArray(t)) {
                    var o = t.length;
                    for (n = 0; n < o; n++)
                      t[n] && (r = e(t[n])) && (i && (i += " "), (i += r));
                  } else for (r in t) t[r] && (i && (i += " "), (i += r));
                }
                return i;
              })(e)) &&
              (r && (r += " "), (r += t));
          return r;
        };
      },
      54486: function (e, t, n) {
        "use strict";
        function r(e) {
          return {
            formatters: void 0,
            fees: void 0,
            serializers: void 0,
            ...e,
          };
        }
        n.d(t, {
          axR: function () {
            return r;
          },
        }),
          r({
            id: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
            name: "Solana",
            network: "solana-mainnet",
            nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
            blockExplorers: {
              default: { name: "Solscan", url: "https://solscan.io" },
            },
            testnet: !1,
            chainNamespace: "solana",
            caipNetworkId: "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
            deprecatedCaipNetworkId: "solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ",
          }),
          r({
            id: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
            name: "Solana Devnet",
            network: "solana-devnet",
            nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
            blockExplorers: {
              default: { name: "Solscan", url: "https://solscan.io" },
            },
            testnet: !0,
            chainNamespace: "solana",
            caipNetworkId: "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
            deprecatedCaipNetworkId: "solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K",
          }),
          r({
            id: "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
            name: "Solana Testnet",
            network: "solana-testnet",
            nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
            blockExplorers: {
              default: { name: "Solscan", url: "https://solscan.io" },
            },
            testnet: !0,
            chainNamespace: "solana",
            caipNetworkId: "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
          });
      },
      87045: function (e, t, n) {
        "use strict";
        n.d(t, {
          j: function () {
            return o;
          },
        });
        var r = n(24112),
          i = n(45345),
          o = new (class extends r.l {
            #e;
            #t;
            #n;
            constructor() {
              super(),
                (this.#n = (e) => {
                  if (!i.sk && window.addEventListener) {
                    let t = () => e();
                    return (
                      window.addEventListener("visibilitychange", t, !1),
                      () => {
                        window.removeEventListener("visibilitychange", t);
                      }
                    );
                  }
                });
            }
            onSubscribe() {
              this.#t || this.setEventListener(this.#n);
            }
            onUnsubscribe() {
              this.hasListeners() || (this.#t?.(), (this.#t = void 0));
            }
            setEventListener(e) {
              (this.#n = e),
                this.#t?.(),
                (this.#t = e((e) => {
                  "boolean" == typeof e ? this.setFocused(e) : this.onFocus();
                }));
            }
            setFocused(e) {
              this.#e !== e && ((this.#e = e), this.onFocus());
            }
            onFocus() {
              let e = this.isFocused();
              this.listeners.forEach((t) => {
                t(e);
              });
            }
            isFocused() {
              return "boolean" == typeof this.#e
                ? this.#e
                : globalThis.document?.visibilityState !== "hidden";
            }
          })();
      },
      2894: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return a;
          },
          m: function () {
            return s;
          },
        });
        var r = n(18238),
          i = n(7989),
          o = n(11255),
          s = class extends i.F {
            #r;
            #i;
            #o;
            constructor(e) {
              super(),
                (this.mutationId = e.mutationId),
                (this.#i = e.mutationCache),
                (this.#r = []),
                (this.state = e.state || a()),
                this.setOptions(e.options),
                this.scheduleGc();
            }
            setOptions(e) {
              (this.options = e), this.updateGcTime(this.options.gcTime);
            }
            get meta() {
              return this.options.meta;
            }
            addObserver(e) {
              this.#r.includes(e) ||
                (this.#r.push(e),
                this.clearGcTimeout(),
                this.#i.notify({
                  type: "observerAdded",
                  mutation: this,
                  observer: e,
                }));
            }
            removeObserver(e) {
              (this.#r = this.#r.filter((t) => t !== e)),
                this.scheduleGc(),
                this.#i.notify({
                  type: "observerRemoved",
                  mutation: this,
                  observer: e,
                });
            }
            optionalRemove() {
              this.#r.length ||
                ("pending" === this.state.status
                  ? this.scheduleGc()
                  : this.#i.remove(this));
            }
            continue() {
              return this.#o?.continue() ?? this.execute(this.state.variables);
            }
            async execute(e) {
              this.#o = (0, o.Mz)({
                fn: () =>
                  this.options.mutationFn
                    ? this.options.mutationFn(e)
                    : Promise.reject(Error("No mutationFn found")),
                onFail: (e, t) => {
                  this.#s({ type: "failed", failureCount: e, error: t });
                },
                onPause: () => {
                  this.#s({ type: "pause" });
                },
                onContinue: () => {
                  this.#s({ type: "continue" });
                },
                retry: this.options.retry ?? 0,
                retryDelay: this.options.retryDelay,
                networkMode: this.options.networkMode,
                canRun: () => this.#i.canRun(this),
              });
              let t = "pending" === this.state.status,
                n = !this.#o.canStart();
              try {
                if (!t) {
                  this.#s({ type: "pending", variables: e, isPaused: n }),
                    await this.#i.config.onMutate?.(e, this);
                  let t = await this.options.onMutate?.(e);
                  t !== this.state.context &&
                    this.#s({
                      type: "pending",
                      context: t,
                      variables: e,
                      isPaused: n,
                    });
                }
                let r = await this.#o.start();
                return (
                  await this.#i.config.onSuccess?.(
                    r,
                    e,
                    this.state.context,
                    this
                  ),
                  await this.options.onSuccess?.(r, e, this.state.context),
                  await this.#i.config.onSettled?.(
                    r,
                    null,
                    this.state.variables,
                    this.state.context,
                    this
                  ),
                  await this.options.onSettled?.(
                    r,
                    null,
                    e,
                    this.state.context
                  ),
                  this.#s({ type: "success", data: r }),
                  r
                );
              } catch (t) {
                try {
                  throw (
                    (await this.#i.config.onError?.(
                      t,
                      e,
                      this.state.context,
                      this
                    ),
                    await this.options.onError?.(t, e, this.state.context),
                    await this.#i.config.onSettled?.(
                      void 0,
                      t,
                      this.state.variables,
                      this.state.context,
                      this
                    ),
                    await this.options.onSettled?.(
                      void 0,
                      t,
                      e,
                      this.state.context
                    ),
                    t)
                  );
                } finally {
                  this.#s({ type: "error", error: t });
                }
              } finally {
                this.#i.runNext(this);
              }
            }
            #s(e) {
              (this.state = ((t) => {
                switch (e.type) {
                  case "failed":
                    return {
                      ...t,
                      failureCount: e.failureCount,
                      failureReason: e.error,
                    };
                  case "pause":
                    return { ...t, isPaused: !0 };
                  case "continue":
                    return { ...t, isPaused: !1 };
                  case "pending":
                    return {
                      ...t,
                      context: e.context,
                      data: void 0,
                      failureCount: 0,
                      failureReason: null,
                      error: null,
                      isPaused: e.isPaused,
                      status: "pending",
                      variables: e.variables,
                      submittedAt: Date.now(),
                    };
                  case "success":
                    return {
                      ...t,
                      data: e.data,
                      failureCount: 0,
                      failureReason: null,
                      error: null,
                      status: "success",
                      isPaused: !1,
                    };
                  case "error":
                    return {
                      ...t,
                      data: void 0,
                      error: e.error,
                      failureCount: t.failureCount + 1,
                      failureReason: e.error,
                      isPaused: !1,
                      status: "error",
                    };
                }
              })(this.state)),
                r.V.batch(() => {
                  this.#r.forEach((t) => {
                    t.onMutationUpdate(e);
                  }),
                    this.#i.notify({
                      mutation: this,
                      type: "updated",
                      action: e,
                    });
                });
            }
          };
        function a() {
          return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            failureReason: null,
            isPaused: !1,
            status: "idle",
            variables: void 0,
            submittedAt: 0,
          };
        }
      },
      18238: function (e, t, n) {
        "use strict";
        n.d(t, {
          V: function () {
            return r;
          },
        });
        var r = (function () {
          let e = [],
            t = 0,
            n = (e) => {
              e();
            },
            r = (e) => {
              e();
            },
            i = (e) => setTimeout(e, 0),
            o = (r) => {
              t
                ? e.push(r)
                : i(() => {
                    n(r);
                  });
            },
            s = () => {
              let t = e;
              (e = []),
                t.length &&
                  i(() => {
                    r(() => {
                      t.forEach((e) => {
                        n(e);
                      });
                    });
                  });
            };
          return {
            batch: (e) => {
              let n;
              t++;
              try {
                n = e();
              } finally {
                --t || s();
              }
              return n;
            },
            batchCalls:
              (e) =>
              (...t) => {
                o(() => {
                  e(...t);
                });
              },
            schedule: o,
            setNotifyFunction: (e) => {
              n = e;
            },
            setBatchNotifyFunction: (e) => {
              r = e;
            },
            setScheduler: (e) => {
              i = e;
            },
          };
        })();
      },
      57853: function (e, t, n) {
        "use strict";
        n.d(t, {
          N: function () {
            return o;
          },
        });
        var r = n(24112),
          i = n(45345),
          o = new (class extends r.l {
            #a = !0;
            #t;
            #n;
            constructor() {
              super(),
                (this.#n = (e) => {
                  if (!i.sk && window.addEventListener) {
                    let t = () => e(!0),
                      n = () => e(!1);
                    return (
                      window.addEventListener("online", t, !1),
                      window.addEventListener("offline", n, !1),
                      () => {
                        window.removeEventListener("online", t),
                          window.removeEventListener("offline", n);
                      }
                    );
                  }
                });
            }
            onSubscribe() {
              this.#t || this.setEventListener(this.#n);
            }
            onUnsubscribe() {
              this.hasListeners() || (this.#t?.(), (this.#t = void 0));
            }
            setEventListener(e) {
              (this.#n = e),
                this.#t?.(),
                (this.#t = e(this.setOnline.bind(this)));
            }
            setOnline(e) {
              this.#a !== e &&
                ((this.#a = e),
                this.listeners.forEach((t) => {
                  t(e);
                }));
            }
            isOnline() {
              return this.#a;
            }
          })();
      },
      21733: function (e, t, n) {
        "use strict";
        n.d(t, {
          A: function () {
            return a;
          },
          z: function () {
            return c;
          },
        });
        var r = n(45345),
          i = n(18238),
          o = n(11255),
          s = n(7989),
          a = class extends s.F {
            #c;
            #u;
            #l;
            #o;
            #f;
            #d;
            constructor(e) {
              super(),
                (this.#d = !1),
                (this.#f = e.defaultOptions),
                this.setOptions(e.options),
                (this.observers = []),
                (this.#l = e.cache),
                (this.queryKey = e.queryKey),
                (this.queryHash = e.queryHash),
                (this.#c = (function (e) {
                  let t =
                      "function" == typeof e.initialData
                        ? e.initialData()
                        : e.initialData,
                    n = void 0 !== t,
                    r = n
                      ? "function" == typeof e.initialDataUpdatedAt
                        ? e.initialDataUpdatedAt()
                        : e.initialDataUpdatedAt
                      : 0;
                  return {
                    data: t,
                    dataUpdateCount: 0,
                    dataUpdatedAt: n ? r ?? Date.now() : 0,
                    error: null,
                    errorUpdateCount: 0,
                    errorUpdatedAt: 0,
                    fetchFailureCount: 0,
                    fetchFailureReason: null,
                    fetchMeta: null,
                    isInvalidated: !1,
                    status: n ? "success" : "pending",
                    fetchStatus: "idle",
                  };
                })(this.options)),
                (this.state = e.state ?? this.#c),
                this.scheduleGc();
            }
            get meta() {
              return this.options.meta;
            }
            get promise() {
              return this.#o?.promise;
            }
            setOptions(e) {
              (this.options = { ...this.#f, ...e }),
                this.updateGcTime(this.options.gcTime);
            }
            optionalRemove() {
              this.observers.length ||
                "idle" !== this.state.fetchStatus ||
                this.#l.remove(this);
            }
            setData(e, t) {
              let n = (0, r.oE)(this.state.data, e, this.options);
              return (
                this.#s({
                  data: n,
                  type: "success",
                  dataUpdatedAt: t?.updatedAt,
                  manual: t?.manual,
                }),
                n
              );
            }
            setState(e, t) {
              this.#s({ type: "setState", state: e, setStateOptions: t });
            }
            cancel(e) {
              let t = this.#o?.promise;
              return (
                this.#o?.cancel(e),
                t ? t.then(r.ZT).catch(r.ZT) : Promise.resolve()
              );
            }
            destroy() {
              super.destroy(), this.cancel({ silent: !0 });
            }
            reset() {
              this.destroy(), this.setState(this.#c);
            }
            isActive() {
              return this.observers.some(
                (e) => !1 !== (0, r.Nc)(e.options.enabled, this)
              );
            }
            isDisabled() {
              return this.getObserversCount() > 0
                ? !this.isActive()
                : this.options.queryFn === r.CN ||
                    this.state.dataUpdateCount + this.state.errorUpdateCount ===
                      0;
            }
            isStale() {
              return (
                !!this.state.isInvalidated ||
                (this.getObserversCount() > 0
                  ? this.observers.some((e) => e.getCurrentResult().isStale)
                  : void 0 === this.state.data)
              );
            }
            isStaleByTime(e = 0) {
              return (
                this.state.isInvalidated ||
                void 0 === this.state.data ||
                !(0, r.Kp)(this.state.dataUpdatedAt, e)
              );
            }
            onFocus() {
              let e = this.observers.find((e) => e.shouldFetchOnWindowFocus());
              e?.refetch({ cancelRefetch: !1 }), this.#o?.continue();
            }
            onOnline() {
              let e = this.observers.find((e) => e.shouldFetchOnReconnect());
              e?.refetch({ cancelRefetch: !1 }), this.#o?.continue();
            }
            addObserver(e) {
              this.observers.includes(e) ||
                (this.observers.push(e),
                this.clearGcTimeout(),
                this.#l.notify({
                  type: "observerAdded",
                  query: this,
                  observer: e,
                }));
            }
            removeObserver(e) {
              this.observers.includes(e) &&
                ((this.observers = this.observers.filter((t) => t !== e)),
                this.observers.length ||
                  (this.#o &&
                    (this.#d
                      ? this.#o.cancel({ revert: !0 })
                      : this.#o.cancelRetry()),
                  this.scheduleGc()),
                this.#l.notify({
                  type: "observerRemoved",
                  query: this,
                  observer: e,
                }));
            }
            getObserversCount() {
              return this.observers.length;
            }
            invalidate() {
              this.state.isInvalidated || this.#s({ type: "invalidate" });
            }
            fetch(e, t) {
              if ("idle" !== this.state.fetchStatus) {
                if (void 0 !== this.state.data && t?.cancelRefetch)
                  this.cancel({ silent: !0 });
                else if (this.#o)
                  return this.#o.continueRetry(), this.#o.promise;
              }
              if ((e && this.setOptions(e), !this.options.queryFn)) {
                let e = this.observers.find((e) => e.options.queryFn);
                e && this.setOptions(e.options);
              }
              let n = new AbortController(),
                i = (e) => {
                  Object.defineProperty(e, "signal", {
                    enumerable: !0,
                    get: () => ((this.#d = !0), n.signal),
                  });
                },
                s = {
                  fetchOptions: t,
                  options: this.options,
                  queryKey: this.queryKey,
                  state: this.state,
                  fetchFn: () => {
                    let e = (0, r.cG)(this.options, t),
                      n = { queryKey: this.queryKey, meta: this.meta };
                    return (i(n), (this.#d = !1), this.options.persister)
                      ? this.options.persister(e, n, this)
                      : e(n);
                  },
                };
              i(s),
                this.options.behavior?.onFetch(s, this),
                (this.#u = this.state),
                ("idle" === this.state.fetchStatus ||
                  this.state.fetchMeta !== s.fetchOptions?.meta) &&
                  this.#s({ type: "fetch", meta: s.fetchOptions?.meta });
              let a = (e) => {
                ((0, o.DV)(e) && e.silent) ||
                  this.#s({ type: "error", error: e }),
                  (0, o.DV)(e) ||
                    (this.#l.config.onError?.(e, this),
                    this.#l.config.onSettled?.(this.state.data, e, this)),
                  this.scheduleGc();
              };
              return (
                (this.#o = (0, o.Mz)({
                  initialPromise: t?.initialPromise,
                  fn: s.fetchFn,
                  abort: n.abort.bind(n),
                  onSuccess: (e) => {
                    if (void 0 === e) {
                      a(Error(`${this.queryHash} data is undefined`));
                      return;
                    }
                    try {
                      this.setData(e);
                    } catch (e) {
                      a(e);
                      return;
                    }
                    this.#l.config.onSuccess?.(e, this),
                      this.#l.config.onSettled?.(e, this.state.error, this),
                      this.scheduleGc();
                  },
                  onError: a,
                  onFail: (e, t) => {
                    this.#s({ type: "failed", failureCount: e, error: t });
                  },
                  onPause: () => {
                    this.#s({ type: "pause" });
                  },
                  onContinue: () => {
                    this.#s({ type: "continue" });
                  },
                  retry: s.options.retry,
                  retryDelay: s.options.retryDelay,
                  networkMode: s.options.networkMode,
                  canRun: () => !0,
                })),
                this.#o.start()
              );
            }
            #s(e) {
              (this.state = ((t) => {
                switch (e.type) {
                  case "failed":
                    return {
                      ...t,
                      fetchFailureCount: e.failureCount,
                      fetchFailureReason: e.error,
                    };
                  case "pause":
                    return { ...t, fetchStatus: "paused" };
                  case "continue":
                    return { ...t, fetchStatus: "fetching" };
                  case "fetch":
                    return {
                      ...t,
                      ...c(t.data, this.options),
                      fetchMeta: e.meta ?? null,
                    };
                  case "success":
                    return {
                      ...t,
                      data: e.data,
                      dataUpdateCount: t.dataUpdateCount + 1,
                      dataUpdatedAt: e.dataUpdatedAt ?? Date.now(),
                      error: null,
                      isInvalidated: !1,
                      status: "success",
                      ...(!e.manual && {
                        fetchStatus: "idle",
                        fetchFailureCount: 0,
                        fetchFailureReason: null,
                      }),
                    };
                  case "error":
                    let n = e.error;
                    if ((0, o.DV)(n) && n.revert && this.#u)
                      return { ...this.#u, fetchStatus: "idle" };
                    return {
                      ...t,
                      error: n,
                      errorUpdateCount: t.errorUpdateCount + 1,
                      errorUpdatedAt: Date.now(),
                      fetchFailureCount: t.fetchFailureCount + 1,
                      fetchFailureReason: n,
                      fetchStatus: "idle",
                      status: "error",
                    };
                  case "invalidate":
                    return { ...t, isInvalidated: !0 };
                  case "setState":
                    return { ...t, ...e.state };
                }
              })(this.state)),
                i.V.batch(() => {
                  this.observers.forEach((e) => {
                    e.onQueryUpdate();
                  }),
                    this.#l.notify({ query: this, type: "updated", action: e });
                });
            }
          };
        function c(e, t) {
          return {
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchStatus: (0, o.Kw)(t.networkMode) ? "fetching" : "paused",
            ...(void 0 === e && { error: null, status: "pending" }),
          };
        }
      },
      7989: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return i;
          },
        });
        var r = n(45345),
          i = class {
            #h;
            destroy() {
              this.clearGcTimeout();
            }
            scheduleGc() {
              this.clearGcTimeout(),
                (0, r.PN)(this.gcTime) &&
                  (this.#h = setTimeout(() => {
                    this.optionalRemove();
                  }, this.gcTime));
            }
            updateGcTime(e) {
              this.gcTime = Math.max(
                this.gcTime || 0,
                e ?? (r.sk ? 1 / 0 : 3e5)
              );
            }
            clearGcTimeout() {
              this.#h && (clearTimeout(this.#h), (this.#h = void 0));
            }
          };
      },
      11255: function (e, t, n) {
        "use strict";
        n.d(t, {
          DV: function () {
            return l;
          },
          Kw: function () {
            return c;
          },
          Mz: function () {
            return f;
          },
        });
        var r = n(87045),
          i = n(57853),
          o = n(16803),
          s = n(45345);
        function a(e) {
          return Math.min(1e3 * 2 ** e, 3e4);
        }
        function c(e) {
          return (e ?? "online") !== "online" || i.N.isOnline();
        }
        var u = class extends Error {
          constructor(e) {
            super("CancelledError"),
              (this.revert = e?.revert),
              (this.silent = e?.silent);
          }
        };
        function l(e) {
          return e instanceof u;
        }
        function f(e) {
          let t,
            n = !1,
            l = 0,
            f = !1,
            d = (0, o.O)(),
            h = () =>
              r.j.isFocused() &&
              ("always" === e.networkMode || i.N.isOnline()) &&
              e.canRun(),
            p = () => c(e.networkMode) && e.canRun(),
            m = (n) => {
              f || ((f = !0), e.onSuccess?.(n), t?.(), d.resolve(n));
            },
            g = (n) => {
              f || ((f = !0), e.onError?.(n), t?.(), d.reject(n));
            },
            y = () =>
              new Promise((n) => {
                (t = (e) => {
                  (f || h()) && n(e);
                }),
                  e.onPause?.();
              }).then(() => {
                (t = void 0), f || e.onContinue?.();
              }),
            b = () => {
              let t;
              if (f) return;
              let r = 0 === l ? e.initialPromise : void 0;
              try {
                t = r ?? e.fn();
              } catch (e) {
                t = Promise.reject(e);
              }
              Promise.resolve(t)
                .then(m)
                .catch((t) => {
                  if (f) return;
                  let r = e.retry ?? (s.sk ? 0 : 3),
                    i = e.retryDelay ?? a,
                    o = "function" == typeof i ? i(l, t) : i,
                    c =
                      !0 === r ||
                      ("number" == typeof r && l < r) ||
                      ("function" == typeof r && r(l, t));
                  if (n || !c) {
                    g(t);
                    return;
                  }
                  l++,
                    e.onFail?.(l, t),
                    (0, s._v)(o)
                      .then(() => (h() ? void 0 : y()))
                      .then(() => {
                        n ? g(t) : b();
                      });
                });
            };
          return {
            promise: d,
            cancel: (t) => {
              f || (g(new u(t)), e.abort?.());
            },
            continue: () => (t?.(), d),
            cancelRetry: () => {
              n = !0;
            },
            continueRetry: () => {
              n = !1;
            },
            canStart: p,
            start: () => (p() ? b() : y().then(b), d),
          };
        }
      },
      24112: function (e, t, n) {
        "use strict";
        n.d(t, {
          l: function () {
            return r;
          },
        });
        var r = class {
          constructor() {
            (this.listeners = new Set()),
              (this.subscribe = this.subscribe.bind(this));
          }
          subscribe(e) {
            return (
              this.listeners.add(e),
              this.onSubscribe(),
              () => {
                this.listeners.delete(e), this.onUnsubscribe();
              }
            );
          }
          hasListeners() {
            return this.listeners.size > 0;
          }
          onSubscribe() {}
          onUnsubscribe() {}
        };
      },
      16803: function (e, t, n) {
        "use strict";
        function r() {
          let e, t;
          let n = new Promise((n, r) => {
            (e = n), (t = r);
          });
          function r(e) {
            Object.assign(n, e), delete n.resolve, delete n.reject;
          }
          return (
            (n.status = "pending"),
            n.catch(() => {}),
            (n.resolve = (t) => {
              r({ status: "fulfilled", value: t }), e(t);
            }),
            (n.reject = (e) => {
              r({ status: "rejected", reason: e }), t(e);
            }),
            n
          );
        }
        n.d(t, {
          O: function () {
            return r;
          },
        });
      },
      45345: function (e, t, n) {
        "use strict";
        n.d(t, {
          CN: function () {
            return x;
          },
          Ht: function () {
            return C;
          },
          KC: function () {
            return c;
          },
          Kp: function () {
            return a;
          },
          Nc: function () {
            return u;
          },
          PN: function () {
            return s;
          },
          Q$: function () {
            return m;
          },
          Rm: function () {
            return d;
          },
          SE: function () {
            return o;
          },
          VS: function () {
            return g;
          },
          VX: function () {
            return E;
          },
          X7: function () {
            return f;
          },
          Ym: function () {
            return h;
          },
          ZT: function () {
            return i;
          },
          _v: function () {
            return v;
          },
          _x: function () {
            return l;
          },
          cG: function () {
            return B;
          },
          oE: function () {
            return A;
          },
          sk: function () {
            return r;
          },
          to: function () {
            return p;
          },
        });
        var r = "undefined" == typeof window || "Deno" in globalThis;
        function i() {}
        function o(e, t) {
          return "function" == typeof e ? e(t) : e;
        }
        function s(e) {
          return "number" == typeof e && e >= 0 && e !== 1 / 0;
        }
        function a(e, t) {
          return Math.max(e + (t || 0) - Date.now(), 0);
        }
        function c(e, t) {
          return "function" == typeof e ? e(t) : e;
        }
        function u(e, t) {
          return "function" == typeof e ? e(t) : e;
        }
        function l(e, t) {
          let {
            type: n = "all",
            exact: r,
            fetchStatus: i,
            predicate: o,
            queryKey: s,
            stale: a,
          } = e;
          if (s) {
            if (r) {
              if (t.queryHash !== d(s, t.options)) return !1;
            } else if (!p(t.queryKey, s)) return !1;
          }
          if ("all" !== n) {
            let e = t.isActive();
            if (("active" === n && !e) || ("inactive" === n && e)) return !1;
          }
          return (
            ("boolean" != typeof a || t.isStale() === a) &&
            (!i || i === t.state.fetchStatus) &&
            (!o || !!o(t))
          );
        }
        function f(e, t) {
          let { exact: n, status: r, predicate: i, mutationKey: o } = e;
          if (o) {
            if (!t.options.mutationKey) return !1;
            if (n) {
              if (h(t.options.mutationKey) !== h(o)) return !1;
            } else if (!p(t.options.mutationKey, o)) return !1;
          }
          return (!r || t.state.status === r) && (!i || !!i(t));
        }
        function d(e, t) {
          return (t?.queryKeyHashFn || h)(e);
        }
        function h(e) {
          return JSON.stringify(e, (e, t) =>
            b(t)
              ? Object.keys(t)
                  .sort()
                  .reduce((e, n) => ((e[n] = t[n]), e), {})
              : t
          );
        }
        function p(e, t) {
          return (
            e === t ||
            (typeof e == typeof t &&
              !!e &&
              !!t &&
              "object" == typeof e &&
              "object" == typeof t &&
              !Object.keys(t).some((n) => !p(e[n], t[n])))
          );
        }
        function m(e, t) {
          if (e === t) return e;
          let n = y(e) && y(t);
          if (n || (b(e) && b(t))) {
            let r = n ? e : Object.keys(e),
              i = r.length,
              o = n ? t : Object.keys(t),
              s = o.length,
              a = n ? [] : {},
              c = 0;
            for (let i = 0; i < s; i++) {
              let s = n ? i : o[i];
              ((!n && r.includes(s)) || n) && void 0 === e[s] && void 0 === t[s]
                ? ((a[s] = void 0), c++)
                : ((a[s] = m(e[s], t[s])),
                  a[s] === e[s] && void 0 !== e[s] && c++);
            }
            return i === s && c === i ? e : a;
          }
          return t;
        }
        function g(e, t) {
          if (!t || Object.keys(e).length !== Object.keys(t).length) return !1;
          for (let n in e) if (e[n] !== t[n]) return !1;
          return !0;
        }
        function y(e) {
          return Array.isArray(e) && e.length === Object.keys(e).length;
        }
        function b(e) {
          if (!w(e)) return !1;
          let t = e.constructor;
          if (void 0 === t) return !0;
          let n = t.prototype;
          return (
            !!(w(n) && n.hasOwnProperty("isPrototypeOf")) &&
            Object.getPrototypeOf(e) === Object.prototype
          );
        }
        function w(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        function v(e) {
          return new Promise((t) => {
            setTimeout(t, e);
          });
        }
        function A(e, t, n) {
          return "function" == typeof n.structuralSharing
            ? n.structuralSharing(e, t)
            : !1 !== n.structuralSharing
            ? m(e, t)
            : t;
        }
        function E(e, t, n = 0) {
          let r = [...e, t];
          return n && r.length > n ? r.slice(1) : r;
        }
        function C(e, t, n = 0) {
          let r = [t, ...e];
          return n && r.length > n ? r.slice(0, -1) : r;
        }
        var x = Symbol();
        function B(e, t) {
          return !e.queryFn && t?.initialPromise
            ? () => t.initialPromise
            : e.queryFn && e.queryFn !== x
            ? e.queryFn
            : () => Promise.reject(Error(`Missing queryFn: '${e.queryHash}'`));
        }
      },
      29827: function (e, t, n) {
        "use strict";
        n.d(t, {
          NL: function () {
            return s;
          },
          aH: function () {
            return a;
          },
        });
        var r = n(2265),
          i = n(57437),
          o = r.createContext(void 0),
          s = (e) => {
            let t = r.useContext(o);
            if (e) return e;
            if (!t)
              throw Error(
                "No QueryClient set, use QueryClientProvider to set one"
              );
            return t;
          },
          a = (e) => {
            let { client: t, children: n } = e;
            return (
              r.useEffect(
                () => (
                  t.mount(),
                  () => {
                    t.unmount();
                  }
                ),
                [t]
              ),
              (0, i.jsx)(o.Provider, { value: t, children: n })
            );
          };
      },
      21770: function (e, t, n) {
        "use strict";
        n.d(t, {
          D: function () {
            return f;
          },
        });
        var r = n(2265),
          i = n(2894),
          o = n(18238),
          s = n(24112),
          a = n(45345),
          c = class extends s.l {
            #p;
            #m = void 0;
            #g;
            #y;
            constructor(e, t) {
              super(),
                (this.#p = e),
                this.setOptions(t),
                this.bindMethods(),
                this.#b();
            }
            bindMethods() {
              (this.mutate = this.mutate.bind(this)),
                (this.reset = this.reset.bind(this));
            }
            setOptions(e) {
              let t = this.options;
              (this.options = this.#p.defaultMutationOptions(e)),
                (0, a.VS)(this.options, t) ||
                  this.#p
                    .getMutationCache()
                    .notify({
                      type: "observerOptionsUpdated",
                      mutation: this.#g,
                      observer: this,
                    }),
                t?.mutationKey &&
                this.options.mutationKey &&
                (0, a.Ym)(t.mutationKey) !== (0, a.Ym)(this.options.mutationKey)
                  ? this.reset()
                  : this.#g?.state.status === "pending" &&
                    this.#g.setOptions(this.options);
            }
            onUnsubscribe() {
              this.hasListeners() || this.#g?.removeObserver(this);
            }
            onMutationUpdate(e) {
              this.#b(), this.#w(e);
            }
            getCurrentResult() {
              return this.#m;
            }
            reset() {
              this.#g?.removeObserver(this),
                (this.#g = void 0),
                this.#b(),
                this.#w();
            }
            mutate(e, t) {
              return (
                (this.#y = t),
                this.#g?.removeObserver(this),
                (this.#g = this.#p
                  .getMutationCache()
                  .build(this.#p, this.options)),
                this.#g.addObserver(this),
                this.#g.execute(e)
              );
            }
            #b() {
              let e = this.#g?.state ?? (0, i.R)();
              this.#m = {
                ...e,
                isPending: "pending" === e.status,
                isSuccess: "success" === e.status,
                isError: "error" === e.status,
                isIdle: "idle" === e.status,
                mutate: this.mutate,
                reset: this.reset,
              };
            }
            #w(e) {
              o.V.batch(() => {
                if (this.#y && this.hasListeners()) {
                  let t = this.#m.variables,
                    n = this.#m.context;
                  e?.type === "success"
                    ? (this.#y.onSuccess?.(e.data, t, n),
                      this.#y.onSettled?.(e.data, null, t, n))
                    : e?.type === "error" &&
                      (this.#y.onError?.(e.error, t, n),
                      this.#y.onSettled?.(void 0, e.error, t, n));
                }
                this.listeners.forEach((e) => {
                  e(this.#m);
                });
              });
            }
          },
          u = n(29827),
          l = n(51172);
        function f(e, t) {
          let n = (0, u.NL)(t),
            [i] = r.useState(() => new c(n, e));
          r.useEffect(() => {
            i.setOptions(e);
          }, [i, e]);
          let s = r.useSyncExternalStore(
              r.useCallback((e) => i.subscribe(o.V.batchCalls(e)), [i]),
              () => i.getCurrentResult(),
              () => i.getCurrentResult()
            ),
            a = r.useCallback(
              (e, t) => {
                i.mutate(e, t).catch(l.Z);
              },
              [i]
            );
          if (s.error && (0, l.L)(i.options.throwOnError, [s.error]))
            throw s.error;
          return { ...s, mutate: a, mutateAsync: s.mutate };
        }
      },
      16593: function (e, t, n) {
        "use strict";
        let r;
        n.d(t, {
          a: function () {
            return T;
          },
        });
        var i = n(87045),
          o = n(18238),
          s = n(21733),
          a = n(24112),
          c = n(16803),
          u = n(45345),
          l = class extends a.l {
            constructor(e, t) {
              super(),
                (this.options = t),
                (this.#p = e),
                (this.#v = null),
                (this.#A = (0, c.O)()),
                this.options.experimental_prefetchInRender ||
                  this.#A.reject(
                    Error(
                      "experimental_prefetchInRender feature flag is not enabled"
                    )
                  ),
                this.bindMethods(),
                this.setOptions(t);
            }
            #p;
            #E = void 0;
            #C = void 0;
            #m = void 0;
            #x;
            #B;
            #A;
            #v;
            #I;
            #S;
            #P;
            #T;
            #O;
            #k;
            #R = new Set();
            bindMethods() {
              this.refetch = this.refetch.bind(this);
            }
            onSubscribe() {
              1 === this.listeners.size &&
                (this.#E.addObserver(this),
                f(this.#E, this.options) ? this.#N() : this.updateResult(),
                this.#M());
            }
            onUnsubscribe() {
              this.hasListeners() || this.destroy();
            }
            shouldFetchOnReconnect() {
              return d(this.#E, this.options, this.options.refetchOnReconnect);
            }
            shouldFetchOnWindowFocus() {
              return d(
                this.#E,
                this.options,
                this.options.refetchOnWindowFocus
              );
            }
            destroy() {
              (this.listeners = new Set()),
                this.#L(),
                this.#F(),
                this.#E.removeObserver(this);
            }
            setOptions(e, t) {
              let n = this.options,
                r = this.#E;
              if (
                ((this.options = this.#p.defaultQueryOptions(e)),
                void 0 !== this.options.enabled &&
                  "boolean" != typeof this.options.enabled &&
                  "function" != typeof this.options.enabled &&
                  "boolean" != typeof (0, u.Nc)(this.options.enabled, this.#E))
              )
                throw Error(
                  "Expected enabled to be a boolean or a callback that returns a boolean"
                );
              this.#U(),
                this.#E.setOptions(this.options),
                n._defaulted &&
                  !(0, u.VS)(this.options, n) &&
                  this.#p
                    .getQueryCache()
                    .notify({
                      type: "observerOptionsUpdated",
                      query: this.#E,
                      observer: this,
                    });
              let i = this.hasListeners();
              i && h(this.#E, r, this.options, n) && this.#N(),
                this.updateResult(t),
                i &&
                  (this.#E !== r ||
                    (0, u.Nc)(this.options.enabled, this.#E) !==
                      (0, u.Nc)(n.enabled, this.#E) ||
                    (0, u.KC)(this.options.staleTime, this.#E) !==
                      (0, u.KC)(n.staleTime, this.#E)) &&
                  this.#D();
              let o = this.#_();
              i &&
                (this.#E !== r ||
                  (0, u.Nc)(this.options.enabled, this.#E) !==
                    (0, u.Nc)(n.enabled, this.#E) ||
                  o !== this.#k) &&
                this.#j(o);
            }
            getOptimisticResult(e) {
              let t = this.#p.getQueryCache().build(this.#p, e),
                n = this.createResult(t, e);
              return (
                (0, u.VS)(this.getCurrentResult(), n) ||
                  ((this.#m = n),
                  (this.#B = this.options),
                  (this.#x = this.#E.state)),
                n
              );
            }
            getCurrentResult() {
              return this.#m;
            }
            trackResult(e, t) {
              let n = {};
              return (
                Object.keys(e).forEach((r) => {
                  Object.defineProperty(n, r, {
                    configurable: !1,
                    enumerable: !0,
                    get: () => (this.trackProp(r), t?.(r), e[r]),
                  });
                }),
                n
              );
            }
            trackProp(e) {
              this.#R.add(e);
            }
            getCurrentQuery() {
              return this.#E;
            }
            refetch({ ...e } = {}) {
              return this.fetch({ ...e });
            }
            fetchOptimistic(e) {
              let t = this.#p.defaultQueryOptions(e),
                n = this.#p.getQueryCache().build(this.#p, t);
              return n.fetch().then(() => this.createResult(n, t));
            }
            fetch(e) {
              return this.#N({
                ...e,
                cancelRefetch: e.cancelRefetch ?? !0,
              }).then(() => (this.updateResult(), this.#m));
            }
            #N(e) {
              this.#U();
              let t = this.#E.fetch(this.options, e);
              return e?.throwOnError || (t = t.catch(u.ZT)), t;
            }
            #D() {
              this.#L();
              let e = (0, u.KC)(this.options.staleTime, this.#E);
              if (u.sk || this.#m.isStale || !(0, u.PN)(e)) return;
              let t = (0, u.Kp)(this.#m.dataUpdatedAt, e);
              this.#T = setTimeout(() => {
                this.#m.isStale || this.updateResult();
              }, t + 1);
            }
            #_() {
              return (
                ("function" == typeof this.options.refetchInterval
                  ? this.options.refetchInterval(this.#E)
                  : this.options.refetchInterval) ?? !1
              );
            }
            #j(e) {
              this.#F(),
                (this.#k = e),
                !u.sk &&
                  !1 !== (0, u.Nc)(this.options.enabled, this.#E) &&
                  (0, u.PN)(this.#k) &&
                  0 !== this.#k &&
                  (this.#O = setInterval(() => {
                    (this.options.refetchIntervalInBackground ||
                      i.j.isFocused()) &&
                      this.#N();
                  }, this.#k));
            }
            #M() {
              this.#D(), this.#j(this.#_());
            }
            #L() {
              this.#T && (clearTimeout(this.#T), (this.#T = void 0));
            }
            #F() {
              this.#O && (clearInterval(this.#O), (this.#O = void 0));
            }
            createResult(e, t) {
              let n;
              let r = this.#E,
                i = this.options,
                o = this.#m,
                a = this.#x,
                l = this.#B,
                d = e !== r ? e.state : this.#C,
                { state: m } = e,
                g = { ...m },
                y = !1;
              if (t._optimisticResults) {
                let n = this.hasListeners(),
                  o = !n && f(e, t),
                  a = n && h(e, r, t, i);
                (o || a) && (g = { ...g, ...(0, s.z)(m.data, e.options) }),
                  "isRestoring" === t._optimisticResults &&
                    (g.fetchStatus = "idle");
              }
              let { error: b, errorUpdatedAt: w, status: v } = g;
              if (t.select && void 0 !== g.data) {
                if (o && g.data === a?.data && t.select === this.#I)
                  n = this.#S;
                else
                  try {
                    (this.#I = t.select),
                      (n = t.select(g.data)),
                      (n = (0, u.oE)(o?.data, n, t)),
                      (this.#S = n),
                      (this.#v = null);
                  } catch (e) {
                    this.#v = e;
                  }
              } else n = g.data;
              if (
                void 0 !== t.placeholderData &&
                void 0 === n &&
                "pending" === v
              ) {
                let e;
                if (
                  o?.isPlaceholderData &&
                  t.placeholderData === l?.placeholderData
                )
                  e = o.data;
                else if (
                  ((e =
                    "function" == typeof t.placeholderData
                      ? t.placeholderData(this.#P?.state.data, this.#P)
                      : t.placeholderData),
                  t.select && void 0 !== e)
                )
                  try {
                    (e = t.select(e)), (this.#v = null);
                  } catch (e) {
                    this.#v = e;
                  }
                void 0 !== e &&
                  ((v = "success"), (n = (0, u.oE)(o?.data, e, t)), (y = !0));
              }
              this.#v &&
                ((b = this.#v), (n = this.#S), (w = Date.now()), (v = "error"));
              let A = "fetching" === g.fetchStatus,
                E = "pending" === v,
                C = "error" === v,
                x = E && A,
                B = void 0 !== n,
                I = {
                  status: v,
                  fetchStatus: g.fetchStatus,
                  isPending: E,
                  isSuccess: "success" === v,
                  isError: C,
                  isInitialLoading: x,
                  isLoading: x,
                  data: n,
                  dataUpdatedAt: g.dataUpdatedAt,
                  error: b,
                  errorUpdatedAt: w,
                  failureCount: g.fetchFailureCount,
                  failureReason: g.fetchFailureReason,
                  errorUpdateCount: g.errorUpdateCount,
                  isFetched: g.dataUpdateCount > 0 || g.errorUpdateCount > 0,
                  isFetchedAfterMount:
                    g.dataUpdateCount > d.dataUpdateCount ||
                    g.errorUpdateCount > d.errorUpdateCount,
                  isFetching: A,
                  isRefetching: A && !E,
                  isLoadingError: C && !B,
                  isPaused: "paused" === g.fetchStatus,
                  isPlaceholderData: y,
                  isRefetchError: C && B,
                  isStale: p(e, t),
                  refetch: this.refetch,
                  promise: this.#A,
                };
              if (this.options.experimental_prefetchInRender) {
                let t = (e) => {
                    "error" === I.status
                      ? e.reject(I.error)
                      : void 0 !== I.data && e.resolve(I.data);
                  },
                  n = () => {
                    t((this.#A = I.promise = (0, c.O)()));
                  },
                  i = this.#A;
                switch (i.status) {
                  case "pending":
                    e.queryHash === r.queryHash && t(i);
                    break;
                  case "fulfilled":
                    ("error" === I.status || I.data !== i.value) && n();
                    break;
                  case "rejected":
                    ("error" !== I.status || I.error !== i.reason) && n();
                }
              }
              return I;
            }
            updateResult(e) {
              let t = this.#m,
                n = this.createResult(this.#E, this.options);
              if (
                ((this.#x = this.#E.state),
                (this.#B = this.options),
                void 0 !== this.#x.data && (this.#P = this.#E),
                (0, u.VS)(n, t))
              )
                return;
              this.#m = n;
              let r = {};
              e?.listeners !== !1 &&
                (() => {
                  if (!t) return !0;
                  let { notifyOnChangeProps: e } = this.options,
                    n = "function" == typeof e ? e() : e;
                  if ("all" === n || (!n && !this.#R.size)) return !0;
                  let r = new Set(n ?? this.#R);
                  return (
                    this.options.throwOnError && r.add("error"),
                    Object.keys(this.#m).some(
                      (e) => this.#m[e] !== t[e] && r.has(e)
                    )
                  );
                })() &&
                (r.listeners = !0),
                this.#w({ ...r, ...e });
            }
            #U() {
              let e = this.#p.getQueryCache().build(this.#p, this.options);
              if (e === this.#E) return;
              let t = this.#E;
              (this.#E = e),
                (this.#C = e.state),
                this.hasListeners() &&
                  (t?.removeObserver(this), e.addObserver(this));
            }
            onQueryUpdate() {
              this.updateResult(), this.hasListeners() && this.#M();
            }
            #w(e) {
              o.V.batch(() => {
                e.listeners &&
                  this.listeners.forEach((e) => {
                    e(this.#m);
                  }),
                  this.#p
                    .getQueryCache()
                    .notify({ query: this.#E, type: "observerResultsUpdated" });
              });
            }
          };
        function f(e, t) {
          return (
            (!1 !== (0, u.Nc)(t.enabled, e) &&
              void 0 === e.state.data &&
              !("error" === e.state.status && !1 === t.retryOnMount)) ||
            (void 0 !== e.state.data && d(e, t, t.refetchOnMount))
          );
        }
        function d(e, t, n) {
          if (!1 !== (0, u.Nc)(t.enabled, e)) {
            let r = "function" == typeof n ? n(e) : n;
            return "always" === r || (!1 !== r && p(e, t));
          }
          return !1;
        }
        function h(e, t, n, r) {
          return (
            (e !== t || !1 === (0, u.Nc)(r.enabled, e)) &&
            (!n.suspense || "error" !== e.state.status) &&
            p(e, n)
          );
        }
        function p(e, t) {
          return (
            !1 !== (0, u.Nc)(t.enabled, e) &&
            e.isStaleByTime((0, u.KC)(t.staleTime, e))
          );
        }
        var m = n(2265),
          g = n(29827);
        n(57437);
        var y = m.createContext(
            ((r = !1),
            {
              clearReset: () => {
                r = !1;
              },
              reset: () => {
                r = !0;
              },
              isReset: () => r,
            })
          ),
          b = () => m.useContext(y),
          w = n(51172),
          v = (e, t) => {
            (e.suspense || e.throwOnError || e.experimental_prefetchInRender) &&
              !t.isReset() &&
              (e.retryOnMount = !1);
          },
          A = (e) => {
            m.useEffect(() => {
              e.clearReset();
            }, [e]);
          },
          E = (e) => {
            let {
              result: t,
              errorResetBoundary: n,
              throwOnError: r,
              query: i,
            } = e;
            return (
              t.isError &&
              !n.isReset() &&
              !t.isFetching &&
              i &&
              (0, w.L)(r, [t.error, i])
            );
          },
          C = m.createContext(!1),
          x = () => m.useContext(C);
        C.Provider;
        var B = (e) => {
            e.suspense &&
              (void 0 === e.staleTime && (e.staleTime = 1e3),
              "number" == typeof e.gcTime &&
                (e.gcTime = Math.max(e.gcTime, 1e3)));
          },
          I = (e, t) => e.isLoading && e.isFetching && !t,
          S = (e, t) => e?.suspense && t.isPending,
          P = (e, t, n) =>
            t.fetchOptimistic(e).catch(() => {
              n.clearReset();
            });
        function T(e, t) {
          return (function (e, t, n) {
            var r, i, s, a, c;
            let l = (0, g.NL)(n),
              f = x(),
              d = b(),
              h = l.defaultQueryOptions(e);
            null === (i = l.getDefaultOptions().queries) ||
              void 0 === i ||
              null === (r = i._experimental_beforeQuery) ||
              void 0 === r ||
              r.call(i, h),
              (h._optimisticResults = f ? "isRestoring" : "optimistic"),
              B(h),
              v(h, d),
              A(d);
            let p = !l.getQueryCache().get(h.queryHash),
              [y] = m.useState(() => new t(l, h)),
              C = y.getOptimisticResult(h);
            if (
              (m.useSyncExternalStore(
                m.useCallback(
                  (e) => {
                    let t = f ? () => void 0 : y.subscribe(o.V.batchCalls(e));
                    return y.updateResult(), t;
                  },
                  [y, f]
                ),
                () => y.getCurrentResult(),
                () => y.getCurrentResult()
              ),
              m.useEffect(() => {
                y.setOptions(h, { listeners: !1 });
              }, [h, y]),
              S(h, C))
            )
              throw P(h, y, d);
            if (
              E({
                result: C,
                errorResetBoundary: d,
                throwOnError: h.throwOnError,
                query: l.getQueryCache().get(h.queryHash),
              })
            )
              throw C.error;
            if (
              (null === (a = l.getDefaultOptions().queries) ||
                void 0 === a ||
                null === (s = a._experimental_afterQuery) ||
                void 0 === s ||
                s.call(a, h, C),
              h.experimental_prefetchInRender && !u.sk && I(C, f))
            ) {
              let e = p
                ? P(h, y, d)
                : null === (c = l.getQueryCache().get(h.queryHash)) ||
                  void 0 === c
                ? void 0
                : c.promise;
              null == e ||
                e.catch(w.Z).finally(() => {
                  y.updateResult();
                });
            }
            return h.notifyOnChangeProps ? C : y.trackResult(C);
          })(e, l, t);
        }
      },
      51172: function (e, t, n) {
        "use strict";
        function r(e, t) {
          return "function" == typeof e ? e(...t) : !!e;
        }
        function i() {}
        n.d(t, {
          L: function () {
            return r;
          },
          Z: function () {
            return i;
          },
        });
      },
      25764: function (e, t, n) {
        "use strict";
        n.d(t, {
          O: function () {
            return h;
          },
        });
        var r = n(53738),
          i = n(17454),
          o = n(14478),
          s = n(13102),
          a = n(31669),
          c = n(77014),
          u = n(59455),
          l = n(49287),
          f = n(39504),
          d = n(72932);
        function h(e = {}) {
          let t, p, m, g, y, b, w, v;
          return (0, r.K)((r) => ({
            id: "metaMaskSDK",
            name: "MetaMask",
            rdns: "io.metamask",
            type: h.type,
            async setup() {
              let e = await this.getProvider();
              e?.on &&
                (b || ((b = this.onConnect.bind(this)), e.on("connect", b)),
                g ||
                  ((g = this.onAccountsChanged.bind(this)),
                  e.on("accountsChanged", g)));
            },
            async connect({ chainId: n, isReconnecting: r } = {}) {
              let i = await this.getProvider();
              w || ((w = this.onDisplayUri), i.on("display_uri", w));
              let o = [];
              r && (o = await this.getAccounts().catch(() => []));
              try {
                let r, s;
                o?.length ||
                  (e.connectAndSign || e.connectWith
                    ? (e.connectAndSign
                        ? (r = await t.connectAndSign({
                            msg: e.connectAndSign,
                          }))
                        : e.connectWith &&
                          (s = await t.connectWith({
                            method: e.connectWith.method,
                            params: e.connectWith.params,
                          })),
                      (o = await this.getAccounts()))
                    : (o = (await t.connect()).map((e) => (0, a.K)(e))));
                let u = await this.getChainId();
                if (n && u !== n) {
                  let e = await this.switchChain({ chainId: n }).catch((e) => {
                    if (e.code === c.ab.code) throw e;
                    return { id: u };
                  });
                  u = e?.id ?? u;
                }
                return (
                  w && (i.removeListener("display_uri", w), (w = void 0)),
                  r
                    ? i.emit("connectAndSign", {
                        accounts: o,
                        chainId: u,
                        signResponse: r,
                      })
                    : s &&
                      i.emit("connectWith", {
                        accounts: o,
                        chainId: u,
                        connectWithResponse: s,
                      }),
                  b && (i.removeListener("connect", b), (b = void 0)),
                  g ||
                    ((g = this.onAccountsChanged.bind(this)),
                    i.on("accountsChanged", g)),
                  y ||
                    ((y = this.onChainChanged.bind(this)),
                    i.on("chainChanged", y)),
                  v ||
                    ((v = this.onDisconnect.bind(this)), i.on("disconnect", v)),
                  { accounts: o, chainId: u }
                );
              } catch (e) {
                if (e.code === c.ab.code) throw new c.ab(e);
                if (e.code === c.pT.code) throw new c.pT(e);
                throw e;
              }
            },
            async disconnect() {
              let e = await this.getProvider();
              y && (e.removeListener("chainChanged", y), (y = void 0)),
                v && (e.removeListener("disconnect", v), (v = void 0)),
                b || ((b = this.onConnect.bind(this)), e.on("connect", b)),
                await t.terminate();
            },
            async getAccounts() {
              let e = await this.getProvider();
              return (await e.request({ method: "eth_accounts" })).map((e) =>
                (0, a.K)(e)
              );
            },
            async getChainId() {
              let e = await this.getProvider();
              return Number(
                e.getChainId() || (await e?.request({ method: "eth_chainId" }))
              );
            },
            async getProvider() {
              async function s() {
                let s = await (async () => {
                    let { default: e } = await n
                      .e(8497)
                      .then(n.t.bind(n, 84416, 19));
                    return "function" != typeof e &&
                      "function" == typeof e.default
                      ? e.default
                      : e;
                  })(),
                  a = {};
                for (let e of r.chains)
                  a[(0, u.eC)(e.id)] = i.N({
                    chain: e,
                    transports: r.transports,
                  })?.[0];
                t = new s({
                  _source: "wagmi",
                  forceDeleteProvider: !1,
                  forceInjectProvider: !1,
                  injectProvider: !1,
                  ...e,
                  readonlyRPCMap: a,
                  dappMetadata:
                    e.dappMetadata ??
                    ("undefined" != typeof window
                      ? { url: window.location.origin }
                      : { name: "wagmi", url: "https://wagmi.sh" }),
                  useDeeplink: e.useDeeplink ?? !0,
                });
                let c = await t.init(),
                  l = c?.activeProvider ? c.activeProvider : t.getProvider();
                if (!l) throw new o.M();
                return l;
              }
              return p || (m || (m = s()), (p = await m)), p;
            },
            async isAuthorized() {
              try {
                return !!(
                  await (0, l.J)(
                    () => (0, f.F)(() => this.getAccounts(), { timeout: 200 }),
                    { delay: 201, retryCount: 3 }
                  )
                ).length;
              } catch {
                return !1;
              }
            },
            async switchChain({ addEthereumChainParameter: e, chainId: t }) {
              let n = await this.getProvider(),
                i = r.chains.find((e) => e.id === t);
              if (!i) throw new c.x3(new s.X4());
              try {
                return (
                  await Promise.all([
                    n
                      .request({
                        method: "wallet_switchEthereumChain",
                        params: [{ chainId: (0, u.eC)(t) }],
                      })
                      .then(async () => {
                        (await this.getChainId()) === t &&
                          r.emitter.emit("change", { chainId: t });
                      }),
                    new Promise((e) => {
                      let n = (i) => {
                        "chainId" in i &&
                          i.chainId === t &&
                          (r.emitter.off("change", n), e());
                      };
                      r.emitter.on("change", n);
                    }),
                  ]),
                  i
                );
              } catch (r) {
                if (4902 === r.code || r?.data?.originalError?.code === 4902)
                  try {
                    let r, o;
                    let { default: s, ...a } = i.blockExplorers ?? {};
                    e?.blockExplorerUrls
                      ? (r = e.blockExplorerUrls)
                      : s &&
                        (r = [s.url, ...Object.values(a).map((e) => e.url)]),
                      (o = e?.rpcUrls?.length
                        ? e.rpcUrls
                        : [i.rpcUrls.default?.http[0] ?? ""]);
                    let l = {
                      blockExplorerUrls: r,
                      chainId: (0, u.eC)(t),
                      chainName: e?.chainName ?? i.name,
                      iconUrls: e?.iconUrls,
                      nativeCurrency: e?.nativeCurrency ?? i.nativeCurrency,
                      rpcUrls: o,
                    };
                    if (
                      (await n.request({
                        method: "wallet_addEthereumChain",
                        params: [l],
                      }),
                      (0, d.ly)(await n.request({ method: "eth_chainId" })) !==
                        t)
                    )
                      throw new c.ab(
                        Error("User rejected switch after adding network.")
                      );
                    return i;
                  } catch (e) {
                    throw new c.ab(e);
                  }
                if (r.code === c.ab.code) throw new c.ab(r);
                throw new c.x3(r);
              }
            },
            async onAccountsChanged(e) {
              if (0 === e.length) t.isExtensionActive() && this.onDisconnect();
              else if (r.emitter.listenerCount("connect")) {
                let e = (await this.getChainId()).toString();
                this.onConnect({ chainId: e });
              } else
                r.emitter.emit("change", {
                  accounts: e.map((e) => (0, a.K)(e)),
                });
            },
            onChainChanged(e) {
              let t = Number(e);
              r.emitter.emit("change", { chainId: t });
            },
            async onConnect(e) {
              let t = await this.getAccounts();
              if (0 === t.length) return;
              let n = Number(e.chainId);
              r.emitter.emit("connect", { accounts: t, chainId: n });
              let i = await this.getProvider();
              b && (i.removeListener("connect", b), (b = void 0)),
                g ||
                  ((g = this.onAccountsChanged.bind(this)),
                  i.on("accountsChanged", g)),
                y ||
                  ((y = this.onChainChanged.bind(this)),
                  i.on("chainChanged", y)),
                v ||
                  ((v = this.onDisconnect.bind(this)), i.on("disconnect", v));
            },
            async onDisconnect(e) {
              let t = await this.getProvider();
              (e &&
                1013 === e.code &&
                t &&
                (await this.getAccounts()).length) ||
                (r.emitter.emit("disconnect"),
                y && (t.removeListener("chainChanged", y), (y = void 0)),
                v && (t.removeListener("disconnect", v), (v = void 0)),
                b || ((b = this.onConnect.bind(this)), t.on("connect", b)));
            },
            onDisplayUri(e) {
              r.emitter.emit("message", { type: "display_uri", data: e });
            },
          }));
        }
        h.type = "metaMask";
      },
      24380: function (e, t, n) {
        "use strict";
        function r(e) {
          let t = e.state.current,
            n = e.state.connections.get(t),
            r = n?.accounts,
            i = r?.[0],
            o = e.chains.find((e) => e.id === n?.chainId),
            s = e.state.status;
          switch (s) {
            case "connected":
              return {
                address: i,
                addresses: r,
                chain: o,
                chainId: n?.chainId,
                connector: n?.connector,
                isConnected: !0,
                isConnecting: !1,
                isDisconnected: !1,
                isReconnecting: !1,
                status: s,
              };
            case "reconnecting":
              return {
                address: i,
                addresses: r,
                chain: o,
                chainId: n?.chainId,
                connector: n?.connector,
                isConnected: !!i,
                isConnecting: !1,
                isDisconnected: !1,
                isReconnecting: !0,
                status: s,
              };
            case "connecting":
              return {
                address: i,
                addresses: r,
                chain: o,
                chainId: n?.chainId,
                connector: n?.connector,
                isConnected: !1,
                isConnecting: !0,
                isDisconnected: !1,
                isReconnecting: !1,
                status: s,
              };
            case "disconnected":
              return {
                address: void 0,
                addresses: void 0,
                chain: void 0,
                chainId: void 0,
                connector: void 0,
                isConnected: !1,
                isConnecting: !1,
                isDisconnected: !0,
                isReconnecting: !1,
                status: s,
              };
          }
        }
        n.d(t, {
          D: function () {
            return r;
          },
        });
      },
      18849: function (e, t, n) {
        "use strict";
        n.d(t, {
          e: function () {
            return c;
          },
        });
        var r = n(82538),
          i = n(24250),
          o = n(19775),
          s = n(31669),
          a = n(13102);
        async function c(e, t = {}) {
          let n;
          if (t.connector) {
            let { connector: r } = t;
            if (
              "reconnecting" === e.state.status &&
              !r.getAccounts &&
              !r.getChainId
            )
              throw new a.$S({ connector: r });
            let [i, o] = await Promise.all([r.getAccounts(), r.getChainId()]);
            n = { accounts: i, chainId: o, connector: r };
          } else n = e.state.connections.get(e.state.current);
          if (!n) throw new a.aH();
          let c = t.chainId ?? n.chainId,
            u = await n.connector.getChainId();
          if (u !== n.chainId)
            throw new a.XZ({
              connectionChainId: n.chainId,
              connectorChainId: u,
            });
          let l = n.connector;
          if (l.getClient) return l.getClient({ chainId: c });
          let f = (0, o.T)(t.account ?? n.accounts[0]);
          if (
            ((f.address = (0, s.K)(f.address)),
            t.account &&
              !n.accounts.some(
                (e) => e.toLowerCase() === f.address.toLowerCase()
              ))
          )
            throw new a.JK({ address: f.address, connector: l });
          let d = e.chains.find((e) => e.id === c),
            h = await n.connector.getProvider({ chainId: c });
          return (0, r.e)({
            account: f,
            chain: d,
            name: "Connector Client",
            transport: (e) =>
              (function (e, t = {}) {
                let {
                  key: n = "custom",
                  name: r = "Custom Provider",
                  retryDelay: o,
                } = t;
                return ({ retryCount: s }) =>
                  (0, i.q)({
                    key: n,
                    name: r,
                    request: e.request.bind(e),
                    retryCount: t.retryCount ?? s,
                    retryDelay: o,
                    type: "custom",
                  });
              })(h)({ ...e, retryCount: 0 }),
          });
        }
      },
      37691: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return o;
          },
        });
        var r = n(28766),
          i = n(44199);
        function o(e, t) {
          let { chainId: n, ...o } = t,
            s = e.getClient({ chainId: n });
          return (0, i.s)(s, r.L, "readContract")(o);
        }
      },
      75079: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return c;
          },
        });
        var r = n(20010),
          i = n(94797),
          o = n(44199);
        async function s(e, t) {
          let { allowFailure: n = !0, chainId: r, contracts: s, ...a } = t,
            c = e.getClient({ chainId: r });
          return (0, o.s)(
            c,
            i.A,
            "multicall"
          )({ allowFailure: n, contracts: s, ...a });
        }
        var a = n(37691);
        async function c(e, t) {
          let { allowFailure: n = !0, blockNumber: i, blockTag: o, ...c } = t,
            u = t.contracts;
          try {
            let t = {};
            for (let [n, r] of u.entries()) {
              let i = r.chainId ?? e.state.chainId;
              t[i] || (t[i] = []), t[i]?.push({ contract: r, index: n });
            }
            let r = (
                await Promise.all(
                  Object.entries(t).map(([t, r]) =>
                    s(e, {
                      ...c,
                      allowFailure: n,
                      blockNumber: i,
                      blockTag: o,
                      chainId: Number.parseInt(t),
                      contracts: r.map(({ contract: e }) => e),
                    })
                  )
                )
              ).flat(),
              a = Object.values(t).flatMap((e) => e.map(({ index: e }) => e));
            return r.reduce((e, t, n) => (e && (e[a[n]] = t), e), []);
          } catch (s) {
            if (s instanceof r.uq) throw s;
            let t = () =>
              u.map((t) => (0, a.L)(e, { ...t, blockNumber: i, blockTag: o }));
            if (n)
              return (await Promise.allSettled(t())).map((e) =>
                "fulfilled" === e.status
                  ? { result: e.value, status: "success" }
                  : { error: e.reason, result: void 0, status: "failure" }
              );
            return await Promise.all(t());
          }
        }
      },
      31327: function (e, t, n) {
        "use strict";
        n.d(t, {
          l: function () {
            return u;
          },
        });
        var r = n(19775),
          i = n(65704),
          o = n(59455);
        async function s(e, { account: t = e.account, message: n }) {
          if (!t)
            throw new i.o({ docsPath: "/docs/actions/wallet/signMessage" });
          let s = (0, r.T)(t);
          if (s.signMessage) return s.signMessage({ message: n });
          let a =
            "string" == typeof n
              ? (0, o.$G)(n)
              : n.raw instanceof Uint8Array
              ? (0, o.NC)(n.raw)
              : n.raw;
          return e.request(
            { method: "personal_sign", params: [a, s.address] },
            { retryCount: 0 }
          );
        }
        var a = n(44199),
          c = n(18849);
        async function u(e, t) {
          let n;
          let { account: r, connector: i, ...o } = t;
          return (
            (n =
              "object" == typeof r && "local" === r.type
                ? e.getClient()
                : await (0, c.e)(e, { account: r, connector: i })),
            (0, a.s)(
              n,
              s,
              "signMessage"
            )({ ...o, ...(r ? { account: r } : {}) })
          );
        }
      },
      55911: function (e, t, n) {
        "use strict";
        n.d(t, {
          u: function () {
            return o;
          },
        });
        var r = n(52123),
          i = n(24380);
        function o(e, t) {
          let { onChange: n } = t;
          return e.subscribe(() => (0, i.D)(e), n, {
            equalityFn(e, t) {
              let { connector: n, ...i } = e,
                { connector: o, ...s } = t;
              return (0, r.v)(i, s) && n?.id === o?.id && n?.uid === o?.uid;
            },
          });
        }
      },
      53738: function (e, t, n) {
        "use strict";
        function r(e) {
          return e;
        }
        n.d(t, {
          K: function () {
            return r;
          },
        });
      },
      81467: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return d;
          },
        });
        var r = n(31669),
          i = n(77014),
          o = n(39504),
          s = n(49287),
          a = n(59455),
          c = n(13102),
          u = n(14478),
          l = n(53738);
        let f = /(rabby|trustwallet)/;
        function d(e = {}) {
          let t, n, m, g;
          let { shimDisconnect: y = !0, unstable_shimAsyncInject: b } = e;
          function w() {
            let t = e.target;
            if ("function" == typeof t) {
              let e = t();
              if (e) return e;
            }
            return "object" == typeof t
              ? t
              : "string" == typeof t
              ? {
                  ...(h[t] ?? {
                    id: t,
                    name: `${t[0].toUpperCase()}${t.slice(1)}`,
                    provider: `is${t[0].toUpperCase()}${t.slice(1)}`,
                  }),
                }
              : {
                  id: "injected",
                  name: "Injected",
                  provider: (e) => e?.ethereum,
                };
          }
          return (0, l.K)((l) => ({
            get icon() {
              return w().icon;
            },
            get id() {
              return w().id;
            },
            get name() {
              return w().name;
            },
            get supportsSimulation() {
              return f.test(this.id.toLowerCase());
            },
            type: d.type,
            async setup() {
              let n = await this.getProvider();
              n?.on &&
                e.target &&
                (m || ((m = this.onConnect.bind(this)), n.on("connect", m)),
                t ||
                  ((t = this.onAccountsChanged.bind(this)),
                  n.on("accountsChanged", t)));
            },
            async connect({ chainId: o, isReconnecting: s } = {}) {
              let a = await this.getProvider();
              if (!a) throw new u.M();
              let c = [];
              if (s) c = await this.getAccounts().catch(() => []);
              else if (y)
                try {
                  let e = await a.request({
                    method: "wallet_requestPermissions",
                    params: [{ eth_accounts: {} }],
                  });
                  (c = e[0]?.caveats?.[0]?.value?.map((e) => r.K(e))).length >
                    0 && (c = await this.getAccounts());
                } catch (e) {
                  if (e.code === i.ab.code) throw new i.ab(e);
                  if (e.code === i.pT.code) throw e;
                }
              try {
                c?.length ||
                  s ||
                  (c = (await a.request({ method: "eth_requestAccounts" })).map(
                    (e) => (0, r.K)(e)
                  )),
                  m && (a.removeListener("connect", m), (m = void 0)),
                  t ||
                    ((t = this.onAccountsChanged.bind(this)),
                    a.on("accountsChanged", t)),
                  n ||
                    ((n = this.onChainChanged.bind(this)),
                    a.on("chainChanged", n)),
                  g ||
                    ((g = this.onDisconnect.bind(this)), a.on("disconnect", g));
                let u = await this.getChainId();
                if (o && u !== o) {
                  let e = await this.switchChain({ chainId: o }).catch((e) => {
                    if (e.code === i.ab.code) throw e;
                    return { id: u };
                  });
                  u = e?.id ?? u;
                }
                return (
                  y && (await l.storage?.removeItem(`${this.id}.disconnected`)),
                  e.target ||
                    (await l.storage?.setItem("injected.connected", !0)),
                  { accounts: c, chainId: u }
                );
              } catch (e) {
                if (e.code === i.ab.code) throw new i.ab(e);
                if (e.code === i.pT.code) throw new i.pT(e);
                throw e;
              }
            },
            async disconnect() {
              let t = await this.getProvider();
              if (!t) throw new u.M();
              n && (t.removeListener("chainChanged", n), (n = void 0)),
                g && (t.removeListener("disconnect", g), (g = void 0)),
                m || ((m = this.onConnect.bind(this)), t.on("connect", m));
              try {
                await (0, o.F)(
                  () =>
                    t.request({
                      method: "wallet_revokePermissions",
                      params: [{ eth_accounts: {} }],
                    }),
                  { timeout: 100 }
                );
              } catch {}
              y && (await l.storage?.setItem(`${this.id}.disconnected`, !0)),
                e.target || (await l.storage?.removeItem("injected.connected"));
            },
            async getAccounts() {
              let e = await this.getProvider();
              if (!e) throw new u.M();
              return (await e.request({ method: "eth_accounts" })).map((e) =>
                (0, r.K)(e)
              );
            },
            async getChainId() {
              let e = await this.getProvider();
              if (!e) throw new u.M();
              return Number(await e.request({ method: "eth_chainId" }));
            },
            async getProvider() {
              let e;
              if ("undefined" == typeof window) return;
              let t = w();
              return (
                (e =
                  "function" == typeof t.provider
                    ? t.provider(window)
                    : "string" == typeof t.provider
                    ? p(window, t.provider)
                    : t.provider) &&
                  !e.removeListener &&
                  ("off" in e && "function" == typeof e.off
                    ? (e.removeListener = e.off)
                    : (e.removeListener = () => {})),
                e
              );
            },
            async isAuthorized() {
              try {
                if (
                  (y &&
                    (await l.storage?.getItem(`${this.id}.disconnected`))) ||
                  (!e.target &&
                    !(await l.storage?.getItem("injected.connected")))
                )
                  return !1;
                if (!(await this.getProvider())) {
                  if (void 0 !== b && !1 !== b) {
                    let e = async () => (
                        "undefined" != typeof window &&
                          window.removeEventListener("ethereum#initialized", e),
                        !!(await this.getProvider())
                      ),
                      t = "number" == typeof b ? b : 1e3;
                    if (
                      await Promise.race([
                        ...("undefined" != typeof window
                          ? [
                              new Promise((t) =>
                                window.addEventListener(
                                  "ethereum#initialized",
                                  () => t(e()),
                                  { once: !0 }
                                )
                              ),
                            ]
                          : []),
                        new Promise((n) => setTimeout(() => n(e()), t)),
                      ])
                    )
                      return !0;
                  }
                  throw new u.M();
                }
                return !!(await (0, s.J)(() => this.getAccounts())).length;
              } catch {
                return !1;
              }
            },
            async switchChain({ addEthereumChainParameter: e, chainId: t }) {
              let n = await this.getProvider();
              if (!n) throw new u.M();
              let r = l.chains.find((e) => e.id === t);
              if (!r) throw new i.x3(new c.X4());
              let o = new Promise((e) => {
                let n = (r) => {
                  "chainId" in r &&
                    r.chainId === t &&
                    (l.emitter.off("change", n), e());
                };
                l.emitter.on("change", n);
              });
              try {
                return (
                  await Promise.all([
                    n
                      .request({
                        method: "wallet_switchEthereumChain",
                        params: [{ chainId: (0, a.eC)(t) }],
                      })
                      .then(async () => {
                        (await this.getChainId()) === t &&
                          l.emitter.emit("change", { chainId: t });
                      }),
                    o,
                  ]),
                  r
                );
              } catch (s) {
                if (4902 === s.code || s?.data?.originalError?.code === 4902)
                  try {
                    let s, c;
                    let { default: u, ...f } = r.blockExplorers ?? {};
                    e?.blockExplorerUrls
                      ? (s = e.blockExplorerUrls)
                      : u &&
                        (s = [u.url, ...Object.values(f).map((e) => e.url)]),
                      (c = e?.rpcUrls?.length
                        ? e.rpcUrls
                        : [r.rpcUrls.default?.http[0] ?? ""]);
                    let d = {
                      blockExplorerUrls: s,
                      chainId: (0, a.eC)(t),
                      chainName: e?.chainName ?? r.name,
                      iconUrls: e?.iconUrls,
                      nativeCurrency: e?.nativeCurrency ?? r.nativeCurrency,
                      rpcUrls: c,
                    };
                    return (
                      await Promise.all([
                        n
                          .request({
                            method: "wallet_addEthereumChain",
                            params: [d],
                          })
                          .then(async () => {
                            if ((await this.getChainId()) === t)
                              l.emitter.emit("change", { chainId: t });
                            else
                              throw new i.ab(
                                Error(
                                  "User rejected switch after adding network."
                                )
                              );
                          }),
                        o,
                      ]),
                      r
                    );
                  } catch (e) {
                    throw new i.ab(e);
                  }
                if (s.code === i.ab.code) throw new i.ab(s);
                throw new i.x3(s);
              }
            },
            async onAccountsChanged(e) {
              if (0 === e.length) this.onDisconnect();
              else if (l.emitter.listenerCount("connect")) {
                let e = (await this.getChainId()).toString();
                this.onConnect({ chainId: e }),
                  y && (await l.storage?.removeItem(`${this.id}.disconnected`));
              } else
                l.emitter.emit("change", {
                  accounts: e.map((e) => (0, r.K)(e)),
                });
            },
            onChainChanged(e) {
              let t = Number(e);
              l.emitter.emit("change", { chainId: t });
            },
            async onConnect(e) {
              let r = await this.getAccounts();
              if (0 === r.length) return;
              let i = Number(e.chainId);
              l.emitter.emit("connect", { accounts: r, chainId: i });
              let o = await this.getProvider();
              o &&
                (m && (o.removeListener("connect", m), (m = void 0)),
                t ||
                  ((t = this.onAccountsChanged.bind(this)),
                  o.on("accountsChanged", t)),
                n ||
                  ((n = this.onChainChanged.bind(this)),
                  o.on("chainChanged", n)),
                g ||
                  ((g = this.onDisconnect.bind(this)), o.on("disconnect", g)));
            },
            async onDisconnect(e) {
              let t = await this.getProvider();
              (e &&
                1013 === e.code &&
                t &&
                (await this.getAccounts()).length) ||
                (l.emitter.emit("disconnect"),
                t &&
                  (n && (t.removeListener("chainChanged", n), (n = void 0)),
                  g && (t.removeListener("disconnect", g), (g = void 0)),
                  m || ((m = this.onConnect.bind(this)), t.on("connect", m))));
            },
          }));
        }
        d.type = "injected";
        let h = {
          coinbaseWallet: {
            id: "coinbaseWallet",
            name: "Coinbase Wallet",
            provider: (e) =>
              e?.coinbaseWalletExtension
                ? e.coinbaseWalletExtension
                : p(e, "isCoinbaseWallet"),
          },
          metaMask: {
            id: "metaMask",
            name: "MetaMask",
            provider: (e) =>
              p(e, (e) => {
                if (
                  !e.isMetaMask ||
                  (e.isBraveWallet && !e._events && !e._state)
                )
                  return !1;
                for (let t of [
                  "isApexWallet",
                  "isAvalanche",
                  "isBitKeep",
                  "isBlockWallet",
                  "isKuCoinWallet",
                  "isMathWallet",
                  "isOkxWallet",
                  "isOKExWallet",
                  "isOneInchIOSWallet",
                  "isOneInchAndroidWallet",
                  "isOpera",
                  "isPortal",
                  "isRabby",
                  "isTokenPocket",
                  "isTokenary",
                  "isUniswapWallet",
                  "isZerion",
                ])
                  if (e[t]) return !1;
                return !0;
              }),
          },
          phantom: {
            id: "phantom",
            name: "Phantom",
            provider: (e) =>
              e?.phantom?.ethereum ? e.phantom?.ethereum : p(e, "isPhantom"),
          },
        };
        function p(e, t) {
          function n(e) {
            return "function" == typeof t ? t(e) : "string" != typeof t || e[t];
          }
          let r = e.ethereum;
          return r?.providers
            ? r.providers.find((e) => n(e))
            : r && n(r)
            ? r
            : void 0;
        }
      },
      8778: function (e, t, n) {
        "use strict";
        let r;
        n.d(t, {
          _: function () {
            return p;
          },
        });
        var i = n(82538),
          o = n(89134),
          s = n(90808),
          a = n(81467),
          c = n(77625);
        class u {
          constructor(e) {
            Object.defineProperty(this, "uid", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: e,
            }),
              Object.defineProperty(this, "_emitter", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: new c(),
              });
          }
          on(e, t) {
            this._emitter.on(e, t);
          }
          once(e, t) {
            this._emitter.once(e, t);
          }
          off(e, t) {
            this._emitter.off(e, t);
          }
          emit(e, ...t) {
            let n = t[0];
            this._emitter.emit(e, { uid: this.uid, ...n });
          }
          listenerCount(e) {
            return this._emitter.listenerCount(e);
          }
        }
        var l = n(51153),
          f = n(13102);
        let d = 256;
        var h = n(19676);
        function p(e) {
          let t;
          let {
              multiInjectedProviderDiscovery: n = !0,
              storage: c = (0, l.o)({
                storage:
                  "undefined" != typeof window && window.localStorage
                    ? window.localStorage
                    : l.w,
              }),
              syncConnectedChain: p = !0,
              ssr: m = !1,
              ...g
            } = e,
            y =
              "undefined" != typeof window && n
                ? (function () {
                    let e = new Set(),
                      t = [],
                      n = () =>
                        (function (e) {
                          if ("undefined" == typeof window) return;
                          let t = (t) => e(t.detail);
                          return (
                            window.addEventListener(
                              "eip6963:announceProvider",
                              t
                            ),
                            window.dispatchEvent(
                              new CustomEvent("eip6963:requestProvider")
                            ),
                            () =>
                              window.removeEventListener(
                                "eip6963:announceProvider",
                                t
                              )
                          );
                        })((n) => {
                          t.some(({ info: e }) => e.uuid === n.info.uuid) ||
                            ((t = [...t, n]),
                            e.forEach((e) => e(t, { added: [n] })));
                        }),
                      r = n();
                    return {
                      _listeners: () => e,
                      clear() {
                        e.forEach((e) => e([], { removed: [...t] })), (t = []);
                      },
                      destroy() {
                        this.clear(), e.clear(), r?.();
                      },
                      findProvider: ({ rdns: e }) =>
                        t.find((t) => t.info.rdns === e),
                      getProviders: () => t,
                      reset() {
                        this.clear(), r?.(), (r = n());
                      },
                      subscribe: (n, { emitImmediately: r } = {}) => (
                        e.add(n), r && n(t, { added: t }), () => e.delete(n)
                      ),
                    };
                  })()
                : void 0,
            b = (0, s.M)(() => g.chains),
            w = (0, s.M)(() => {
              let e = [],
                t = new Set();
              for (let n of g.connectors ?? []) {
                let r = v(n);
                e.push(r), !m && r.rdns && t.add(r.rdns);
              }
              if (!m && y)
                for (let n of y.getProviders())
                  t.has(n.info.rdns) || e.push(v(A(n)));
              return e;
            });
          function v(e) {
            let t = new u(
                (function (e = 11) {
                  if (!r || d + e > 512) {
                    (r = ""), (d = 0);
                    for (let e = 0; e < 256; e++)
                      r += ((256 + 256 * Math.random()) | 0)
                        .toString(16)
                        .substring(1);
                  }
                  return r.substring(d, d++ + e);
                })()
              ),
              n = {
                ...e({
                  emitter: t,
                  chains: b.getState(),
                  storage: c,
                  transports: g.transports,
                }),
                emitter: t,
                uid: t.uid,
              };
            return t.on("connect", P), n.setup?.(), n;
          }
          function A(e) {
            let { info: t } = e,
              n = e.provider;
            return (0, a.L)({ target: { ...t, id: t.rdns, provider: n } });
          }
          let E = new Map();
          function C() {
            return {
              chainId: b.getState()[0].id,
              connections: new Map(),
              current: null,
              status: "disconnected",
            };
          }
          let x = "0.0.0-canary-";
          t = h.i.startsWith(x)
            ? Number.parseInt(h.i.replace(x, ""))
            : Number.parseInt(h.i.split(".")[0] ?? "0");
          let B = (0, s.M)(
            (0, o.XR)(
              c
                ? (0, o.tJ)(C, {
                    migrate(e, n) {
                      if (n === t) return e;
                      let r = C(),
                        i = I(e, r.chainId);
                      return { ...r, chainId: i };
                    },
                    name: "store",
                    partialize: (e) => ({
                      connections: {
                        __type: "Map",
                        value: Array.from(e.connections.entries()).map(
                          ([e, t]) => {
                            let {
                              id: n,
                              name: r,
                              type: i,
                              uid: o,
                            } = t.connector;
                            return [
                              e,
                              {
                                ...t,
                                connector: { id: n, name: r, type: i, uid: o },
                              },
                            ];
                          }
                        ),
                      },
                      chainId: e.chainId,
                      current: e.current,
                    }),
                    merge(e, t) {
                      "object" == typeof e &&
                        e &&
                        "status" in e &&
                        delete e.status;
                      let n = I(e, t.chainId);
                      return { ...t, ...e, chainId: n };
                    },
                    skipHydration: m,
                    storage: c,
                    version: t,
                  })
                : C
            )
          );
          function I(e, t) {
            return e &&
              "object" == typeof e &&
              "chainId" in e &&
              "number" == typeof e.chainId &&
              b.getState().some((t) => t.id === e.chainId)
              ? e.chainId
              : t;
          }
          function S(e) {
            B.setState((t) => {
              let n = t.connections.get(e.uid);
              return n
                ? {
                    ...t,
                    connections: new Map(t.connections).set(e.uid, {
                      accounts: e.accounts ?? n.accounts,
                      chainId: e.chainId ?? n.chainId,
                      connector: n.connector,
                    }),
                  }
                : t;
            });
          }
          function P(e) {
            "connecting" !== B.getState().status &&
              "reconnecting" !== B.getState().status &&
              B.setState((t) => {
                let n = w.getState().find((t) => t.uid === e.uid);
                return n
                  ? (n.emitter.listenerCount("connect") &&
                      n.emitter.off("connect", S),
                    n.emitter.listenerCount("change") ||
                      n.emitter.on("change", S),
                    n.emitter.listenerCount("disconnect") ||
                      n.emitter.on("disconnect", T),
                    {
                      ...t,
                      connections: new Map(t.connections).set(e.uid, {
                        accounts: e.accounts,
                        chainId: e.chainId,
                        connector: n,
                      }),
                      current: e.uid,
                      status: "connected",
                    })
                  : t;
              });
          }
          function T(e) {
            B.setState((t) => {
              let n = t.connections.get(e.uid);
              if (n) {
                let e = n.connector;
                e.emitter.listenerCount("change") &&
                  n.connector.emitter.off("change", S),
                  e.emitter.listenerCount("disconnect") &&
                    n.connector.emitter.off("disconnect", T),
                  e.emitter.listenerCount("connect") ||
                    n.connector.emitter.on("connect", P);
              }
              if ((t.connections.delete(e.uid), 0 === t.connections.size))
                return {
                  ...t,
                  connections: new Map(),
                  current: null,
                  status: "disconnected",
                };
              let r = t.connections.values().next().value;
              return {
                ...t,
                connections: new Map(t.connections),
                current: r.connector.uid,
              };
            });
          }
          return (
            B.setState(C()),
            p &&
              B.subscribe(
                ({ connections: e, current: t }) =>
                  t ? e.get(t)?.chainId : void 0,
                (e) => {
                  if (b.getState().some((t) => t.id === e))
                    return B.setState((t) => ({
                      ...t,
                      chainId: e ?? t.chainId,
                    }));
                }
              ),
            y?.subscribe((e) => {
              let t = new Set(),
                n = new Set();
              for (let e of w.getState()) t.add(e.id), e.rdns && n.add(e.rdns);
              let r = [];
              for (let i of e) {
                if (n.has(i.info.rdns)) continue;
                let e = v(A(i));
                t.has(e.id) || r.push(e);
              }
              (!c || B.persist.hasHydrated()) &&
                w.setState((e) => [...e, ...r], !0);
            }),
            {
              get chains() {
                return b.getState();
              },
              get connectors() {
                return w.getState();
              },
              storage: c,
              getClient: function (e = {}) {
                let t;
                let n = e.chainId ?? B.getState().chainId,
                  r = b.getState().find((e) => e.id === n);
                if (e.chainId && !r) throw new f.X4();
                {
                  let e = E.get(B.getState().chainId);
                  if (e && !r) return e;
                  if (!r) throw new f.X4();
                }
                {
                  let e = E.get(n);
                  if (e) return e;
                }
                if (g.client) t = g.client({ chain: r });
                else {
                  let e = r.id,
                    n = b.getState().map((e) => e.id),
                    o = {};
                  for (let [t, r] of Object.entries(g))
                    if (
                      "chains" !== t &&
                      "client" !== t &&
                      "connectors" !== t &&
                      "transports" !== t
                    ) {
                      if ("object" == typeof r) {
                        if (e in r) o[t] = r[e];
                        else {
                          if (n.some((e) => e in r)) continue;
                          o[t] = r;
                        }
                      } else o[t] = r;
                    }
                  t = (0, i.e)({
                    ...o,
                    chain: r,
                    batch: o.batch ?? { multicall: !0 },
                    transport: (t) => g.transports[e]({ ...t, connectors: w }),
                  });
                }
                return E.set(n, t), t;
              },
              get state() {
                return B.getState();
              },
              setState(e) {
                let t;
                t = "function" == typeof e ? e(B.getState()) : e;
                let n = C();
                "object" != typeof t && (t = n),
                  Object.keys(n).some((e) => !(e in t)) && (t = n),
                  B.setState(t, !0);
              },
              subscribe: (e, t, n) =>
                B.subscribe(
                  e,
                  t,
                  n ? { ...n, fireImmediately: n.emitImmediately } : void 0
                ),
              _internal: {
                mipd: y,
                store: B,
                ssr: !!m,
                syncConnectedChain: p,
                transports: g.transports,
                chains: {
                  setState(e) {
                    let t = "function" == typeof e ? e(b.getState()) : e;
                    if (0 !== t.length) return b.setState(t, !0);
                  },
                  subscribe: (e) => b.subscribe(e),
                },
                connectors: {
                  providerDetailToConnector: A,
                  setup: v,
                  setState: (e) =>
                    w.setState(
                      "function" == typeof e ? e(w.getState()) : e,
                      !0
                    ),
                  subscribe: (e) => w.subscribe(e),
                },
                events: { change: S, connect: P, disconnect: T },
              },
            }
          );
        }
      },
      51153: function (e, t, n) {
        "use strict";
        function r(e, t) {
          return JSON.parse(e, (e, n) => {
            let r = n;
            return (
              r?.__type === "bigint" && (r = BigInt(r.value)),
              r?.__type === "Map" && (r = new Map(r.value)),
              t?.(e, r) ?? r
            );
          });
        }
        function i(e, t) {
          return e.slice(0, t).join(".") || ".";
        }
        function o(e, t) {
          let { length: n } = e;
          for (let r = 0; r < n; ++r) if (e[r] === t) return r + 1;
          return 0;
        }
        function s(e, t, n, r) {
          return JSON.stringify(
            e,
            (function (e, t) {
              let n = "function" == typeof e,
                r = "function" == typeof t,
                s = [],
                a = [];
              return function (c, u) {
                if ("object" == typeof u) {
                  if (s.length) {
                    let e = o(s, this);
                    0 === e ? (s[s.length] = this) : (s.splice(e), a.splice(e)),
                      (a[a.length] = c);
                    let n = o(s, u);
                    if (0 !== n)
                      return r
                        ? t.call(this, c, u, i(a, n))
                        : `[ref=${i(a, n)}]`;
                  } else (s[0] = u), (a[0] = c);
                }
                return n ? e.call(this, c, u) : u;
              };
            })((e, n) => {
              let r = n;
              return (
                "bigint" == typeof r &&
                  (r = { __type: "bigint", value: n.toString() }),
                r instanceof Map &&
                  (r = { __type: "Map", value: Array.from(n.entries()) }),
                t?.(e, r) ?? r
              );
            }, r),
            n ?? void 0
          );
        }
        function a(e) {
          let {
            deserialize: t = r,
            key: n = "wagmi",
            serialize: i = s,
            storage: o = c,
          } = e;
          function a(e) {
            return e instanceof Promise
              ? e.then((e) => e).catch(() => null)
              : e;
          }
          return {
            ...o,
            key: n,
            async getItem(e, r) {
              let i = o.getItem(`${n}.${e}`),
                s = await a(i);
              return s ? t(s) ?? null : r ?? null;
            },
            async setItem(e, t) {
              let r = `${n}.${e}`;
              null === t
                ? await a(o.removeItem(r))
                : await a(o.setItem(r, i(t)));
            },
            async removeItem(e) {
              await a(o.removeItem(`${n}.${e}`));
            },
          };
        }
        n.d(t, {
          o: function () {
            return a;
          },
          w: function () {
            return c;
          },
        });
        let c = {
          getItem: () => null,
          setItem: () => {},
          removeItem: () => {},
        };
      },
      26129: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return c;
          },
        });
        var r,
          i,
          o = n(19676);
        let s = () => `@wagmi/core@${o.i}`;
        var a = function (e, t, n, r) {
          if ("a" === n && !r)
            throw TypeError("Private accessor was defined without a getter");
          if ("function" == typeof t ? e !== t || !r : !t.has(e))
            throw TypeError(
              "Cannot read private member from an object whose class did not declare it"
            );
          return "m" === n ? r : "a" === n ? r.call(e) : r ? r.value : t.get(e);
        };
        class c extends Error {
          get docsBaseUrl() {
            return "https://wagmi.sh/core";
          }
          get version() {
            return s();
          }
          constructor(e, t = {}) {
            super(),
              r.add(this),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WagmiCoreError",
              });
            let n =
                t.cause instanceof c
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              i = (t.cause instanceof c && t.cause.docsPath) || t.docsPath;
            (this.message = [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(i
                ? [
                    `Docs: ${this.docsBaseUrl}${i}.html${
                      t.docsSlug ? `#${t.docsSlug}` : ""
                    }`,
                  ]
                : []),
              ...(n ? [`Details: ${n}`] : []),
              `Version: ${this.version}`,
            ].join("\n")),
              t.cause && (this.cause = t.cause),
              (this.details = n),
              (this.docsPath = i),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
          walk(e) {
            return a(this, r, "m", i).call(this, this, e);
          }
        }
        (r = new WeakSet()),
          (i = function e(t, n) {
            return n?.(t)
              ? t
              : t.cause
              ? a(this, r, "m", e).call(this, t.cause, n)
              : t;
          });
      },
      13102: function (e, t, n) {
        "use strict";
        n.d(t, {
          $S: function () {
            return u;
          },
          JK: function () {
            return a;
          },
          X4: function () {
            return i;
          },
          XZ: function () {
            return c;
          },
          aH: function () {
            return s;
          },
          wi: function () {
            return o;
          },
        });
        var r = n(26129);
        class i extends r.G {
          constructor() {
            super("Chain not configured."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainNotConfiguredError",
              });
          }
        }
        class o extends r.G {
          constructor() {
            super("Connector already connected."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ConnectorAlreadyConnectedError",
              });
          }
        }
        class s extends r.G {
          constructor() {
            super("Connector not connected."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ConnectorNotConnectedError",
              });
          }
        }
        class a extends r.G {
          constructor({ address: e, connector: t }) {
            super(`Account "${e}" not found for connector "${t.name}".`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ConnectorAccountNotFoundError",
              });
          }
        }
        class c extends r.G {
          constructor({ connectionChainId: e, connectorChainId: t }) {
            super(
              `The current chain of the connector (id: ${t}) does not match the connection's chain (id: ${e}).`,
              {
                metaMessages: [
                  `Current Chain ID:  ${t}`,
                  `Expected Chain ID: ${e}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ConnectorChainMismatchError",
              });
          }
        }
        class u extends r.G {
          constructor({ connector: e }) {
            super(`Connector "${e.name}" unavailable while reconnecting.`, {
              details:
                "During the reconnection step, the only connector methods guaranteed to be available are: `id`, `name`, `type`, `uuid`. All other methods are not guaranteed to be available until reconnection completes and connectors are fully restored. This error commonly occurs for connectors that asynchronously inject after reconnection has already started.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ConnectorUnavailableReconnectingError",
              });
          }
        }
      },
      14478: function (e, t, n) {
        "use strict";
        n.d(t, {
          M: function () {
            return i;
          },
          O: function () {
            return o;
          },
        });
        var r = n(26129);
        class i extends r.G {
          constructor() {
            super("Provider not found."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderNotFoundError",
              });
          }
        }
        class o extends r.G {
          constructor({ connector: e }) {
            super(`"${e.name}" does not support programmatic chain switching.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SwitchChainNotSupportedError",
              });
          }
        }
      },
      27534: function (e, t, n) {
        "use strict";
        n.d(t, {
          OP: function () {
            return a;
          },
          if: function () {
            return i;
          },
          kq: function () {
            return o;
          },
        });
        var r = n(45345);
        function i(e, t) {
          return (0, r.Q$)(e, t);
        }
        function o(e) {
          return JSON.stringify(e, (e, t) =>
            !(function (e) {
              if (!s(e)) return !1;
              let t = e.constructor;
              if (void 0 === t) return !0;
              let n = t.prototype;
              return !!(s(n) && n.hasOwnProperty("isPrototypeOf"));
            })(t)
              ? "bigint" == typeof t
                ? t.toString()
                : t
              : Object.keys(t)
                  .sort()
                  .reduce((e, n) => ((e[n] = t[n]), e), {})
          );
        }
        function s(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        function a(e) {
          let {
            _defaulted: t,
            behavior: n,
            gcTime: r,
            initialData: i,
            initialDataUpdatedAt: o,
            maxPages: s,
            meta: a,
            networkMode: c,
            queryFn: u,
            queryHash: l,
            queryKey: f,
            queryKeyHashFn: d,
            retry: h,
            retryDelay: p,
            structuralSharing: m,
            getPreviousPageParam: g,
            getNextPageParam: y,
            initialPageParam: b,
            _optimisticResults: w,
            enabled: v,
            notifyOnChangeProps: A,
            placeholderData: E,
            refetchInterval: C,
            refetchIntervalInBackground: x,
            refetchOnMount: B,
            refetchOnReconnect: I,
            refetchOnWindowFocus: S,
            retryOnMount: P,
            select: T,
            staleTime: O,
            suspense: k,
            throwOnError: R,
            config: N,
            connector: M,
            query: L,
            ...F
          } = e;
          return F;
        }
      },
      31213: function (e, t, n) {
        "use strict";
        n.d(t, {
          Dr: function () {
            return r;
          },
        });
        let r = {
          getItem: (e) =>
            "undefined" == typeof window
              ? null
              : (function (e, t) {
                  let n = e.split("; ").find((e) => e.startsWith(`${t}=`));
                  if (n) return n.substring(t.length + 1);
                })(document.cookie, e) ?? null,
          setItem(e, t) {
            "undefined" != typeof window &&
              (document.cookie = `${e}=${t};path=/;samesite=Lax`);
          },
          removeItem(e) {
            "undefined" != typeof window &&
              (document.cookie = `${e}=;max-age=-1;path=/`);
          },
        };
      },
      52123: function (e, t, n) {
        "use strict";
        n.d(t, {
          v: function () {
            return function e(t, n) {
              if (t === n) return !0;
              if (t && n && "object" == typeof t && "object" == typeof n) {
                let r, i;
                if (t.constructor !== n.constructor) return !1;
                if (Array.isArray(t) && Array.isArray(n)) {
                  if ((r = t.length) !== n.length) return !1;
                  for (i = r; 0 != i--; ) if (!e(t[i], n[i])) return !1;
                  return !0;
                }
                if (t.valueOf !== Object.prototype.valueOf)
                  return t.valueOf() === n.valueOf();
                if (t.toString !== Object.prototype.toString)
                  return t.toString() === n.toString();
                let o = Object.keys(t);
                if ((r = o.length) !== Object.keys(n).length) return !1;
                for (i = r; 0 != i--; )
                  if (!Object.prototype.hasOwnProperty.call(n, o[i])) return !1;
                for (i = r; 0 != i--; ) {
                  let r = o[i];
                  if (r && !e(t[r], n[r])) return !1;
                }
                return !0;
              }
              return t != t && n != n;
            };
          },
        });
      },
      17454: function (e, t, n) {
        "use strict";
        function r(e) {
          let { chain: t } = e,
            n = t.rpcUrls.default.http[0];
          if (!e.transports) return [n];
          let r = e.transports?.[t.id]?.({ chain: t });
          return (r?.value?.transports || [r]).map(
            ({ value: e }) => e?.url || n
          );
        }
        n.d(t, {
          N: function () {
            return r;
          },
        });
      },
      44199: function (e, t, n) {
        "use strict";
        function r(e, t, n) {
          let r = e[t.name];
          if ("function" == typeof r) return r;
          let i = e[n];
          return "function" == typeof i ? i : (n) => t(e, n);
        }
        n.d(t, {
          s: function () {
            return r;
          },
        });
      },
      19676: function (e, t, n) {
        "use strict";
        n.d(t, {
          i: function () {
            return r;
          },
        });
        let r = "2.14.4";
      },
      64020: function (e, t, n) {
        "use strict";
        function r(e, t) {
          let n = e.exec(t);
          return n?.groups;
        }
        n.d(t, {
          Zw: function () {
            return r;
          },
          cN: function () {
            return s;
          },
          eL: function () {
            return i;
          },
          lh: function () {
            return o;
          },
        });
        let i = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
          o =
            /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,
          s = /^\(.+?\).*?$/;
      },
      83464: function (e, t, n) {
        "use strict";
        let r, i, o;
        n.d(t, {
          Z: function () {
            return tp;
          },
        });
        var s,
          a,
          c,
          u,
          l,
          f = {};
        function d(e, t) {
          return function () {
            return e.apply(t, arguments);
          };
        }
        n.r(f),
          n.d(f, {
            hasBrowserEnv: function () {
              return ey;
            },
            hasStandardBrowserEnv: function () {
              return ew;
            },
            hasStandardBrowserWebWorkerEnv: function () {
              return ev;
            },
            navigator: function () {
              return eb;
            },
            origin: function () {
              return eA;
            },
          });
        var h = n(25566);
        let { toString: p } = Object.prototype,
          { getPrototypeOf: m } = Object,
          g =
            ((r = Object.create(null)),
            (e) => {
              let t = p.call(e);
              return r[t] || (r[t] = t.slice(8, -1).toLowerCase());
            }),
          y = (e) => ((e = e.toLowerCase()), (t) => g(t) === e),
          b = (e) => (t) => typeof t === e,
          { isArray: w } = Array,
          v = b("undefined"),
          A = y("ArrayBuffer"),
          E = b("string"),
          C = b("function"),
          x = b("number"),
          B = (e) => null !== e && "object" == typeof e,
          I = (e) => {
            if ("object" !== g(e)) return !1;
            let t = m(e);
            return (
              (null === t ||
                t === Object.prototype ||
                null === Object.getPrototypeOf(t)) &&
              !(Symbol.toStringTag in e) &&
              !(Symbol.iterator in e)
            );
          },
          S = y("Date"),
          P = y("File"),
          T = y("Blob"),
          O = y("FileList"),
          k = y("URLSearchParams"),
          [R, N, M, L] = [
            "ReadableStream",
            "Request",
            "Response",
            "Headers",
          ].map(y);
        function F(e, t, { allOwnKeys: n = !1 } = {}) {
          let r, i;
          if (null != e) {
            if (("object" != typeof e && (e = [e]), w(e)))
              for (r = 0, i = e.length; r < i; r++) t.call(null, e[r], r, e);
            else {
              let i;
              let o = n ? Object.getOwnPropertyNames(e) : Object.keys(e),
                s = o.length;
              for (r = 0; r < s; r++) (i = o[r]), t.call(null, e[i], i, e);
            }
          }
        }
        function U(e, t) {
          let n;
          t = t.toLowerCase();
          let r = Object.keys(e),
            i = r.length;
          for (; i-- > 0; ) if (t === (n = r[i]).toLowerCase()) return n;
          return null;
        }
        let D =
            "undefined" != typeof globalThis
              ? globalThis
              : "undefined" != typeof self
              ? self
              : "undefined" != typeof window
              ? window
              : global,
          _ = (e) => !v(e) && e !== D,
          j =
            ((i = "undefined" != typeof Uint8Array && m(Uint8Array)),
            (e) => i && e instanceof i),
          G = y("HTMLFormElement"),
          H = (
            ({ hasOwnProperty: e }) =>
            (t, n) =>
              e.call(t, n)
          )(Object.prototype),
          q = y("RegExp"),
          z = (e, t) => {
            let n = Object.getOwnPropertyDescriptors(e),
              r = {};
            F(n, (n, i) => {
              let o;
              !1 !== (o = t(n, i, e)) && (r[i] = o || n);
            }),
              Object.defineProperties(e, r);
          },
          Q = "abcdefghijklmnopqrstuvwxyz",
          W = "0123456789",
          V = { DIGIT: W, ALPHA: Q, ALPHA_DIGIT: Q + Q.toUpperCase() + W },
          K = y("AsyncFunction"),
          $ =
            ((s = "function" == typeof setImmediate),
            (a = C(D.postMessage)),
            s
              ? setImmediate
              : a
              ? ((c = `axios@${Math.random()}`),
                (u = []),
                D.addEventListener(
                  "message",
                  ({ source: e, data: t }) => {
                    e === D && t === c && u.length && u.shift()();
                  },
                  !1
                ),
                (e) => {
                  u.push(e), D.postMessage(c, "*");
                })
              : (e) => setTimeout(e)),
          Z =
            "undefined" != typeof queueMicrotask
              ? queueMicrotask.bind(D)
              : (void 0 !== h && h.nextTick) || $;
        var J = {
          isArray: w,
          isArrayBuffer: A,
          isBuffer: function (e) {
            return (
              null !== e &&
              !v(e) &&
              null !== e.constructor &&
              !v(e.constructor) &&
              C(e.constructor.isBuffer) &&
              e.constructor.isBuffer(e)
            );
          },
          isFormData: (e) => {
            let t;
            return (
              e &&
              (("function" == typeof FormData && e instanceof FormData) ||
                (C(e.append) &&
                  ("formdata" === (t = g(e)) ||
                    ("object" === t &&
                      C(e.toString) &&
                      "[object FormData]" === e.toString()))))
            );
          },
          isArrayBufferView: function (e) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : e && e.buffer && A(e.buffer);
          },
          isString: E,
          isNumber: x,
          isBoolean: (e) => !0 === e || !1 === e,
          isObject: B,
          isPlainObject: I,
          isReadableStream: R,
          isRequest: N,
          isResponse: M,
          isHeaders: L,
          isUndefined: v,
          isDate: S,
          isFile: P,
          isBlob: T,
          isRegExp: q,
          isFunction: C,
          isStream: (e) => B(e) && C(e.pipe),
          isURLSearchParams: k,
          isTypedArray: j,
          isFileList: O,
          forEach: F,
          merge: function e() {
            let { caseless: t } = (_(this) && this) || {},
              n = {},
              r = (r, i) => {
                let o = (t && U(n, i)) || i;
                I(n[o]) && I(r)
                  ? (n[o] = e(n[o], r))
                  : I(r)
                  ? (n[o] = e({}, r))
                  : w(r)
                  ? (n[o] = r.slice())
                  : (n[o] = r);
              };
            for (let e = 0, t = arguments.length; e < t; e++)
              arguments[e] && F(arguments[e], r);
            return n;
          },
          extend: (e, t, n, { allOwnKeys: r } = {}) => (
            F(
              t,
              (t, r) => {
                n && C(t) ? (e[r] = d(t, n)) : (e[r] = t);
              },
              { allOwnKeys: r }
            ),
            e
          ),
          trim: (e) =>
            e.trim
              ? e.trim()
              : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
          stripBOM: (e) => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
          inherits: (e, t, n, r) => {
            (e.prototype = Object.create(t.prototype, r)),
              (e.prototype.constructor = e),
              Object.defineProperty(e, "super", { value: t.prototype }),
              n && Object.assign(e.prototype, n);
          },
          toFlatObject: (e, t, n, r) => {
            let i, o, s;
            let a = {};
            if (((t = t || {}), null == e)) return t;
            do {
              for (o = (i = Object.getOwnPropertyNames(e)).length; o-- > 0; )
                (s = i[o]),
                  (!r || r(s, e, t)) && !a[s] && ((t[s] = e[s]), (a[s] = !0));
              e = !1 !== n && m(e);
            } while (e && (!n || n(e, t)) && e !== Object.prototype);
            return t;
          },
          kindOf: g,
          kindOfTest: y,
          endsWith: (e, t, n) => {
            (e = String(e)),
              (void 0 === n || n > e.length) && (n = e.length),
              (n -= t.length);
            let r = e.indexOf(t, n);
            return -1 !== r && r === n;
          },
          toArray: (e) => {
            if (!e) return null;
            if (w(e)) return e;
            let t = e.length;
            if (!x(t)) return null;
            let n = Array(t);
            for (; t-- > 0; ) n[t] = e[t];
            return n;
          },
          forEachEntry: (e, t) => {
            let n;
            let r = (e && e[Symbol.iterator]).call(e);
            for (; (n = r.next()) && !n.done; ) {
              let r = n.value;
              t.call(e, r[0], r[1]);
            }
          },
          matchAll: (e, t) => {
            let n;
            let r = [];
            for (; null !== (n = e.exec(t)); ) r.push(n);
            return r;
          },
          isHTMLForm: G,
          hasOwnProperty: H,
          hasOwnProp: H,
          reduceDescriptors: z,
          freezeMethods: (e) => {
            z(e, (t, n) => {
              if (C(e) && -1 !== ["arguments", "caller", "callee"].indexOf(n))
                return !1;
              if (C(e[n])) {
                if (((t.enumerable = !1), "writable" in t)) {
                  t.writable = !1;
                  return;
                }
                t.set ||
                  (t.set = () => {
                    throw Error("Can not rewrite read-only method '" + n + "'");
                  });
              }
            });
          },
          toObjectSet: (e, t) => {
            let n = {};
            return (
              ((e) => {
                e.forEach((e) => {
                  n[e] = !0;
                });
              })(w(e) ? e : String(e).split(t)),
              n
            );
          },
          toCamelCase: (e) =>
            e
              .toLowerCase()
              .replace(/[-_\s]([a-z\d])(\w*)/g, function (e, t, n) {
                return t.toUpperCase() + n;
              }),
          noop: () => {},
          toFiniteNumber: (e, t) =>
            null != e && Number.isFinite((e = +e)) ? e : t,
          findKey: U,
          global: D,
          isContextDefined: _,
          ALPHABET: V,
          generateString: (e = 16, t = V.ALPHA_DIGIT) => {
            let n = "",
              { length: r } = t;
            for (; e--; ) n += t[(Math.random() * r) | 0];
            return n;
          },
          isSpecCompliantForm: function (e) {
            return !!(
              e &&
              C(e.append) &&
              "FormData" === e[Symbol.toStringTag] &&
              e[Symbol.iterator]
            );
          },
          toJSONObject: (e) => {
            let t = Array(10),
              n = (e, r) => {
                if (B(e)) {
                  if (t.indexOf(e) >= 0) return;
                  if (!("toJSON" in e)) {
                    t[r] = e;
                    let i = w(e) ? [] : {};
                    return (
                      F(e, (e, t) => {
                        let o = n(e, r + 1);
                        v(o) || (i[t] = o);
                      }),
                      (t[r] = void 0),
                      i
                    );
                  }
                }
                return e;
              };
            return n(e, 0);
          },
          isAsyncFn: K,
          isThenable: (e) => e && (B(e) || C(e)) && C(e.then) && C(e.catch),
          setImmediate: $,
          asap: Z,
        };
        function Y(e, t, n, r, i) {
          Error.call(this),
            Error.captureStackTrace
              ? Error.captureStackTrace(this, this.constructor)
              : (this.stack = Error().stack),
            (this.message = e),
            (this.name = "AxiosError"),
            t && (this.code = t),
            n && (this.config = n),
            r && (this.request = r),
            i &&
              ((this.response = i), (this.status = i.status ? i.status : null));
        }
        J.inherits(Y, Error, {
          toJSON: function () {
            return {
              message: this.message,
              name: this.name,
              description: this.description,
              number: this.number,
              fileName: this.fileName,
              lineNumber: this.lineNumber,
              columnNumber: this.columnNumber,
              stack: this.stack,
              config: J.toJSONObject(this.config),
              code: this.code,
              status: this.status,
            };
          },
        });
        let X = Y.prototype,
          ee = {};
        [
          "ERR_BAD_OPTION_VALUE",
          "ERR_BAD_OPTION",
          "ECONNABORTED",
          "ETIMEDOUT",
          "ERR_NETWORK",
          "ERR_FR_TOO_MANY_REDIRECTS",
          "ERR_DEPRECATED",
          "ERR_BAD_RESPONSE",
          "ERR_BAD_REQUEST",
          "ERR_CANCELED",
          "ERR_NOT_SUPPORT",
          "ERR_INVALID_URL",
        ].forEach((e) => {
          ee[e] = { value: e };
        }),
          Object.defineProperties(Y, ee),
          Object.defineProperty(X, "isAxiosError", { value: !0 }),
          (Y.from = (e, t, n, r, i, o) => {
            let s = Object.create(X);
            return (
              J.toFlatObject(
                e,
                s,
                function (e) {
                  return e !== Error.prototype;
                },
                (e) => "isAxiosError" !== e
              ),
              Y.call(s, e.message, t, n, r, i),
              (s.cause = e),
              (s.name = e.name),
              o && Object.assign(s, o),
              s
            );
          });
        var et = n(82957).lW;
        function en(e) {
          return J.isPlainObject(e) || J.isArray(e);
        }
        function er(e) {
          return J.endsWith(e, "[]") ? e.slice(0, -2) : e;
        }
        function ei(e, t, n) {
          return e
            ? e
                .concat(t)
                .map(function (e, t) {
                  return (e = er(e)), !n && t ? "[" + e + "]" : e;
                })
                .join(n ? "." : "")
            : t;
        }
        let eo = J.toFlatObject(J, {}, null, function (e) {
          return /^is[A-Z]/.test(e);
        });
        var es = function (e, t, n) {
          if (!J.isObject(e)) throw TypeError("target must be an object");
          t = t || new FormData();
          let r = (n = J.toFlatObject(
              n,
              { metaTokens: !0, dots: !1, indexes: !1 },
              !1,
              function (e, t) {
                return !J.isUndefined(t[e]);
              }
            )).metaTokens,
            i = n.visitor || u,
            o = n.dots,
            s = n.indexes,
            a =
              (n.Blob || ("undefined" != typeof Blob && Blob)) &&
              J.isSpecCompliantForm(t);
          if (!J.isFunction(i)) throw TypeError("visitor must be a function");
          function c(e) {
            if (null === e) return "";
            if (J.isDate(e)) return e.toISOString();
            if (!a && J.isBlob(e))
              throw new Y("Blob is not supported. Use a Buffer instead.");
            return J.isArrayBuffer(e) || J.isTypedArray(e)
              ? a && "function" == typeof Blob
                ? new Blob([e])
                : et.from(e)
              : e;
          }
          function u(e, n, i) {
            let a = e;
            if (e && !i && "object" == typeof e) {
              if (J.endsWith(n, "{}"))
                (n = r ? n : n.slice(0, -2)), (e = JSON.stringify(e));
              else {
                var u;
                if (
                  (J.isArray(e) && ((u = e), J.isArray(u) && !u.some(en))) ||
                  ((J.isFileList(e) || J.endsWith(n, "[]")) &&
                    (a = J.toArray(e)))
                )
                  return (
                    (n = er(n)),
                    a.forEach(function (e, r) {
                      J.isUndefined(e) ||
                        null === e ||
                        t.append(
                          !0 === s ? ei([n], r, o) : null === s ? n : n + "[]",
                          c(e)
                        );
                    }),
                    !1
                  );
              }
            }
            return !!en(e) || (t.append(ei(i, n, o), c(e)), !1);
          }
          let l = [],
            f = Object.assign(eo, {
              defaultVisitor: u,
              convertValue: c,
              isVisitable: en,
            });
          if (!J.isObject(e)) throw TypeError("data must be an object");
          return (
            (function e(n, r) {
              if (!J.isUndefined(n)) {
                if (-1 !== l.indexOf(n))
                  throw Error("Circular reference detected in " + r.join("."));
                l.push(n),
                  J.forEach(n, function (n, o) {
                    !0 ===
                      (!(J.isUndefined(n) || null === n) &&
                        i.call(t, n, J.isString(o) ? o.trim() : o, r, f)) &&
                      e(n, r ? r.concat(o) : [o]);
                  }),
                  l.pop();
              }
            })(e),
            t
          );
        };
        function ea(e) {
          let t = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+",
            "%00": "\0",
          };
          return encodeURIComponent(e).replace(
            /[!'()~]|%20|%00/g,
            function (e) {
              return t[e];
            }
          );
        }
        function ec(e, t) {
          (this._pairs = []), e && es(e, this, t);
        }
        let eu = ec.prototype;
        function el(e) {
          return encodeURIComponent(e)
            .replace(/%3A/gi, ":")
            .replace(/%24/g, "$")
            .replace(/%2C/gi, ",")
            .replace(/%20/g, "+")
            .replace(/%5B/gi, "[")
            .replace(/%5D/gi, "]");
        }
        function ef(e, t, n) {
          let r;
          if (!t) return e;
          let i = (n && n.encode) || el,
            o = n && n.serialize;
          if (
            (r = o
              ? o(t, n)
              : J.isURLSearchParams(t)
              ? t.toString()
              : new ec(t, n).toString(i))
          ) {
            let t = e.indexOf("#");
            -1 !== t && (e = e.slice(0, t)),
              (e += (-1 === e.indexOf("?") ? "?" : "&") + r);
          }
          return e;
        }
        (eu.append = function (e, t) {
          this._pairs.push([e, t]);
        }),
          (eu.toString = function (e) {
            let t = e
              ? function (t) {
                  return e.call(this, t, ea);
                }
              : ea;
            return this._pairs
              .map(function (e) {
                return t(e[0]) + "=" + t(e[1]);
              }, "")
              .join("&");
          });
        class ed {
          constructor() {
            this.handlers = [];
          }
          use(e, t, n) {
            return (
              this.handlers.push({
                fulfilled: e,
                rejected: t,
                synchronous: !!n && n.synchronous,
                runWhen: n ? n.runWhen : null,
              }),
              this.handlers.length - 1
            );
          }
          eject(e) {
            this.handlers[e] && (this.handlers[e] = null);
          }
          clear() {
            this.handlers && (this.handlers = []);
          }
          forEach(e) {
            J.forEach(this.handlers, function (t) {
              null !== t && e(t);
            });
          }
        }
        var eh = {
            silentJSONParsing: !0,
            forcedJSONParsing: !0,
            clarifyTimeoutError: !1,
          },
          ep = "undefined" != typeof URLSearchParams ? URLSearchParams : ec,
          em = "undefined" != typeof FormData ? FormData : null,
          eg = "undefined" != typeof Blob ? Blob : null;
        let ey = "undefined" != typeof window && "undefined" != typeof document,
          eb = ("object" == typeof navigator && navigator) || void 0,
          ew =
            ey &&
            (!eb ||
              0 > ["ReactNative", "NativeScript", "NS"].indexOf(eb.product)),
          ev =
            "undefined" != typeof WorkerGlobalScope &&
            self instanceof WorkerGlobalScope &&
            "function" == typeof self.importScripts,
          eA = (ey && window.location.href) || "http://localhost";
        var eE = {
            ...f,
            isBrowser: !0,
            classes: { URLSearchParams: ep, FormData: em, Blob: eg },
            protocols: ["http", "https", "file", "blob", "url", "data"],
          },
          eC = function (e) {
            if (J.isFormData(e) && J.isFunction(e.entries)) {
              let t = {};
              return (
                J.forEachEntry(e, (e, n) => {
                  !(function e(t, n, r, i) {
                    let o = t[i++];
                    if ("__proto__" === o) return !0;
                    let s = Number.isFinite(+o),
                      a = i >= t.length;
                    return (
                      ((o = !o && J.isArray(r) ? r.length : o), a)
                        ? J.hasOwnProp(r, o)
                          ? (r[o] = [r[o], n])
                          : (r[o] = n)
                        : ((r[o] && J.isObject(r[o])) || (r[o] = []),
                          e(t, n, r[o], i) &&
                            J.isArray(r[o]) &&
                            (r[o] = (function (e) {
                              let t, n;
                              let r = {},
                                i = Object.keys(e),
                                o = i.length;
                              for (t = 0; t < o; t++) r[(n = i[t])] = e[n];
                              return r;
                            })(r[o]))),
                      !s
                    );
                  })(
                    J.matchAll(/\w+|\[(\w*)]/g, e).map((e) =>
                      "[]" === e[0] ? "" : e[1] || e[0]
                    ),
                    n,
                    t,
                    0
                  );
                }),
                t
              );
            }
            return null;
          };
        let ex = {
          transitional: eh,
          adapter: ["xhr", "http", "fetch"],
          transformRequest: [
            function (e, t) {
              let n;
              let r = t.getContentType() || "",
                i = r.indexOf("application/json") > -1,
                o = J.isObject(e);
              if (
                (o && J.isHTMLForm(e) && (e = new FormData(e)), J.isFormData(e))
              )
                return i ? JSON.stringify(eC(e)) : e;
              if (
                J.isArrayBuffer(e) ||
                J.isBuffer(e) ||
                J.isStream(e) ||
                J.isFile(e) ||
                J.isBlob(e) ||
                J.isReadableStream(e)
              )
                return e;
              if (J.isArrayBufferView(e)) return e.buffer;
              if (J.isURLSearchParams(e))
                return (
                  t.setContentType(
                    "application/x-www-form-urlencoded;charset=utf-8",
                    !1
                  ),
                  e.toString()
                );
              if (o) {
                if (r.indexOf("application/x-www-form-urlencoded") > -1) {
                  var s, a;
                  return ((s = e),
                  (a = this.formSerializer),
                  es(
                    s,
                    new eE.classes.URLSearchParams(),
                    Object.assign(
                      {
                        visitor: function (e, t, n, r) {
                          return eE.isNode && J.isBuffer(e)
                            ? (this.append(t, e.toString("base64")), !1)
                            : r.defaultVisitor.apply(this, arguments);
                        },
                      },
                      a
                    )
                  )).toString();
                }
                if (
                  (n = J.isFileList(e)) ||
                  r.indexOf("multipart/form-data") > -1
                ) {
                  let t = this.env && this.env.FormData;
                  return es(
                    n ? { "files[]": e } : e,
                    t && new t(),
                    this.formSerializer
                  );
                }
              }
              return o || i
                ? (t.setContentType("application/json", !1),
                  (function (e, t, n) {
                    if (J.isString(e))
                      try {
                        return (0, JSON.parse)(e), J.trim(e);
                      } catch (e) {
                        if ("SyntaxError" !== e.name) throw e;
                      }
                    return (0, JSON.stringify)(e);
                  })(e))
                : e;
            },
          ],
          transformResponse: [
            function (e) {
              let t = this.transitional || ex.transitional,
                n = t && t.forcedJSONParsing,
                r = "json" === this.responseType;
              if (J.isResponse(e) || J.isReadableStream(e)) return e;
              if (e && J.isString(e) && ((n && !this.responseType) || r)) {
                let n = t && t.silentJSONParsing;
                try {
                  return JSON.parse(e);
                } catch (e) {
                  if (!n && r) {
                    if ("SyntaxError" === e.name)
                      throw Y.from(
                        e,
                        Y.ERR_BAD_RESPONSE,
                        this,
                        null,
                        this.response
                      );
                    throw e;
                  }
                }
              }
              return e;
            },
          ],
          timeout: 0,
          xsrfCookieName: "XSRF-TOKEN",
          xsrfHeaderName: "X-XSRF-TOKEN",
          maxContentLength: -1,
          maxBodyLength: -1,
          env: { FormData: eE.classes.FormData, Blob: eE.classes.Blob },
          validateStatus: function (e) {
            return e >= 200 && e < 300;
          },
          headers: {
            common: {
              Accept: "application/json, text/plain, */*",
              "Content-Type": void 0,
            },
          },
        };
        J.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
          ex.headers[e] = {};
        });
        let eB = J.toObjectSet([
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent",
        ]);
        var eI = (e) => {
          let t, n, r;
          let i = {};
          return (
            e &&
              e.split("\n").forEach(function (e) {
                (r = e.indexOf(":")),
                  (t = e.substring(0, r).trim().toLowerCase()),
                  (n = e.substring(r + 1).trim()),
                  !t ||
                    (i[t] && eB[t]) ||
                    ("set-cookie" === t
                      ? i[t]
                        ? i[t].push(n)
                        : (i[t] = [n])
                      : (i[t] = i[t] ? i[t] + ", " + n : n));
              }),
            i
          );
        };
        let eS = Symbol("internals");
        function eP(e) {
          return e && String(e).trim().toLowerCase();
        }
        function eT(e) {
          return !1 === e || null == e
            ? e
            : J.isArray(e)
            ? e.map(eT)
            : String(e);
        }
        let eO = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
        function ek(e, t, n, r, i) {
          if (J.isFunction(r)) return r.call(this, t, n);
          if ((i && (t = n), J.isString(t))) {
            if (J.isString(r)) return -1 !== t.indexOf(r);
            if (J.isRegExp(r)) return r.test(t);
          }
        }
        class eR {
          constructor(e) {
            e && this.set(e);
          }
          set(e, t, n) {
            let r = this;
            function i(e, t, n) {
              let i = eP(t);
              if (!i) throw Error("header name must be a non-empty string");
              let o = J.findKey(r, i);
              (o &&
                void 0 !== r[o] &&
                !0 !== n &&
                (void 0 !== n || !1 === r[o])) ||
                (r[o || t] = eT(e));
            }
            let o = (e, t) => J.forEach(e, (e, n) => i(e, n, t));
            if (J.isPlainObject(e) || e instanceof this.constructor) o(e, t);
            else if (J.isString(e) && (e = e.trim()) && !eO(e)) o(eI(e), t);
            else if (J.isHeaders(e)) for (let [t, r] of e.entries()) i(r, t, n);
            else null != e && i(t, e, n);
            return this;
          }
          get(e, t) {
            if ((e = eP(e))) {
              let n = J.findKey(this, e);
              if (n) {
                let e = this[n];
                if (!t) return e;
                if (!0 === t)
                  return (function (e) {
                    let t;
                    let n = Object.create(null),
                      r = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                    for (; (t = r.exec(e)); ) n[t[1]] = t[2];
                    return n;
                  })(e);
                if (J.isFunction(t)) return t.call(this, e, n);
                if (J.isRegExp(t)) return t.exec(e);
                throw TypeError("parser must be boolean|regexp|function");
              }
            }
          }
          has(e, t) {
            if ((e = eP(e))) {
              let n = J.findKey(this, e);
              return !!(
                n &&
                void 0 !== this[n] &&
                (!t || ek(this, this[n], n, t))
              );
            }
            return !1;
          }
          delete(e, t) {
            let n = this,
              r = !1;
            function i(e) {
              if ((e = eP(e))) {
                let i = J.findKey(n, e);
                i && (!t || ek(n, n[i], i, t)) && (delete n[i], (r = !0));
              }
            }
            return J.isArray(e) ? e.forEach(i) : i(e), r;
          }
          clear(e) {
            let t = Object.keys(this),
              n = t.length,
              r = !1;
            for (; n--; ) {
              let i = t[n];
              (!e || ek(this, this[i], i, e, !0)) && (delete this[i], (r = !0));
            }
            return r;
          }
          normalize(e) {
            let t = this,
              n = {};
            return (
              J.forEach(this, (r, i) => {
                let o = J.findKey(n, i);
                if (o) {
                  (t[o] = eT(r)), delete t[i];
                  return;
                }
                let s = e
                  ? i
                      .trim()
                      .toLowerCase()
                      .replace(
                        /([a-z\d])(\w*)/g,
                        (e, t, n) => t.toUpperCase() + n
                      )
                  : String(i).trim();
                s !== i && delete t[i], (t[s] = eT(r)), (n[s] = !0);
              }),
              this
            );
          }
          concat(...e) {
            return this.constructor.concat(this, ...e);
          }
          toJSON(e) {
            let t = Object.create(null);
            return (
              J.forEach(this, (n, r) => {
                null != n &&
                  !1 !== n &&
                  (t[r] = e && J.isArray(n) ? n.join(", ") : n);
              }),
              t
            );
          }
          [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
          }
          toString() {
            return Object.entries(this.toJSON())
              .map(([e, t]) => e + ": " + t)
              .join("\n");
          }
          get [Symbol.toStringTag]() {
            return "AxiosHeaders";
          }
          static from(e) {
            return e instanceof this ? e : new this(e);
          }
          static concat(e, ...t) {
            let n = new this(e);
            return t.forEach((e) => n.set(e)), n;
          }
          static accessor(e) {
            let t = (this[eS] = this[eS] = { accessors: {} }).accessors,
              n = this.prototype;
            function r(e) {
              let r = eP(e);
              t[r] ||
                ((function (e, t) {
                  let n = J.toCamelCase(" " + t);
                  ["get", "set", "has"].forEach((r) => {
                    Object.defineProperty(e, r + n, {
                      value: function (e, n, i) {
                        return this[r].call(this, t, e, n, i);
                      },
                      configurable: !0,
                    });
                  });
                })(n, e),
                (t[r] = !0));
            }
            return J.isArray(e) ? e.forEach(r) : r(e), this;
          }
        }
        function eN(e, t) {
          let n = this || ex,
            r = t || n,
            i = eR.from(r.headers),
            o = r.data;
          return (
            J.forEach(e, function (e) {
              o = e.call(n, o, i.normalize(), t ? t.status : void 0);
            }),
            i.normalize(),
            o
          );
        }
        function eM(e) {
          return !!(e && e.__CANCEL__);
        }
        function eL(e, t, n) {
          Y.call(this, null == e ? "canceled" : e, Y.ERR_CANCELED, t, n),
            (this.name = "CanceledError");
        }
        function eF(e, t, n) {
          let r = n.config.validateStatus;
          !n.status || !r || r(n.status)
            ? e(n)
            : t(
                new Y(
                  "Request failed with status code " + n.status,
                  [Y.ERR_BAD_REQUEST, Y.ERR_BAD_RESPONSE][
                    Math.floor(n.status / 100) - 4
                  ],
                  n.config,
                  n.request,
                  n
                )
              );
        }
        eR.accessor([
          "Content-Type",
          "Content-Length",
          "Accept",
          "Accept-Encoding",
          "User-Agent",
          "Authorization",
        ]),
          J.reduceDescriptors(eR.prototype, ({ value: e }, t) => {
            let n = t[0].toUpperCase() + t.slice(1);
            return {
              get: () => e,
              set(e) {
                this[n] = e;
              },
            };
          }),
          J.freezeMethods(eR),
          J.inherits(eL, Y, { __CANCEL__: !0 });
        var eU = function (e, t) {
            let n;
            let r = Array((e = e || 10)),
              i = Array(e),
              o = 0,
              s = 0;
            return (
              (t = void 0 !== t ? t : 1e3),
              function (a) {
                let c = Date.now(),
                  u = i[s];
                n || (n = c), (r[o] = a), (i[o] = c);
                let l = s,
                  f = 0;
                for (; l !== o; ) (f += r[l++]), (l %= e);
                if (((o = (o + 1) % e) === s && (s = (s + 1) % e), c - n < t))
                  return;
                let d = u && c - u;
                return d ? Math.round((1e3 * f) / d) : void 0;
              }
            );
          },
          eD = function (e, t) {
            let n,
              r,
              i = 0,
              o = 1e3 / t,
              s = (t, o = Date.now()) => {
                (i = o),
                  (n = null),
                  r && (clearTimeout(r), (r = null)),
                  e.apply(null, t);
              };
            return [
              (...e) => {
                let t = Date.now(),
                  a = t - i;
                a >= o
                  ? s(e, t)
                  : ((n = e),
                    r ||
                      (r = setTimeout(() => {
                        (r = null), s(n);
                      }, o - a)));
              },
              () => n && s(n),
            ];
          };
        let e_ = (e, t, n = 3) => {
            let r = 0,
              i = eU(50, 250);
            return eD((n) => {
              let o = n.loaded,
                s = n.lengthComputable ? n.total : void 0,
                a = o - r,
                c = i(a);
              (r = o),
                e({
                  loaded: o,
                  total: s,
                  progress: s ? o / s : void 0,
                  bytes: a,
                  rate: c || void 0,
                  estimated: c && s && o <= s ? (s - o) / c : void 0,
                  event: n,
                  lengthComputable: null != s,
                  [t ? "download" : "upload"]: !0,
                });
            }, n);
          },
          ej = (e, t) => {
            let n = null != e;
            return [
              (r) => t[0]({ lengthComputable: n, total: e, loaded: r }),
              t[1],
            ];
          },
          eG =
            (e) =>
            (...t) =>
              J.asap(() => e(...t));
        var eH = eE.hasStandardBrowserEnv
            ? (function () {
                let e;
                let t =
                    eE.navigator &&
                    /(msie|trident)/i.test(eE.navigator.userAgent),
                  n = document.createElement("a");
                function r(e) {
                  let r = e;
                  return (
                    t && (n.setAttribute("href", r), (r = n.href)),
                    n.setAttribute("href", r),
                    {
                      href: n.href,
                      protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                      host: n.host,
                      search: n.search ? n.search.replace(/^\?/, "") : "",
                      hash: n.hash ? n.hash.replace(/^#/, "") : "",
                      hostname: n.hostname,
                      port: n.port,
                      pathname:
                        "/" === n.pathname.charAt(0)
                          ? n.pathname
                          : "/" + n.pathname,
                    }
                  );
                }
                return (
                  (e = r(window.location.href)),
                  function (t) {
                    let n = J.isString(t) ? r(t) : t;
                    return n.protocol === e.protocol && n.host === e.host;
                  }
                );
              })()
            : function () {
                return !0;
              },
          eq = eE.hasStandardBrowserEnv
            ? {
                write(e, t, n, r, i, o) {
                  let s = [e + "=" + encodeURIComponent(t)];
                  J.isNumber(n) &&
                    s.push("expires=" + new Date(n).toGMTString()),
                    J.isString(r) && s.push("path=" + r),
                    J.isString(i) && s.push("domain=" + i),
                    !0 === o && s.push("secure"),
                    (document.cookie = s.join("; "));
                },
                read(e) {
                  let t = document.cookie.match(
                    RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                  );
                  return t ? decodeURIComponent(t[3]) : null;
                },
                remove(e) {
                  this.write(e, "", Date.now() - 864e5);
                },
              }
            : { write() {}, read: () => null, remove() {} };
        function ez(e, t) {
          return e && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)
            ? t
              ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "")
              : e
            : t;
        }
        let eQ = (e) => (e instanceof eR ? { ...e } : e);
        function eW(e, t) {
          t = t || {};
          let n = {};
          function r(e, t, n) {
            return J.isPlainObject(e) && J.isPlainObject(t)
              ? J.merge.call({ caseless: n }, e, t)
              : J.isPlainObject(t)
              ? J.merge({}, t)
              : J.isArray(t)
              ? t.slice()
              : t;
          }
          function i(e, t, n) {
            return J.isUndefined(t)
              ? J.isUndefined(e)
                ? void 0
                : r(void 0, e, n)
              : r(e, t, n);
          }
          function o(e, t) {
            if (!J.isUndefined(t)) return r(void 0, t);
          }
          function s(e, t) {
            return J.isUndefined(t)
              ? J.isUndefined(e)
                ? void 0
                : r(void 0, e)
              : r(void 0, t);
          }
          function a(n, i, o) {
            return o in t ? r(n, i) : o in e ? r(void 0, n) : void 0;
          }
          let c = {
            url: o,
            method: o,
            data: o,
            baseURL: s,
            transformRequest: s,
            transformResponse: s,
            paramsSerializer: s,
            timeout: s,
            timeoutMessage: s,
            withCredentials: s,
            withXSRFToken: s,
            adapter: s,
            responseType: s,
            xsrfCookieName: s,
            xsrfHeaderName: s,
            onUploadProgress: s,
            onDownloadProgress: s,
            decompress: s,
            maxContentLength: s,
            maxBodyLength: s,
            beforeRedirect: s,
            transport: s,
            httpAgent: s,
            httpsAgent: s,
            cancelToken: s,
            socketPath: s,
            responseEncoding: s,
            validateStatus: a,
            headers: (e, t) => i(eQ(e), eQ(t), !0),
          };
          return (
            J.forEach(Object.keys(Object.assign({}, e, t)), function (r) {
              let o = c[r] || i,
                s = o(e[r], t[r], r);
              (J.isUndefined(s) && o !== a) || (n[r] = s);
            }),
            n
          );
        }
        var eV = (e) => {
            let t;
            let n = eW({}, e),
              {
                data: r,
                withXSRFToken: i,
                xsrfHeaderName: o,
                xsrfCookieName: s,
                headers: a,
                auth: c,
              } = n;
            if (
              ((n.headers = a = eR.from(a)),
              (n.url = ef(ez(n.baseURL, n.url), e.params, e.paramsSerializer)),
              c &&
                a.set(
                  "Authorization",
                  "Basic " +
                    btoa(
                      (c.username || "") +
                        ":" +
                        (c.password
                          ? unescape(encodeURIComponent(c.password))
                          : "")
                    )
                ),
              J.isFormData(r))
            ) {
              if (eE.hasStandardBrowserEnv || eE.hasStandardBrowserWebWorkerEnv)
                a.setContentType(void 0);
              else if (!1 !== (t = a.getContentType())) {
                let [e, ...n] = t
                  ? t
                      .split(";")
                      .map((e) => e.trim())
                      .filter(Boolean)
                  : [];
                a.setContentType([e || "multipart/form-data", ...n].join("; "));
              }
            }
            if (
              eE.hasStandardBrowserEnv &&
              (i && J.isFunction(i) && (i = i(n)), i || (!1 !== i && eH(n.url)))
            ) {
              let e = o && s && eq.read(s);
              e && a.set(o, e);
            }
            return n;
          },
          eK =
            "undefined" != typeof XMLHttpRequest &&
            function (e) {
              return new Promise(function (t, n) {
                let r, i, o, s, a;
                let c = eV(e),
                  u = c.data,
                  l = eR.from(c.headers).normalize(),
                  {
                    responseType: f,
                    onUploadProgress: d,
                    onDownloadProgress: h,
                  } = c;
                function p() {
                  s && s(),
                    a && a(),
                    c.cancelToken && c.cancelToken.unsubscribe(r),
                    c.signal && c.signal.removeEventListener("abort", r);
                }
                let m = new XMLHttpRequest();
                function g() {
                  if (!m) return;
                  let r = eR.from(
                    "getAllResponseHeaders" in m && m.getAllResponseHeaders()
                  );
                  eF(
                    function (e) {
                      t(e), p();
                    },
                    function (e) {
                      n(e), p();
                    },
                    {
                      data:
                        f && "text" !== f && "json" !== f
                          ? m.response
                          : m.responseText,
                      status: m.status,
                      statusText: m.statusText,
                      headers: r,
                      config: e,
                      request: m,
                    }
                  ),
                    (m = null);
                }
                m.open(c.method.toUpperCase(), c.url, !0),
                  (m.timeout = c.timeout),
                  "onloadend" in m
                    ? (m.onloadend = g)
                    : (m.onreadystatechange = function () {
                        m &&
                          4 === m.readyState &&
                          (0 !== m.status ||
                            (m.responseURL &&
                              0 === m.responseURL.indexOf("file:"))) &&
                          setTimeout(g);
                      }),
                  (m.onabort = function () {
                    m &&
                      (n(new Y("Request aborted", Y.ECONNABORTED, e, m)),
                      (m = null));
                  }),
                  (m.onerror = function () {
                    n(new Y("Network Error", Y.ERR_NETWORK, e, m)), (m = null);
                  }),
                  (m.ontimeout = function () {
                    let t = c.timeout
                        ? "timeout of " + c.timeout + "ms exceeded"
                        : "timeout exceeded",
                      r = c.transitional || eh;
                    c.timeoutErrorMessage && (t = c.timeoutErrorMessage),
                      n(
                        new Y(
                          t,
                          r.clarifyTimeoutError ? Y.ETIMEDOUT : Y.ECONNABORTED,
                          e,
                          m
                        )
                      ),
                      (m = null);
                  }),
                  void 0 === u && l.setContentType(null),
                  "setRequestHeader" in m &&
                    J.forEach(l.toJSON(), function (e, t) {
                      m.setRequestHeader(t, e);
                    }),
                  J.isUndefined(c.withCredentials) ||
                    (m.withCredentials = !!c.withCredentials),
                  f && "json" !== f && (m.responseType = c.responseType),
                  h &&
                    (([o, a] = e_(h, !0)), m.addEventListener("progress", o)),
                  d &&
                    m.upload &&
                    (([i, s] = e_(d)),
                    m.upload.addEventListener("progress", i),
                    m.upload.addEventListener("loadend", s)),
                  (c.cancelToken || c.signal) &&
                    ((r = (t) => {
                      m &&
                        (n(!t || t.type ? new eL(null, e, m) : t),
                        m.abort(),
                        (m = null));
                    }),
                    c.cancelToken && c.cancelToken.subscribe(r),
                    c.signal &&
                      (c.signal.aborted
                        ? r()
                        : c.signal.addEventListener("abort", r)));
                let y = (function (e) {
                  let t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
                  return (t && t[1]) || "";
                })(c.url);
                if (y && -1 === eE.protocols.indexOf(y)) {
                  n(
                    new Y(
                      "Unsupported protocol " + y + ":",
                      Y.ERR_BAD_REQUEST,
                      e
                    )
                  );
                  return;
                }
                m.send(u || null);
              });
            },
          e$ = (e, t) => {
            let { length: n } = (e = e ? e.filter(Boolean) : []);
            if (t || n) {
              let n,
                r = new AbortController(),
                i = function (e) {
                  if (!n) {
                    (n = !0), s();
                    let t = e instanceof Error ? e : this.reason;
                    r.abort(
                      t instanceof Y
                        ? t
                        : new eL(t instanceof Error ? t.message : t)
                    );
                  }
                },
                o =
                  t &&
                  setTimeout(() => {
                    (o = null),
                      i(new Y(`timeout ${t} of ms exceeded`, Y.ETIMEDOUT));
                  }, t),
                s = () => {
                  e &&
                    (o && clearTimeout(o),
                    (o = null),
                    e.forEach((e) => {
                      e.unsubscribe
                        ? e.unsubscribe(i)
                        : e.removeEventListener("abort", i);
                    }),
                    (e = null));
                };
              e.forEach((e) => e.addEventListener("abort", i));
              let { signal: a } = r;
              return (a.unsubscribe = () => J.asap(s)), a;
            }
          };
        let eZ = function* (e, t) {
            let n,
              r = e.byteLength;
            if (!t || r < t) {
              yield e;
              return;
            }
            let i = 0;
            for (; i < r; ) (n = i + t), yield e.slice(i, n), (i = n);
          },
          eJ = async function* (e, t) {
            for await (let n of eY(e)) yield* eZ(n, t);
          },
          eY = async function* (e) {
            if (e[Symbol.asyncIterator]) {
              yield* e;
              return;
            }
            let t = e.getReader();
            try {
              for (;;) {
                let { done: e, value: n } = await t.read();
                if (e) break;
                yield n;
              }
            } finally {
              await t.cancel();
            }
          },
          eX = (e, t, n, r) => {
            let i;
            let o = eJ(e, t),
              s = 0,
              a = (e) => {
                !i && ((i = !0), r && r(e));
              };
            return new ReadableStream(
              {
                async pull(e) {
                  try {
                    let { done: t, value: r } = await o.next();
                    if (t) {
                      a(), e.close();
                      return;
                    }
                    let i = r.byteLength;
                    if (n) {
                      let e = (s += i);
                      n(e);
                    }
                    e.enqueue(new Uint8Array(r));
                  } catch (e) {
                    throw (a(e), e);
                  }
                },
                cancel: (e) => (a(e), o.return()),
              },
              { highWaterMark: 2 }
            );
          },
          e0 =
            "function" == typeof fetch &&
            "function" == typeof Request &&
            "function" == typeof Response,
          e1 = e0 && "function" == typeof ReadableStream,
          e2 =
            e0 &&
            ("function" == typeof TextEncoder
              ? ((o = new TextEncoder()), (e) => o.encode(e))
              : async (e) =>
                  new Uint8Array(await new Response(e).arrayBuffer())),
          e6 = (e, ...t) => {
            try {
              return !!e(...t);
            } catch (e) {
              return !1;
            }
          },
          e5 =
            e1 &&
            e6(() => {
              let e = !1,
                t = new Request(eE.origin, {
                  body: new ReadableStream(),
                  method: "POST",
                  get duplex() {
                    return (e = !0), "half";
                  },
                }).headers.has("Content-Type");
              return e && !t;
            }),
          e3 = e1 && e6(() => J.isReadableStream(new Response("").body)),
          e8 = { stream: e3 && ((e) => e.body) };
        e0 &&
          ((l = new Response()),
          ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e) => {
            e8[e] ||
              (e8[e] = J.isFunction(l[e])
                ? (t) => t[e]()
                : (t, n) => {
                    throw new Y(
                      `Response type '${e}' is not supported`,
                      Y.ERR_NOT_SUPPORT,
                      n
                    );
                  });
          }));
        let e4 = async (e) => {
            if (null == e) return 0;
            if (J.isBlob(e)) return e.size;
            if (J.isSpecCompliantForm(e)) {
              let t = new Request(eE.origin, { method: "POST", body: e });
              return (await t.arrayBuffer()).byteLength;
            }
            return J.isArrayBufferView(e) || J.isArrayBuffer(e)
              ? e.byteLength
              : (J.isURLSearchParams(e) && (e += ""), J.isString(e))
              ? (await e2(e)).byteLength
              : void 0;
          },
          e9 = async (e, t) => {
            let n = J.toFiniteNumber(e.getContentLength());
            return null == n ? e4(t) : n;
          },
          e7 = {
            http: null,
            xhr: eK,
            fetch:
              e0 &&
              (async (e) => {
                let t,
                  n,
                  {
                    url: r,
                    method: i,
                    data: o,
                    signal: s,
                    cancelToken: a,
                    timeout: c,
                    onDownloadProgress: u,
                    onUploadProgress: l,
                    responseType: f,
                    headers: d,
                    withCredentials: h = "same-origin",
                    fetchOptions: p,
                  } = eV(e);
                f = f ? (f + "").toLowerCase() : "text";
                let m = e$([s, a && a.toAbortSignal()], c),
                  g =
                    m &&
                    m.unsubscribe &&
                    (() => {
                      m.unsubscribe();
                    });
                try {
                  if (
                    l &&
                    e5 &&
                    "get" !== i &&
                    "head" !== i &&
                    0 !== (n = await e9(d, o))
                  ) {
                    let e,
                      t = new Request(r, {
                        method: "POST",
                        body: o,
                        duplex: "half",
                      });
                    if (
                      (J.isFormData(o) &&
                        (e = t.headers.get("content-type")) &&
                        d.setContentType(e),
                      t.body)
                    ) {
                      let [e, r] = ej(n, e_(eG(l)));
                      o = eX(t.body, 65536, e, r);
                    }
                  }
                  J.isString(h) || (h = h ? "include" : "omit");
                  let s = "credentials" in Request.prototype;
                  t = new Request(r, {
                    ...p,
                    signal: m,
                    method: i.toUpperCase(),
                    headers: d.normalize().toJSON(),
                    body: o,
                    duplex: "half",
                    credentials: s ? h : void 0,
                  });
                  let a = await fetch(t),
                    c = e3 && ("stream" === f || "response" === f);
                  if (e3 && (u || (c && g))) {
                    let e = {};
                    ["status", "statusText", "headers"].forEach((t) => {
                      e[t] = a[t];
                    });
                    let t = J.toFiniteNumber(a.headers.get("content-length")),
                      [n, r] = (u && ej(t, e_(eG(u), !0))) || [];
                    a = new Response(
                      eX(a.body, 65536, n, () => {
                        r && r(), g && g();
                      }),
                      e
                    );
                  }
                  f = f || "text";
                  let y = await e8[J.findKey(e8, f) || "text"](a, e);
                  return (
                    !c && g && g(),
                    await new Promise((n, r) => {
                      eF(n, r, {
                        data: y,
                        headers: eR.from(a.headers),
                        status: a.status,
                        statusText: a.statusText,
                        config: e,
                        request: t,
                      });
                    })
                  );
                } catch (n) {
                  if (
                    (g && g(),
                    n && "TypeError" === n.name && /fetch/i.test(n.message))
                  )
                    throw Object.assign(
                      new Y("Network Error", Y.ERR_NETWORK, e, t),
                      { cause: n.cause || n }
                    );
                  throw Y.from(n, n && n.code, e, t);
                }
              }),
          };
        J.forEach(e7, (e, t) => {
          if (e) {
            try {
              Object.defineProperty(e, "name", { value: t });
            } catch (e) {}
            Object.defineProperty(e, "adapterName", { value: t });
          }
        });
        let te = (e) => `- ${e}`,
          tt = (e) => J.isFunction(e) || null === e || !1 === e;
        var tn = (e) => {
          let t, n;
          let { length: r } = (e = J.isArray(e) ? e : [e]),
            i = {};
          for (let o = 0; o < r; o++) {
            let r;
            if (
              ((n = t = e[o]),
              !tt(t) && void 0 === (n = e7[(r = String(t)).toLowerCase()]))
            )
              throw new Y(`Unknown adapter '${r}'`);
            if (n) break;
            i[r || "#" + o] = n;
          }
          if (!n) {
            let e = Object.entries(i).map(
              ([e, t]) =>
                `adapter ${e} ` +
                (!1 === t
                  ? "is not supported by the environment"
                  : "is not available in the build")
            );
            throw new Y(
              "There is no suitable adapter to dispatch the request " +
                (r
                  ? e.length > 1
                    ? "since :\n" + e.map(te).join("\n")
                    : " " + te(e[0])
                  : "as no adapter specified"),
              "ERR_NOT_SUPPORT"
            );
          }
          return n;
        };
        function tr(e) {
          if (
            (e.cancelToken && e.cancelToken.throwIfRequested(),
            e.signal && e.signal.aborted)
          )
            throw new eL(null, e);
        }
        function ti(e) {
          return (
            tr(e),
            (e.headers = eR.from(e.headers)),
            (e.data = eN.call(e, e.transformRequest)),
            -1 !== ["post", "put", "patch"].indexOf(e.method) &&
              e.headers.setContentType("application/x-www-form-urlencoded", !1),
            tn(e.adapter || ex.adapter)(e).then(
              function (t) {
                return (
                  tr(e),
                  (t.data = eN.call(e, e.transformResponse, t)),
                  (t.headers = eR.from(t.headers)),
                  t
                );
              },
              function (t) {
                return (
                  !eM(t) &&
                    (tr(e),
                    t &&
                      t.response &&
                      ((t.response.data = eN.call(
                        e,
                        e.transformResponse,
                        t.response
                      )),
                      (t.response.headers = eR.from(t.response.headers)))),
                  Promise.reject(t)
                );
              }
            )
          );
        }
        let to = "1.7.7",
          ts = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach(
          (e, t) => {
            ts[e] = function (n) {
              return typeof n === e || "a" + (t < 1 ? "n " : " ") + e;
            };
          }
        );
        let ta = {};
        ts.transitional = function (e, t, n) {
          function r(e, t) {
            return (
              "[Axios v" +
              to +
              "] Transitional option '" +
              e +
              "'" +
              t +
              (n ? ". " + n : "")
            );
          }
          return (n, i, o) => {
            if (!1 === e)
              throw new Y(
                r(i, " has been removed" + (t ? " in " + t : "")),
                Y.ERR_DEPRECATED
              );
            return (
              t &&
                !ta[i] &&
                ((ta[i] = !0),
                console.warn(
                  r(
                    i,
                    " has been deprecated since v" +
                      t +
                      " and will be removed in the near future"
                  )
                )),
              !e || e(n, i, o)
            );
          };
        };
        var tc = {
          assertOptions: function (e, t, n) {
            if ("object" != typeof e)
              throw new Y("options must be an object", Y.ERR_BAD_OPTION_VALUE);
            let r = Object.keys(e),
              i = r.length;
            for (; i-- > 0; ) {
              let o = r[i],
                s = t[o];
              if (s) {
                let t = e[o],
                  n = void 0 === t || s(t, o, e);
                if (!0 !== n)
                  throw new Y(
                    "option " + o + " must be " + n,
                    Y.ERR_BAD_OPTION_VALUE
                  );
                continue;
              }
              if (!0 !== n)
                throw new Y("Unknown option " + o, Y.ERR_BAD_OPTION);
            }
          },
          validators: ts,
        };
        let tu = tc.validators;
        class tl {
          constructor(e) {
            (this.defaults = e),
              (this.interceptors = { request: new ed(), response: new ed() });
          }
          async request(e, t) {
            try {
              return await this._request(e, t);
            } catch (e) {
              if (e instanceof Error) {
                let t;
                Error.captureStackTrace
                  ? Error.captureStackTrace((t = {}))
                  : (t = Error());
                let n = t.stack ? t.stack.replace(/^.+\n/, "") : "";
                try {
                  e.stack
                    ? n &&
                      !String(e.stack).endsWith(n.replace(/^.+\n.+\n/, "")) &&
                      (e.stack += "\n" + n)
                    : (e.stack = n);
                } catch (e) {}
              }
              throw e;
            }
          }
          _request(e, t) {
            let n, r;
            "string" == typeof e ? ((t = t || {}).url = e) : (t = e || {});
            let {
              transitional: i,
              paramsSerializer: o,
              headers: s,
            } = (t = eW(this.defaults, t));
            void 0 !== i &&
              tc.assertOptions(
                i,
                {
                  silentJSONParsing: tu.transitional(tu.boolean),
                  forcedJSONParsing: tu.transitional(tu.boolean),
                  clarifyTimeoutError: tu.transitional(tu.boolean),
                },
                !1
              ),
              null != o &&
                (J.isFunction(o)
                  ? (t.paramsSerializer = { serialize: o })
                  : tc.assertOptions(
                      o,
                      { encode: tu.function, serialize: tu.function },
                      !0
                    )),
              (t.method = (
                t.method ||
                this.defaults.method ||
                "get"
              ).toLowerCase());
            let a = s && J.merge(s.common, s[t.method]);
            s &&
              J.forEach(
                ["delete", "get", "head", "post", "put", "patch", "common"],
                (e) => {
                  delete s[e];
                }
              ),
              (t.headers = eR.concat(a, s));
            let c = [],
              u = !0;
            this.interceptors.request.forEach(function (e) {
              ("function" != typeof e.runWhen || !1 !== e.runWhen(t)) &&
                ((u = u && e.synchronous), c.unshift(e.fulfilled, e.rejected));
            });
            let l = [];
            this.interceptors.response.forEach(function (e) {
              l.push(e.fulfilled, e.rejected);
            });
            let f = 0;
            if (!u) {
              let e = [ti.bind(this), void 0];
              for (
                e.unshift.apply(e, c),
                  e.push.apply(e, l),
                  r = e.length,
                  n = Promise.resolve(t);
                f < r;

              )
                n = n.then(e[f++], e[f++]);
              return n;
            }
            r = c.length;
            let d = t;
            for (f = 0; f < r; ) {
              let e = c[f++],
                t = c[f++];
              try {
                d = e(d);
              } catch (e) {
                t.call(this, e);
                break;
              }
            }
            try {
              n = ti.call(this, d);
            } catch (e) {
              return Promise.reject(e);
            }
            for (f = 0, r = l.length; f < r; ) n = n.then(l[f++], l[f++]);
            return n;
          }
          getUri(e) {
            return ef(
              ez((e = eW(this.defaults, e)).baseURL, e.url),
              e.params,
              e.paramsSerializer
            );
          }
        }
        J.forEach(["delete", "get", "head", "options"], function (e) {
          tl.prototype[e] = function (t, n) {
            return this.request(
              eW(n || {}, { method: e, url: t, data: (n || {}).data })
            );
          };
        }),
          J.forEach(["post", "put", "patch"], function (e) {
            function t(t) {
              return function (n, r, i) {
                return this.request(
                  eW(i || {}, {
                    method: e,
                    headers: t ? { "Content-Type": "multipart/form-data" } : {},
                    url: n,
                    data: r,
                  })
                );
              };
            }
            (tl.prototype[e] = t()), (tl.prototype[e + "Form"] = t(!0));
          });
        class tf {
          constructor(e) {
            let t;
            if ("function" != typeof e)
              throw TypeError("executor must be a function.");
            this.promise = new Promise(function (e) {
              t = e;
            });
            let n = this;
            this.promise.then((e) => {
              if (!n._listeners) return;
              let t = n._listeners.length;
              for (; t-- > 0; ) n._listeners[t](e);
              n._listeners = null;
            }),
              (this.promise.then = (e) => {
                let t;
                let r = new Promise((e) => {
                  n.subscribe(e), (t = e);
                }).then(e);
                return (
                  (r.cancel = function () {
                    n.unsubscribe(t);
                  }),
                  r
                );
              }),
              e(function (e, r, i) {
                n.reason || ((n.reason = new eL(e, r, i)), t(n.reason));
              });
          }
          throwIfRequested() {
            if (this.reason) throw this.reason;
          }
          subscribe(e) {
            if (this.reason) {
              e(this.reason);
              return;
            }
            this._listeners ? this._listeners.push(e) : (this._listeners = [e]);
          }
          unsubscribe(e) {
            if (!this._listeners) return;
            let t = this._listeners.indexOf(e);
            -1 !== t && this._listeners.splice(t, 1);
          }
          toAbortSignal() {
            let e = new AbortController(),
              t = (t) => {
                e.abort(t);
              };
            return (
              this.subscribe(t),
              (e.signal.unsubscribe = () => this.unsubscribe(t)),
              e.signal
            );
          }
          static source() {
            let e;
            return {
              token: new tf(function (t) {
                e = t;
              }),
              cancel: e,
            };
          }
        }
        let td = {
          Continue: 100,
          SwitchingProtocols: 101,
          Processing: 102,
          EarlyHints: 103,
          Ok: 200,
          Created: 201,
          Accepted: 202,
          NonAuthoritativeInformation: 203,
          NoContent: 204,
          ResetContent: 205,
          PartialContent: 206,
          MultiStatus: 207,
          AlreadyReported: 208,
          ImUsed: 226,
          MultipleChoices: 300,
          MovedPermanently: 301,
          Found: 302,
          SeeOther: 303,
          NotModified: 304,
          UseProxy: 305,
          Unused: 306,
          TemporaryRedirect: 307,
          PermanentRedirect: 308,
          BadRequest: 400,
          Unauthorized: 401,
          PaymentRequired: 402,
          Forbidden: 403,
          NotFound: 404,
          MethodNotAllowed: 405,
          NotAcceptable: 406,
          ProxyAuthenticationRequired: 407,
          RequestTimeout: 408,
          Conflict: 409,
          Gone: 410,
          LengthRequired: 411,
          PreconditionFailed: 412,
          PayloadTooLarge: 413,
          UriTooLong: 414,
          UnsupportedMediaType: 415,
          RangeNotSatisfiable: 416,
          ExpectationFailed: 417,
          ImATeapot: 418,
          MisdirectedRequest: 421,
          UnprocessableEntity: 422,
          Locked: 423,
          FailedDependency: 424,
          TooEarly: 425,
          UpgradeRequired: 426,
          PreconditionRequired: 428,
          TooManyRequests: 429,
          RequestHeaderFieldsTooLarge: 431,
          UnavailableForLegalReasons: 451,
          InternalServerError: 500,
          NotImplemented: 501,
          BadGateway: 502,
          ServiceUnavailable: 503,
          GatewayTimeout: 504,
          HttpVersionNotSupported: 505,
          VariantAlsoNegotiates: 506,
          InsufficientStorage: 507,
          LoopDetected: 508,
          NotExtended: 510,
          NetworkAuthenticationRequired: 511,
        };
        Object.entries(td).forEach(([e, t]) => {
          td[t] = e;
        });
        let th = (function e(t) {
          let n = new tl(t),
            r = d(tl.prototype.request, n);
          return (
            J.extend(r, tl.prototype, n, { allOwnKeys: !0 }),
            J.extend(r, n, null, { allOwnKeys: !0 }),
            (r.create = function (n) {
              return e(eW(t, n));
            }),
            r
          );
        })(ex);
        (th.Axios = tl),
          (th.CanceledError = eL),
          (th.CancelToken = tf),
          (th.isCancel = eM),
          (th.VERSION = to),
          (th.toFormData = es),
          (th.AxiosError = Y),
          (th.Cancel = th.CanceledError),
          (th.all = function (e) {
            return Promise.all(e);
          }),
          (th.spread = function (e) {
            return function (t) {
              return e.apply(null, t);
            };
          }),
          (th.isAxiosError = function (e) {
            return J.isObject(e) && !0 === e.isAxiosError;
          }),
          (th.mergeConfig = eW),
          (th.AxiosHeaders = eR),
          (th.formToJSON = (e) => eC(J.isHTMLForm(e) ? new FormData(e) : e)),
          (th.getAdapter = tn),
          (th.HttpStatusCode = td),
          (th.default = th);
        var tp = th;
      },
      62827: function (e, t, n) {
        "use strict";
        n.d(t, {
          $l: function () {
            return s;
          },
          BN: function () {
            return F;
          },
          DY: function () {
            return p;
          },
          J$: function () {
            return z;
          },
          JN: function () {
            return A;
          },
          LI: function () {
            return T;
          },
          PM: function () {
            return u;
          },
          W6: function () {
            return S;
          },
          i_: function () {
            return o;
          },
          kY: function () {
            return K;
          },
          ko: function () {
            return J;
          },
          kw: function () {
            return P;
          },
          mf: function () {
            return c;
          },
          o8: function () {
            return a;
          },
          qC: function () {
            return R;
          },
          s6: function () {
            return Z;
          },
          sj: function () {
            return L;
          },
          u3: function () {
            return M;
          },
          u_: function () {
            return G;
          },
          w6: function () {
            return I;
          },
          xD: function () {
            return Y;
          },
        });
        var r = n(2265);
        let i = () => {},
          o = i(),
          s = Object,
          a = (e) => e === o,
          c = (e) => "function" == typeof e,
          u = (e, t) => ({ ...e, ...t }),
          l = (e) => c(e.then),
          f = new WeakMap(),
          d = 0,
          h = (e) => {
            let t, n;
            let r = typeof e,
              i = e && e.constructor,
              o = i == Date;
            if (s(e) !== e || o || i == RegExp)
              t = o
                ? e.toJSON()
                : "symbol" == r
                ? e.toString()
                : "string" == r
                ? JSON.stringify(e)
                : "" + e;
            else {
              if ((t = f.get(e))) return t;
              if (((t = ++d + "~"), f.set(e, t), i == Array)) {
                for (n = 0, t = "@"; n < e.length; n++) t += h(e[n]) + ",";
                f.set(e, t);
              }
              if (i == s) {
                t = "#";
                let r = s.keys(e).sort();
                for (; !a((n = r.pop())); )
                  a(e[n]) || (t += n + ":" + h(e[n]) + ",");
                f.set(e, t);
              }
            }
            return t;
          },
          p = new WeakMap(),
          m = {},
          g = {},
          y = "undefined",
          b = typeof window != y,
          w = typeof document != y,
          v = () => b && typeof window.requestAnimationFrame != y,
          A = (e, t) => {
            let n = p.get(e);
            return [
              () => (!a(t) && e.get(t)) || m,
              (r) => {
                if (!a(t)) {
                  let i = e.get(t);
                  t in g || (g[t] = i), n[5](t, u(i, r), i || m);
                }
              },
              n[6],
              () => (!a(t) && t in g ? g[t] : (!a(t) && e.get(t)) || m),
            ];
          },
          E = !0,
          [C, x] =
            b && window.addEventListener
              ? [
                  window.addEventListener.bind(window),
                  window.removeEventListener.bind(window),
                ]
              : [i, i],
          B = {
            initFocus: (e) => (
              w && document.addEventListener("visibilitychange", e),
              C("focus", e),
              () => {
                w && document.removeEventListener("visibilitychange", e),
                  x("focus", e);
              }
            ),
            initReconnect: (e) => {
              let t = () => {
                  (E = !0), e();
                },
                n = () => {
                  E = !1;
                };
              return (
                C("online", t),
                C("offline", n),
                () => {
                  x("online", t), x("offline", n);
                }
              );
            },
          },
          I = !r.useId,
          S = !b || "Deno" in window,
          P = (e) => (v() ? window.requestAnimationFrame(e) : setTimeout(e, 1)),
          T = S ? r.useEffect : r.useLayoutEffect,
          O = "undefined" != typeof navigator && navigator.connection,
          k =
            !S &&
            O &&
            (["slow-2g", "2g"].includes(O.effectiveType) || O.saveData),
          R = (e) => {
            if (c(e))
              try {
                e = e();
              } catch (t) {
                e = "";
              }
            let t = e;
            return [
              (e =
                "string" == typeof e
                  ? e
                  : (Array.isArray(e) ? e.length : e)
                  ? h(e)
                  : ""),
              t,
            ];
          },
          N = 0,
          M = () => ++N;
        var L = {
          __proto__: null,
          ERROR_REVALIDATE_EVENT: 3,
          FOCUS_EVENT: 0,
          MUTATE_EVENT: 2,
          RECONNECT_EVENT: 1,
        };
        async function F(...e) {
          let [t, n, r, i] = e,
            s = u(
              { populateCache: !0, throwOnError: !0 },
              "boolean" == typeof i ? { revalidate: i } : i || {}
            ),
            f = s.populateCache,
            d = s.rollbackOnError,
            h = s.optimisticData,
            m = (e) => ("function" == typeof d ? d(e) : !1 !== d),
            g = s.throwOnError;
          if (c(n)) {
            let e = [];
            for (let r of t.keys())
              !/^\$(inf|sub)\$/.test(r) && n(t.get(r)._k) && e.push(r);
            return Promise.all(e.map(y));
          }
          return y(n);
          async function y(n) {
            let i;
            let [u] = R(n);
            if (!u) return;
            let [d, y] = A(t, u),
              [b, w, v, E] = p.get(t),
              C = () => {
                let e = b[u];
                return (c(s.revalidate)
                  ? s.revalidate(d().data, n)
                  : !1 !== s.revalidate) &&
                  (delete v[u], delete E[u], e && e[0])
                  ? e[0](2).then(() => d().data)
                  : d().data;
              };
            if (e.length < 3) return C();
            let x = r,
              B = M();
            w[u] = [B, 0];
            let I = !a(h),
              S = d(),
              P = S.data,
              T = S._c,
              O = a(T) ? P : T;
            if ((I && y({ data: (h = c(h) ? h(O, P) : h), _c: O }), c(x)))
              try {
                x = x(O);
              } catch (e) {
                i = e;
              }
            if (x && l(x)) {
              if (
                ((x = await x.catch((e) => {
                  i = e;
                })),
                B !== w[u][0])
              ) {
                if (i) throw i;
                return x;
              }
              i && I && m(i) && ((f = !0), y({ data: O, _c: o }));
            }
            if (
              (f &&
                !i &&
                (c(f)
                  ? y({ data: f(x, O), error: o, _c: o })
                  : y({ data: x, error: o, _c: o })),
              (w[u][1] = M()),
              Promise.resolve(C()).then(() => {
                y({ _c: o });
              }),
              i)
            ) {
              if (g) throw i;
              return;
            }
            return x;
          }
        }
        let U = (e, t) => {
            for (let n in e) e[n][0] && e[n][0](t);
          },
          D = (e, t) => {
            if (!p.has(e)) {
              let n = u(B, t),
                r = {},
                s = F.bind(o, e),
                a = i,
                c = {},
                l = (e, t) => {
                  let n = c[e] || [];
                  return (c[e] = n), n.push(t), () => n.splice(n.indexOf(t), 1);
                },
                f = (t, n, r) => {
                  e.set(t, n);
                  let i = c[t];
                  if (i) for (let e of i) e(n, r);
                },
                d = () => {
                  if (!p.has(e) && (p.set(e, [r, {}, {}, {}, s, f, l]), !S)) {
                    let t = n.initFocus(setTimeout.bind(o, U.bind(o, r, 0))),
                      i = n.initReconnect(setTimeout.bind(o, U.bind(o, r, 1)));
                    a = () => {
                      t && t(), i && i(), p.delete(e);
                    };
                  }
                };
              return d(), [e, s, d, a];
            }
            return [e, p.get(e)[4]];
          },
          [_, j] = D(new Map()),
          G = u(
            {
              onLoadingSlow: i,
              onSuccess: i,
              onError: i,
              onErrorRetry: (e, t, n, r, i) => {
                let o = n.errorRetryCount,
                  s = i.retryCount,
                  c =
                    ~~((Math.random() + 0.5) * (1 << (s < 8 ? s : 8))) *
                    n.errorRetryInterval;
                (a(o) || !(s > o)) && setTimeout(r, c, i);
              },
              onDiscarded: i,
              revalidateOnFocus: !0,
              revalidateOnReconnect: !0,
              revalidateIfStale: !0,
              shouldRetryOnError: !0,
              errorRetryInterval: k ? 1e4 : 5e3,
              focusThrottleInterval: 5e3,
              dedupingInterval: 2e3,
              loadingTimeout: k ? 5e3 : 3e3,
              compare: (e, t) => h(e) == h(t),
              isPaused: () => !1,
              cache: _,
              mutate: j,
              fallback: {},
            },
            {
              isOnline: () => E,
              isVisible: () => {
                let e = w && document.visibilityState;
                return a(e) || "hidden" !== e;
              },
            }
          ),
          H = (e, t) => {
            let n = u(e, t);
            if (t) {
              let { use: r, fallback: i } = e,
                { use: o, fallback: s } = t;
              r && o && (n.use = r.concat(o)), i && s && (n.fallback = u(i, s));
            }
            return n;
          },
          q = (0, r.createContext)({}),
          z = (e) => {
            let { value: t } = e,
              n = (0, r.useContext)(q),
              i = c(t),
              s = (0, r.useMemo)(() => (i ? t(n) : t), [i, n, t]),
              a = (0, r.useMemo)(() => (i ? s : H(n, s)), [i, n, s]),
              l = s && s.provider,
              f = (0, r.useRef)(o);
            l && !f.current && (f.current = D(l(a.cache || _), s));
            let d = f.current;
            return (
              d && ((a.cache = d[0]), (a.mutate = d[1])),
              T(() => {
                if (d) return d[2] && d[2](), d[3];
              }, []),
              (0, r.createElement)(q.Provider, u(e, { value: a }))
            );
          },
          Q = b && window.__SWR_DEVTOOLS_USE__,
          W = Q ? window.__SWR_DEVTOOLS_USE__ : [],
          V = (e) =>
            c(e[1])
              ? [e[0], e[1], e[2] || {}]
              : [e[0], null, (null === e[1] ? e[2] : e[1]) || {}],
          K = () => u(G, (0, r.useContext)(q)),
          $ = W.concat((e) => (t, n, r) => {
            let i =
              n &&
              ((...e) => {
                let [r] = R(t),
                  [, , , i] = p.get(_);
                if (r.startsWith("$inf$")) return n(...e);
                let o = i[r];
                return a(o) ? n(...e) : (delete i[r], o);
              });
            return e(t, i, r);
          }),
          Z = (e) =>
            function (...t) {
              let n = K(),
                [r, i, o] = V(t),
                s = H(n, o),
                a = e,
                { use: c } = s,
                u = (c || []).concat($);
              for (let e = u.length; e--; ) a = u[e](a);
              return a(r, i || s.fetcher || null, s);
            },
          J = (e, t, n) => {
            let r = t[e] || (t[e] = []);
            return (
              r.push(n),
              () => {
                let e = r.indexOf(n);
                e >= 0 && ((r[e] = r[r.length - 1]), r.pop());
              }
            );
          },
          Y =
            (e, t) =>
            (...n) => {
              let [r, i, o] = V(n),
                s = (o.use || []).concat(t);
              return e(r, i, { ...o, use: s });
            };
        Q && (window.__SWR_DEVTOOLS_REACT__ = r);
      },
      65582: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return f;
          },
        });
        var r = n(2265),
          i = n(3486),
          o = n(62827);
        let s =
            r.use ||
            ((e) => {
              if ("pending" === e.status) throw e;
              if ("fulfilled" === e.status) return e.value;
              if ("rejected" === e.status) throw e.reason;
              throw (
                ((e.status = "pending"),
                e.then(
                  (t) => {
                    (e.status = "fulfilled"), (e.value = t);
                  },
                  (t) => {
                    (e.status = "rejected"), (e.reason = t);
                  }
                ),
                e)
              );
            }),
          a = { dedupe: !0 };
        o.$l.defineProperty(o.J$, "defaultValue", { value: o.u_ });
        let c = (0, o.s6)((e, t, n) => {
            let {
                cache: c,
                compare: u,
                suspense: l,
                fallbackData: f,
                revalidateOnMount: d,
                revalidateIfStale: h,
                refreshInterval: p,
                refreshWhenHidden: m,
                refreshWhenOffline: g,
                keepPreviousData: y,
              } = n,
              [b, w, v, A] = o.DY.get(c),
              [E, C] = (0, o.qC)(e),
              x = (0, r.useRef)(!1),
              B = (0, r.useRef)(!1),
              I = (0, r.useRef)(E),
              S = (0, r.useRef)(t),
              P = (0, r.useRef)(n),
              T = () => P.current,
              O = () => T().isVisible() && T().isOnline(),
              [k, R, N, M] = (0, o.JN)(c, E),
              L = (0, r.useRef)({}).current,
              F = (0, o.o8)(f) ? n.fallback[E] : f,
              U = (e, t) => {
                for (let n in L)
                  if ("data" === n) {
                    if (!u(e[n], t[n]) && (!(0, o.o8)(e[n]) || !u(W, t[n])))
                      return !1;
                  } else if (t[n] !== e[n]) return !1;
                return !0;
              },
              D = (0, r.useMemo)(() => {
                let e =
                    !!E &&
                    !!t &&
                    ((0, o.o8)(d)
                      ? !T().isPaused() && !l && (!!(0, o.o8)(h) || h)
                      : d),
                  n = (t) => {
                    let n = (0, o.PM)(t);
                    return (delete n._k, e)
                      ? { isValidating: !0, isLoading: !0, ...n }
                      : n;
                  },
                  r = k(),
                  i = M(),
                  s = n(r),
                  a = r === i ? s : n(i),
                  c = s;
                return [
                  () => {
                    let e = n(k());
                    return U(e, c)
                      ? ((c.data = e.data),
                        (c.isLoading = e.isLoading),
                        (c.isValidating = e.isValidating),
                        (c.error = e.error),
                        c)
                      : ((c = e), e);
                  },
                  () => a,
                ];
              }, [c, E]),
              _ = (0, i.useSyncExternalStore)(
                (0, r.useCallback)(
                  (e) =>
                    N(E, (t, n) => {
                      U(n, t) || e();
                    }),
                  [c, E]
                ),
                D[0],
                D[1]
              ),
              j = !x.current,
              G = b[E] && b[E].length > 0,
              H = _.data,
              q = (0, o.o8)(H) ? F : H,
              z = _.error,
              Q = (0, r.useRef)(q),
              W = y ? ((0, o.o8)(H) ? Q.current : H) : q,
              V =
                (!G || !!(0, o.o8)(z)) &&
                (j && !(0, o.o8)(d)
                  ? d
                  : !T().isPaused() &&
                    (l ? !(0, o.o8)(q) && h : (0, o.o8)(q) || h)),
              K = !!(E && t && j && V),
              $ = (0, o.o8)(_.isValidating) ? K : _.isValidating,
              Z = (0, o.o8)(_.isLoading) ? K : _.isLoading,
              J = (0, r.useCallback)(
                async (e) => {
                  let t, r;
                  let i = S.current;
                  if (!E || !i || B.current || T().isPaused()) return !1;
                  let s = !0,
                    a = e || {},
                    c = !v[E] || !a.dedupe,
                    l = () =>
                      o.w6
                        ? !B.current && E === I.current && x.current
                        : E === I.current,
                    f = { isValidating: !1, isLoading: !1 },
                    d = () => {
                      R(f);
                    },
                    h = () => {
                      let e = v[E];
                      e && e[1] === r && delete v[E];
                    },
                    p = { isValidating: !0 };
                  (0, o.o8)(k().data) && (p.isLoading = !0);
                  try {
                    if (
                      (c &&
                        (R(p),
                        n.loadingTimeout &&
                          (0, o.o8)(k().data) &&
                          setTimeout(() => {
                            s && l() && T().onLoadingSlow(E, n);
                          }, n.loadingTimeout),
                        (v[E] = [i(C), (0, o.u3)()])),
                      ([t, r] = v[E]),
                      (t = await t),
                      c && setTimeout(h, n.dedupingInterval),
                      !v[E] || v[E][1] !== r)
                    )
                      return c && l() && T().onDiscarded(E), !1;
                    f.error = o.i_;
                    let e = w[E];
                    if (!(0, o.o8)(e) && (r <= e[0] || r <= e[1] || 0 === e[1]))
                      return d(), c && l() && T().onDiscarded(E), !1;
                    let a = k().data;
                    (f.data = u(a, t) ? a : t),
                      c && l() && T().onSuccess(t, E, n);
                  } catch (n) {
                    h();
                    let e = T(),
                      { shouldRetryOnError: t } = e;
                    !e.isPaused() &&
                      ((f.error = n),
                      c &&
                        l() &&
                        (e.onError(n, E, e),
                        (!0 === t || ((0, o.mf)(t) && t(n))) &&
                          (!T().revalidateOnFocus ||
                            !T().revalidateOnReconnect ||
                            O()) &&
                          e.onErrorRetry(
                            n,
                            E,
                            e,
                            (e) => {
                              let t = b[E];
                              t && t[0] && t[0](o.sj.ERROR_REVALIDATE_EVENT, e);
                            },
                            { retryCount: (a.retryCount || 0) + 1, dedupe: !0 }
                          )));
                  }
                  return (s = !1), d(), !0;
                },
                [E, c]
              ),
              Y = (0, r.useCallback)(
                (...e) => (0, o.BN)(c, I.current, ...e),
                []
              );
            if (
              ((0, o.LI)(() => {
                (S.current = t),
                  (P.current = n),
                  (0, o.o8)(H) || (Q.current = H);
              }),
              (0, o.LI)(() => {
                if (!E) return;
                let e = J.bind(o.i_, a),
                  t = 0,
                  n = (0, o.ko)(E, b, (n, r = {}) => {
                    if (n == o.sj.FOCUS_EVENT) {
                      let n = Date.now();
                      T().revalidateOnFocus &&
                        n > t &&
                        O() &&
                        ((t = n + T().focusThrottleInterval), e());
                    } else if (n == o.sj.RECONNECT_EVENT)
                      T().revalidateOnReconnect && O() && e();
                    else if (n == o.sj.MUTATE_EVENT) return J();
                    else if (n == o.sj.ERROR_REVALIDATE_EVENT) return J(r);
                  });
                return (
                  (B.current = !1),
                  (I.current = E),
                  (x.current = !0),
                  R({ _k: C }),
                  V && ((0, o.o8)(q) || o.W6 ? e() : (0, o.kw)(e)),
                  () => {
                    (B.current = !0), n();
                  }
                );
              }, [E]),
              (0, o.LI)(() => {
                let e;
                function t() {
                  let t = (0, o.mf)(p) ? p(k().data) : p;
                  t && -1 !== e && (e = setTimeout(n, t));
                }
                function n() {
                  !k().error && (m || T().isVisible()) && (g || T().isOnline())
                    ? J(a).then(t)
                    : t();
                }
                return (
                  t(),
                  () => {
                    e && (clearTimeout(e), (e = -1));
                  }
                );
              }, [p, m, g, E]),
              (0, r.useDebugValue)(W),
              l && (0, o.o8)(q) && E)
            ) {
              if (!o.w6 && o.W6)
                throw Error(
                  "Fallback data is required when using suspense in SSR."
                );
              (S.current = t), (P.current = n), (B.current = !1);
              let e = A[E];
              if (((0, o.o8)(e) || s(Y(e)), (0, o.o8)(z))) {
                let e = J(a);
                (0, o.o8)(W) || ((e.status = "fulfilled"), (e.value = !0)),
                  s(e);
              } else throw z;
            }
            return {
              mutate: Y,
              get data() {
                return (L.data = !0), W;
              },
              get error() {
                return (L.error = !0), z;
              },
              get isValidating() {
                return (L.isValidating = !0), $;
              },
              get isLoading() {
                return (L.isLoading = !0), Z;
              },
            };
          }),
          u = o.w6
            ? (e) => {
                e();
              }
            : r.startTransition,
          l = (e) => {
            let [, t] = (0, r.useState)({}),
              n = (0, r.useRef)(!1),
              i = (0, r.useRef)(e),
              s = (0, r.useRef)({ data: !1, error: !1, isValidating: !1 }),
              a = (0, r.useCallback)((e) => {
                let r = !1,
                  o = i.current;
                for (let t in e)
                  o[t] !== e[t] && ((o[t] = e[t]), s.current[t] && (r = !0));
                r && !n.current && t({});
              }, []);
            return (
              (0, o.LI)(
                () => (
                  (n.current = !1),
                  () => {
                    n.current = !0;
                  }
                )
              ),
              [i, s.current, a]
            );
          },
          f = (0, o.xD)(c, () => (e, t, n = {}) => {
            let { mutate: i } = (0, o.kY)(),
              s = (0, r.useRef)(e),
              a = (0, r.useRef)(t),
              c = (0, r.useRef)(n),
              f = (0, r.useRef)(0),
              [d, h, p] = l({ data: o.i_, error: o.i_, isMutating: !1 }),
              m = d.current,
              g = (0, r.useCallback)(async (e, t) => {
                let [n, r] = (0, o.qC)(s.current);
                if (!a.current)
                  throw Error("Can’t trigger the mutation: missing fetcher.");
                if (!n) throw Error("Can’t trigger the mutation: missing key.");
                let l = (0, o.PM)(
                    (0, o.PM)(
                      { populateCache: !1, throwOnError: !0 },
                      c.current
                    ),
                    t
                  ),
                  d = (0, o.u3)();
                (f.current = d), p({ isMutating: !0 });
                try {
                  let t = await i(
                    n,
                    a.current(r, { arg: e }),
                    (0, o.PM)(l, { throwOnError: !0 })
                  );
                  return (
                    f.current <= d &&
                      (u(() => p({ data: t, isMutating: !1, error: void 0 })),
                      null == l.onSuccess || l.onSuccess.call(l, t, n, l)),
                    t
                  );
                } catch (e) {
                  if (
                    f.current <= d &&
                    (u(() => p({ error: e, isMutating: !1 })),
                    null == l.onError || l.onError.call(l, e, n, l),
                    l.throwOnError)
                  )
                    throw e;
                }
              }, []),
              y = (0, r.useCallback)(() => {
                (f.current = (0, o.u3)()),
                  p({ data: o.i_, error: o.i_, isMutating: !1 });
              }, []);
            return (
              (0, o.LI)(() => {
                (s.current = e), (a.current = t), (c.current = n);
              }),
              {
                trigger: g,
                reset: y,
                get data() {
                  return (h.data = !0), m.data;
                },
                get error() {
                  return (h.error = !0), m.error;
                },
                get isMutating() {
                  return (h.isMutating = !0), m.isMutating;
                },
              }
            );
          });
      },
      5853: function (e, t, n) {
        "use strict";
        n.d(t, {
          Jh: function () {
            return c;
          },
          ZT: function () {
            return i;
          },
          _T: function () {
            return s;
          },
          ev: function () {
            return u;
          },
          mG: function () {
            return a;
          },
          pi: function () {
            return o;
          },
        });
        var r = function (e, t) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        };
        function i(e, t) {
          if ("function" != typeof t && null !== t)
            throw TypeError(
              "Class extends value " +
                String(t) +
                " is not a constructor or null"
            );
          function n() {
            this.constructor = e;
          }
          r(e, t),
            (e.prototype =
              null === t
                ? Object.create(t)
                : ((n.prototype = t.prototype), new n()));
        }
        var o = function () {
          return (o =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var i in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
              return e;
            }).apply(this, arguments);
        };
        function s(e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              0 > t.indexOf(r) &&
              (n[r] = e[r]);
          if (null != e && "function" == typeof Object.getOwnPropertySymbols)
            for (
              var i = 0, r = Object.getOwnPropertySymbols(e);
              i < r.length;
              i++
            )
              0 > t.indexOf(r[i]) &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          return n;
        }
        function a(e, t, n, r) {
          return new (n || (n = Promise))(function (i, o) {
            function s(e) {
              try {
                c(r.next(e));
              } catch (e) {
                o(e);
              }
            }
            function a(e) {
              try {
                c(r.throw(e));
              } catch (e) {
                o(e);
              }
            }
            function c(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof n
                    ? t
                    : new n(function (e) {
                        e(t);
                      })
                  ).then(s, a);
            }
            c((r = r.apply(e, t || [])).next());
          });
        }
        function c(e, t) {
          var n,
            r,
            i,
            o = {
              label: 0,
              sent: function () {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: [],
            },
            s = Object.create(
              ("function" == typeof Iterator ? Iterator : Object).prototype
            );
          return (
            (s.next = a(0)),
            (s.throw = a(1)),
            (s.return = a(2)),
            "function" == typeof Symbol &&
              (s[Symbol.iterator] = function () {
                return this;
              }),
            s
          );
          function a(a) {
            return function (c) {
              return (function (a) {
                if (n) throw TypeError("Generator is already executing.");
                for (; s && ((s = 0), a[0] && (o = 0)), o; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & a[0]
                            ? r.return
                            : a[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, a[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (a = [2 & a[0], i.value]), a[0])) {
                      case 0:
                      case 1:
                        i = a;
                        break;
                      case 4:
                        return o.label++, { value: a[1], done: !1 };
                      case 5:
                        o.label++, (r = a[1]), (a = [0]);
                        continue;
                      case 7:
                        (a = o.ops.pop()), o.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                          (6 === a[0] || 2 === a[0])
                        ) {
                          o = 0;
                          continue;
                        }
                        if (
                          3 === a[0] &&
                          (!i || (a[1] > i[0] && a[1] < i[3]))
                        ) {
                          o.label = a[1];
                          break;
                        }
                        if (6 === a[0] && o.label < i[1]) {
                          (o.label = i[1]), (i = a);
                          break;
                        }
                        if (i && o.label < i[2]) {
                          (o.label = i[2]), o.ops.push(a);
                          break;
                        }
                        i[2] && o.ops.pop(), o.trys.pop();
                        continue;
                    }
                    a = t.call(e, o);
                  } catch (e) {
                    (a = [6, e]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & a[0]) throw a[1];
                return { value: a[0] ? a[1] : void 0, done: !0 };
              })([a, c]);
            };
          }
        }
        function u(e, t, n) {
          if (n || 2 == arguments.length)
            for (var r, i = 0, o = t.length; i < o; i++)
              (!r && i in t) ||
                (r || (r = Array.prototype.slice.call(t, 0, i)), (r[i] = t[i]));
          return e.concat(r || Array.prototype.slice.call(t));
        }
        "function" == typeof SuppressedError && SuppressedError;
      },
      19775: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e ? { address: e, type: "json-rpc" } : e;
        }
        n.d(t, {
          T: function () {
            return r;
          },
        });
      },
      96698: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return x;
          },
        });
        var r = n(28766),
          i = n(81544);
        class o extends i.G {
          constructor({ data: e }) {
            super(
              "Unable to extract image from metadata. The metadata may be malformed or invalid.",
              {
                metaMessages: [
                  "- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.",
                  "",
                  `Provided data: ${JSON.stringify(e)}`,
                ],
                name: "EnsAvatarInvalidMetadataError",
              }
            );
          }
        }
        class s extends i.G {
          constructor({ reason: e }) {
            super(`ENS NFT avatar URI is invalid. ${e}`, {
              name: "EnsAvatarInvalidNftUriError",
            });
          }
        }
        class a extends i.G {
          constructor({ uri: e }) {
            super(
              `Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`,
              { name: "EnsAvatarUriResolutionError" }
            );
          }
        }
        class c extends i.G {
          constructor({ namespace: e }) {
            super(
              `ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`,
              { name: "EnsAvatarUnsupportedNamespaceError" }
            );
          }
        }
        let u =
            /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
          l =
            /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
          f = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
          d = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
        async function h(e) {
          try {
            let t = await fetch(e, { method: "HEAD" });
            if (200 === t.status) {
              let e = t.headers.get("content-type");
              return e?.startsWith("image/");
            }
            return !1;
          } catch (t) {
            if (
              ("object" == typeof t && void 0 !== t.response) ||
              !globalThis.hasOwnProperty("Image")
            )
              return !1;
            return new Promise((t) => {
              let n = new Image();
              (n.onload = () => {
                t(!0);
              }),
                (n.onerror = () => {
                  t(!1);
                }),
                (n.src = e);
            });
          }
        }
        function p(e, t) {
          return e ? (e.endsWith("/") ? e.slice(0, -1) : e) : t;
        }
        function m({ uri: e, gatewayUrls: t }) {
          let n = f.test(e);
          if (n) return { uri: e, isOnChain: !0, isEncoded: n };
          let r = p(t?.ipfs, "https://ipfs.io"),
            i = p(t?.arweave, "https://arweave.net"),
            o = e.match(u),
            {
              protocol: s,
              subpath: c,
              target: h,
              subtarget: m = "",
            } = o?.groups || {},
            g = "ipns:/" === s || "ipns/" === c,
            y = "ipfs:/" === s || "ipfs/" === c || l.test(e);
          if (e.startsWith("http") && !g && !y) {
            let n = e;
            return (
              t?.arweave &&
                (n = e.replace(/https:\/\/arweave.net/g, t?.arweave)),
              { uri: n, isOnChain: !1, isEncoded: !1 }
            );
          }
          if ((g || y) && h)
            return {
              uri: `${r}/${g ? "ipns" : "ipfs"}/${h}${m}`,
              isOnChain: !1,
              isEncoded: !1,
            };
          if ("ar:/" === s && h)
            return { uri: `${i}/${h}${m || ""}`, isOnChain: !1, isEncoded: !1 };
          let b = e.replace(d, "");
          if (
            (b.startsWith("<svg") &&
              (b = `data:image/svg+xml;base64,${btoa(b)}`),
            b.startsWith("data:") || b.startsWith("{"))
          )
            return { uri: b, isOnChain: !0, isEncoded: !1 };
          throw new a({ uri: e });
        }
        function g(e) {
          if (
            "object" != typeof e ||
            (!("image" in e) && !("image_url" in e) && !("image_data" in e))
          )
            throw new o({ data: e });
          return e.image || e.image_url || e.image_data;
        }
        async function y({ gatewayUrls: e, uri: t }) {
          try {
            let n = await fetch(t).then((e) => e.json());
            return await b({ gatewayUrls: e, uri: g(n) });
          } catch {
            throw new a({ uri: t });
          }
        }
        async function b({ gatewayUrls: e, uri: t }) {
          let { uri: n, isOnChain: r } = m({ uri: t, gatewayUrls: e });
          if (r || (await h(n))) return n;
          throw new a({ uri: t });
        }
        async function w(e, { nft: t }) {
          if ("erc721" === t.namespace)
            return (0, r.L)(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "tokenURI",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "tokenId", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "tokenURI",
              args: [BigInt(t.tokenID)],
            });
          if ("erc1155" === t.namespace)
            return (0, r.L)(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "uri",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "_id", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "uri",
              args: [BigInt(t.tokenID)],
            });
          throw new c({ namespace: t.namespace });
        }
        async function v(e, { gatewayUrls: t, record: n }) {
          return /eip155:/i.test(n)
            ? A(e, { gatewayUrls: t, record: n })
            : b({ uri: n, gatewayUrls: t });
        }
        async function A(e, { gatewayUrls: t, record: n }) {
          let r = (function (e) {
              let t = e;
              t.startsWith("did:nft:") &&
                (t = t.replace("did:nft:", "").replace(/_/g, "/"));
              let [n, r, i] = t.split("/"),
                [o, a] = n.split(":"),
                [c, u] = r.split(":");
              if (!o || "eip155" !== o.toLowerCase())
                throw new s({ reason: "Only EIP-155 supported" });
              if (!a) throw new s({ reason: "Chain ID not found" });
              if (!u) throw new s({ reason: "Contract address not found" });
              if (!i) throw new s({ reason: "Token ID not found" });
              if (!c) throw new s({ reason: "ERC namespace not found" });
              return {
                chainID: Number.parseInt(a),
                namespace: c.toLowerCase(),
                contractAddress: u,
                tokenID: i,
              };
            })(n),
            {
              uri: i,
              isOnChain: o,
              isEncoded: a,
            } = m({ uri: await w(e, { nft: r }), gatewayUrls: t });
          if (
            o &&
            (i.includes("data:application/json;base64,") || i.startsWith("{"))
          )
            return b({
              uri: g(
                JSON.parse(
                  a ? atob(i.replace("data:application/json;base64,", "")) : i
                )
              ),
              gatewayUrls: t,
            });
          let c = r.tokenID;
          return (
            "erc1155" === r.namespace &&
              (c = c.replace("0x", "").padStart(64, "0")),
            y({ gatewayUrls: t, uri: i.replace(/(?:0x)?{id}/, c) })
          );
        }
        var E = n(82645),
          C = n(99861);
        async function x(
          e,
          {
            blockNumber: t,
            blockTag: n,
            assetGatewayUrls: r,
            name: i,
            gatewayUrls: o,
            strict: s,
            universalResolverAddress: a,
          }
        ) {
          let c = await (0, E.s)(
            e,
            C.g,
            "getEnsText"
          )({
            blockNumber: t,
            blockTag: n,
            key: "avatar",
            name: i,
            universalResolverAddress: a,
            gatewayUrls: o,
            strict: s,
          });
          if (!c) return null;
          try {
            return await v(e, { record: c, gatewayUrls: r });
          } catch {
            return null;
          }
        }
      },
      72609: function (e, t, n) {
        "use strict";
        n.d(t, {
          w: function () {
            return l;
          },
        });
        var r = n(98158),
          i = n(93627),
          o = n(59455),
          s = n(83348),
          a = n(98707),
          c = n(82645),
          u = n(28766);
        async function l(
          e,
          {
            address: t,
            blockNumber: n,
            blockTag: l,
            gatewayUrls: f,
            strict: d,
            universalResolverAddress: h,
          }
        ) {
          let p = h;
          if (!p) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            p = (0, i.L)({
              blockNumber: n,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let m = `${t.toLowerCase().substring(2)}.addr.reverse`;
          try {
            let i = {
                address: p,
                abi: r.du,
                functionName: "reverse",
                args: [(0, o.NC)((0, a.T)(m))],
                blockNumber: n,
                blockTag: l,
              },
              s = (0, c.s)(e, u.L, "readContract"),
              [d, h] = f ? await s({ ...i, args: [...i.args, f] }) : await s(i);
            if (t.toLowerCase() !== h.toLowerCase()) return null;
            return d;
          } catch (e) {
            if (d) throw e;
            if ((0, s.c)(e, "reverse")) return null;
            throw e;
          }
        }
      },
      99861: function (e, t, n) {
        "use strict";
        n.d(t, {
          g: function () {
            return h;
          },
        });
        var r = n(98158),
          i = n(65436),
          o = n(17283),
          s = n(93627),
          a = n(59455),
          c = n(83348),
          u = n(21721),
          l = n(98707),
          f = n(82645),
          d = n(28766);
        async function h(
          e,
          {
            blockNumber: t,
            blockTag: n,
            name: h,
            key: p,
            gatewayUrls: m,
            strict: g,
            universalResolverAddress: y,
          }
        ) {
          let b = y;
          if (!b) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            b = (0, s.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let s = {
                address: b,
                abi: r.k3,
                functionName: "resolve",
                args: [
                  (0, a.NC)((0, l.T)(h)),
                  (0, o.R)({
                    abi: r.nZ,
                    functionName: "text",
                    args: [(0, u.V)(h), p],
                  }),
                ],
                blockNumber: t,
                blockTag: n,
              },
              c = (0, f.s)(e, d.L, "readContract"),
              g = m ? await c({ ...s, args: [...s.args, m] }) : await c(s);
            if ("0x" === g[0]) return null;
            let y = (0, i.k)({ abi: r.nZ, functionName: "text", data: g[0] });
            return "" === y ? null : y;
          } catch (e) {
            if (g) throw e;
            if ((0, c.c)(e, "resolve")) return null;
            throw e;
          }
        }
      },
      25664: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return ee;
          },
        });
        var r = n(64020);
        let i =
            /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/,
          o = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/,
          s =
            /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/,
          a =
            /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/,
          c =
            /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/,
          u = /^fallback\(\) external(?:\s(?<stateMutability>payable{1}))?$/,
          l = /^receive\(\) external payable$/,
          f = new Set(["indexed"]),
          d = new Set(["calldata", "memory", "storage"]);
        class h extends Error {
          constructor(e, t = {}) {
            let n =
                t.cause instanceof h
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              r = (t.cause instanceof h && t.cause.docsPath) || t.docsPath;
            super(
              [
                e || "An error occurred.",
                "",
                ...(t.metaMessages ? [...t.metaMessages, ""] : []),
                ...(r ? [`Docs: https://abitype.dev${r}`] : []),
                ...(n ? [`Details: ${n}`] : []),
                "Version: abitype@1.0.6",
              ].join("\n")
            ),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiTypeError",
              }),
              t.cause && (this.cause = t.cause),
              (this.details = n),
              (this.docsPath = r),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
        }
        class p extends h {
          constructor({ type: e }) {
            super("Unknown type.", {
              metaMessages: [
                `Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownTypeError",
              });
          }
        }
        class m extends h {
          constructor({ type: e }) {
            super("Unknown type.", {
              metaMessages: [`Type "${e}" is not a valid ABI type.`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownSolidityTypeError",
              });
          }
        }
        class g extends h {
          constructor({ param: e }) {
            super("Invalid ABI parameter.", { details: e }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParameterError",
              });
          }
        }
        class y extends h {
          constructor({ param: e, name: t }) {
            super("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SolidityProtectedKeywordError",
              });
          }
        }
        class b extends h {
          constructor({ param: e, type: t, modifier: n }) {
            super("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `Modifier "${n}" not allowed${t ? ` in "${t}" type` : ""}.`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidModifierError",
              });
          }
        }
        class w extends h {
          constructor({ param: e, type: t, modifier: n }) {
            super("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `Modifier "${n}" not allowed${t ? ` in "${t}" type` : ""}.`,
                `Data location can only be specified for array, struct, or mapping types, but "${n}" was given.`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidFunctionModifierError",
              });
          }
        }
        class v extends h {
          constructor({ abiParameter: e }) {
            super("Invalid ABI parameter.", {
              details: JSON.stringify(e, null, 2),
              metaMessages: ["ABI parameter type is invalid."],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiTypeParameterError",
              });
          }
        }
        class A extends h {
          constructor({ signature: e, type: t }) {
            super(`Invalid ${t} signature.`, { details: e }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSignatureError",
              });
          }
        }
        class E extends h {
          constructor({ signature: e }) {
            super("Unknown signature.", { details: e }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownSignatureError",
              });
          }
        }
        class C extends h {
          constructor({ signature: e }) {
            super("Invalid struct signature.", {
              details: e,
              metaMessages: ["No properties exist."],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidStructSignatureError",
              });
          }
        }
        class x extends h {
          constructor({ type: e }) {
            super("Circular reference detected.", {
              metaMessages: [`Struct "${e}" is a circular reference.`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "CircularReferenceError",
              });
          }
        }
        class B extends h {
          constructor({ current: e, depth: t }) {
            super("Unbalanced parentheses.", {
              metaMessages: [
                `"${e.trim()}" has too many ${
                  t > 0 ? "opening" : "closing"
                } parentheses.`,
              ],
              details: `Depth "${t}"`,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParenthesisError",
              });
          }
        }
        let I = new Map([
            ["address", { type: "address" }],
            ["bool", { type: "bool" }],
            ["bytes", { type: "bytes" }],
            ["bytes32", { type: "bytes32" }],
            ["int", { type: "int256" }],
            ["int256", { type: "int256" }],
            ["string", { type: "string" }],
            ["uint", { type: "uint256" }],
            ["uint8", { type: "uint8" }],
            ["uint16", { type: "uint16" }],
            ["uint24", { type: "uint24" }],
            ["uint32", { type: "uint32" }],
            ["uint64", { type: "uint64" }],
            ["uint96", { type: "uint96" }],
            ["uint112", { type: "uint112" }],
            ["uint160", { type: "uint160" }],
            ["uint192", { type: "uint192" }],
            ["uint256", { type: "uint256" }],
            ["address owner", { type: "address", name: "owner" }],
            ["address to", { type: "address", name: "to" }],
            ["bool approved", { type: "bool", name: "approved" }],
            ["bytes _data", { type: "bytes", name: "_data" }],
            ["bytes data", { type: "bytes", name: "data" }],
            ["bytes signature", { type: "bytes", name: "signature" }],
            ["bytes32 hash", { type: "bytes32", name: "hash" }],
            ["bytes32 r", { type: "bytes32", name: "r" }],
            ["bytes32 root", { type: "bytes32", name: "root" }],
            ["bytes32 s", { type: "bytes32", name: "s" }],
            ["string name", { type: "string", name: "name" }],
            ["string symbol", { type: "string", name: "symbol" }],
            ["string tokenURI", { type: "string", name: "tokenURI" }],
            ["uint tokenId", { type: "uint256", name: "tokenId" }],
            ["uint8 v", { type: "uint8", name: "v" }],
            ["uint256 balance", { type: "uint256", name: "balance" }],
            ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
            ["uint256 value", { type: "uint256", name: "value" }],
            [
              "event:address indexed from",
              { type: "address", name: "from", indexed: !0 },
            ],
            [
              "event:address indexed to",
              { type: "address", name: "to", indexed: !0 },
            ],
            [
              "event:uint indexed tokenId",
              { type: "uint256", name: "tokenId", indexed: !0 },
            ],
            [
              "event:uint256 indexed tokenId",
              { type: "uint256", name: "tokenId", indexed: !0 },
            ],
          ]),
          S =
            /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
          P =
            /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
          T = /^u?int$/;
        function O(e, t) {
          var n, i, o;
          let s;
          let a = (n = t?.type) ? `${n}:${e}` : e;
          if (I.has(a)) return I.get(a);
          let c = r.cN.test(e),
            u = (0, r.Zw)(c ? P : S, e);
          if (!u) throw new g({ param: e });
          if (
            u.name &&
            ("address" === (i = u.name) ||
              "bool" === i ||
              "function" === i ||
              "string" === i ||
              "tuple" === i ||
              r.eL.test(i) ||
              r.lh.test(i) ||
              N.test(i))
          )
            throw new y({ param: e, name: u.name });
          let l = u.name ? { name: u.name } : {},
            f = "indexed" === u.modifier ? { indexed: !0 } : {},
            h = t?.structs ?? {},
            p = {};
          if (c) {
            s = "tuple";
            let e = k(u.type),
              t = [],
              n = e.length;
            for (let r = 0; r < n; r++) t.push(O(e[r], { structs: h }));
            p = { components: t };
          } else if (u.type in h)
            (s = "tuple"), (p = { components: h[u.type] });
          else if (T.test(u.type)) s = `${u.type}256`;
          else if (((s = u.type), t?.type !== "struct" && !R(s)))
            throw new m({ type: s });
          if (u.modifier) {
            if (!t?.modifiers?.has?.(u.modifier))
              throw new b({ param: e, type: t?.type, modifier: u.modifier });
            if (
              d.has(u.modifier) &&
              ((o = s),
              !u.array && "bytes" !== o && "string" !== o && "tuple" !== o)
            )
              throw new w({ param: e, type: t?.type, modifier: u.modifier });
          }
          let v = { type: `${s}${u.array ?? ""}`, ...l, ...f, ...p };
          return I.set(a, v), v;
        }
        function k(e, t = [], n = "", r = 0) {
          let i = e.trim().length;
          for (let o = 0; o < i; o++) {
            let i = e[o],
              s = e.slice(o + 1);
            switch (i) {
              case ",":
                return 0 === r
                  ? k(s, [...t, n.trim()])
                  : k(s, t, `${n}${i}`, r);
              case "(":
                return k(s, t, `${n}${i}`, r + 1);
              case ")":
                return k(s, t, `${n}${i}`, r - 1);
              default:
                return k(s, t, `${n}${i}`, r);
            }
          }
          if ("" === n) return t;
          if (0 !== r) throw new B({ current: n, depth: r });
          return t.push(n.trim()), t;
        }
        function R(e) {
          return (
            "address" === e ||
            "bool" === e ||
            "function" === e ||
            "string" === e ||
            r.eL.test(e) ||
            r.lh.test(e)
          );
        }
        let N =
            /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/,
          M = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/;
        function L(e) {
          let t = (function (e) {
              let t = {},
                n = e.length;
              for (let i = 0; i < n; i++) {
                let n = e[i];
                if (!a.test(n)) continue;
                let o = (0, r.Zw)(a, n);
                if (!o) throw new A({ signature: n, type: "struct" });
                let s = o.properties.split(";"),
                  c = [],
                  u = s.length;
                for (let e = 0; e < u; e++) {
                  let t = s[e].trim();
                  if (!t) continue;
                  let n = O(t, { type: "struct" });
                  c.push(n);
                }
                if (!c.length) throw new C({ signature: n });
                t[o.name] = c;
              }
              let i = {},
                o = Object.entries(t),
                s = o.length;
              for (let e = 0; e < s; e++) {
                let [n, s] = o[e];
                i[n] = (function e(t, n, i = new Set()) {
                  let o = [],
                    s = t.length;
                  for (let a = 0; a < s; a++) {
                    let s = t[a];
                    if (r.cN.test(s.type)) o.push(s);
                    else {
                      let t = (0, r.Zw)(M, s.type);
                      if (!t?.type) throw new v({ abiParameter: s });
                      let { array: a, type: c } = t;
                      if (c in n) {
                        if (i.has(c)) throw new x({ type: c });
                        o.push({
                          ...s,
                          type: `tuple${a ?? ""}`,
                          components: e(n[c] ?? [], n, new Set([...i, c])),
                        });
                      } else if (R(c)) o.push(s);
                      else throw new p({ type: c });
                    }
                  }
                  return o;
                })(s, t);
              }
              return i;
            })(e),
            n = [],
            h = e.length;
          for (let p = 0; p < h; p++) {
            let h = e[p];
            a.test(h) ||
              n.push(
                (function (e, t = {}) {
                  if (s.test(e)) {
                    let n = (0, r.Zw)(s, e);
                    if (!n) throw new A({ signature: e, type: "function" });
                    let i = k(n.parameters),
                      o = [],
                      a = i.length;
                    for (let e = 0; e < a; e++)
                      o.push(
                        O(i[e], { modifiers: d, structs: t, type: "function" })
                      );
                    let c = [];
                    if (n.returns) {
                      let e = k(n.returns),
                        r = e.length;
                      for (let n = 0; n < r; n++)
                        c.push(
                          O(e[n], {
                            modifiers: d,
                            structs: t,
                            type: "function",
                          })
                        );
                    }
                    return {
                      name: n.name,
                      type: "function",
                      stateMutability: n.stateMutability ?? "nonpayable",
                      inputs: o,
                      outputs: c,
                    };
                  }
                  if (o.test(e)) {
                    let n = (0, r.Zw)(o, e);
                    if (!n) throw new A({ signature: e, type: "event" });
                    let i = k(n.parameters),
                      s = [],
                      a = i.length;
                    for (let e = 0; e < a; e++)
                      s.push(
                        O(i[e], { modifiers: f, structs: t, type: "event" })
                      );
                    return { name: n.name, type: "event", inputs: s };
                  }
                  if (i.test(e)) {
                    let n = (0, r.Zw)(i, e);
                    if (!n) throw new A({ signature: e, type: "error" });
                    let o = k(n.parameters),
                      s = [],
                      a = o.length;
                    for (let e = 0; e < a; e++)
                      s.push(O(o[e], { structs: t, type: "error" }));
                    return { name: n.name, type: "error", inputs: s };
                  }
                  if (c.test(e)) {
                    let n = (0, r.Zw)(c, e);
                    if (!n) throw new A({ signature: e, type: "constructor" });
                    let i = k(n.parameters),
                      o = [],
                      s = i.length;
                    for (let e = 0; e < s; e++)
                      o.push(O(i[e], { structs: t, type: "constructor" }));
                    return {
                      type: "constructor",
                      stateMutability: n.stateMutability ?? "nonpayable",
                      inputs: o,
                    };
                  }
                  if (u.test(e)) return { type: "fallback" };
                  if (l.test(e))
                    return { type: "receive", stateMutability: "payable" };
                  throw new E({ signature: e });
                })(h, t)
              );
          }
          return n;
        }
        var F = n(19775),
          U = n(98158),
          D = n(45434),
          _ = n(81544),
          j = n(35586),
          G = n(20010),
          H = n(65436),
          q = n(23010),
          z = n(17283),
          Q = n(93627),
          W = n(59455),
          V = n(78125),
          K = n(18856),
          $ = n(70878),
          Z = n(92614),
          J = n(43226),
          Y = n(77911),
          X = n(54605);
        async function ee(e, t) {
          let {
              account: r = e.account,
              batch: i = !!e.batch?.multicall,
              blockNumber: o,
              blockTag: s = "latest",
              accessList: a,
              blobs: c,
              code: u,
              data: l,
              factory: f,
              factoryData: d,
              gas: h,
              gasPrice: p,
              maxFeePerBlobGas: m,
              maxFeePerGas: g,
              maxPriorityFeePerGas: y,
              nonce: b,
              to: w,
              value: v,
              stateOverride: A,
              ...E
            } = t,
            C = r ? (0, F.T)(r) : void 0;
          if (u && (f || d))
            throw new _.G(
              "Cannot provide both `code` & `factory`/`factoryData` as parameters."
            );
          if (u && w)
            throw new _.G("Cannot provide both `code` & `to` as parameters.");
          let x = u && l,
            B = f && d && w && l,
            I = x || B,
            S = x
              ? (function (e) {
                  let { code: t, data: n } = e;
                  return (0, q.w)({
                    abi: L(["constructor(bytes, bytes)"]),
                    bytecode: D.NO,
                    args: [t, n],
                  });
                })({ code: u, data: l })
              : B
              ? (function (e) {
                  let { data: t, factory: n, factoryData: r, to: i } = e;
                  return (0, q.w)({
                    abi: L(["constructor(address, bytes, address, bytes)"]),
                    bytecode: D.pG,
                    args: [i, t, n, r],
                  });
                })({ data: l, factory: f, factoryData: d, to: w })
              : l;
          try {
            (0, X.F)(t);
            let n = (o ? (0, W.eC)(o) : void 0) || s,
              r = (0, Y.mF)(A),
              u = e.chain?.formatters?.transactionRequest?.format,
              l = (u || Z.tG)({
                ...(0, $.K)(E, { format: u }),
                from: C?.address,
                accessList: a,
                blobs: c,
                data: S,
                gas: h,
                gasPrice: p,
                maxFeePerBlobGas: m,
                maxFeePerGas: g,
                maxPriorityFeePerGas: y,
                nonce: b,
                to: I ? void 0 : w,
                value: v,
              });
            if (
              i &&
              (function ({ request: e }) {
                let { data: t, to: n, ...r } = e;
                return (
                  !(!t || t.startsWith("0x82ad56cb")) &&
                  !!n &&
                  !(Object.values(r).filter((e) => void 0 !== e).length > 0)
                );
              })({ request: l }) &&
              !r
            )
              try {
                return await et(e, { ...l, blockNumber: o, blockTag: s });
              } catch (e) {
                if (!(e instanceof j.pZ) && !(e instanceof j.mm)) throw e;
              }
            let f = await e.request({
              method: "eth_call",
              params: r ? [l, n, r] : [l, n],
            });
            if ("0x" === f) return { data: void 0 };
            return { data: f };
          } catch (s) {
            let r = (function (e) {
                if (!(e instanceof _.G)) return;
                let t = e.walk();
                return "object" == typeof t?.data ? t.data?.data : t.data;
              })(s),
              { offchainLookup: i, offchainLookupSignature: o } = await n
                .e(1735)
                .then(n.bind(n, 71735));
            if (!1 !== e.ccipRead && r?.slice(0, 10) === o && w)
              return { data: await i(e, { data: r, to: w }) };
            if (I && r?.slice(0, 10) === "0x101bb98d")
              throw new G.Mo({ factory: f });
            throw (function (e, { docsPath: t, ...n }) {
              let r = (() => {
                let t = (0, K.k)(e, n);
                return t instanceof V.cj ? e : t;
              })();
              return new G.cg(r, { docsPath: t, ...n });
            })(s, { ...t, account: C, chain: e.chain });
          }
        }
        async function et(e, t) {
          let { batchSize: n = 1024, wait: r = 0 } =
              "object" == typeof e.batch?.multicall ? e.batch.multicall : {},
            {
              blockNumber: i,
              blockTag: o = "latest",
              data: s,
              multicallAddress: a,
              to: c,
            } = t,
            u = a;
          if (!u) {
            if (!e.chain) throw new j.pZ();
            u = (0, Q.L)({
              blockNumber: i,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let l = (i ? (0, W.eC)(i) : void 0) || o,
            { schedule: f } = (0, J.S)({
              id: `${e.uid}.${l}`,
              wait: r,
              shouldSplitBatch: (e) =>
                e.reduce((e, { data: t }) => e + (t.length - 2), 0) > 2 * n,
              fn: async (t) => {
                let n = t.map((e) => ({
                    allowFailure: !0,
                    callData: e.data,
                    target: e.to,
                  })),
                  r = (0, z.R)({
                    abi: U.F8,
                    args: [n],
                    functionName: "aggregate3",
                  }),
                  i = await e.request({
                    method: "eth_call",
                    params: [{ data: r, to: u }, l],
                  });
                return (0, H.k)({
                  abi: U.F8,
                  args: [n],
                  functionName: "aggregate3",
                  data: i || "0x",
                });
              },
            }),
            [{ returnData: d, success: h }] = await f({ data: s, to: c });
          if (!h) throw new G.VQ({ data: d });
          return "0x" === d ? { data: void 0 } : { data: d };
        }
      },
      6458: function (e, t, n) {
        "use strict";
        n.d(t, {
          C: function () {
            return u;
          },
          X: function () {
            return c;
          },
        });
        var r = n(4496),
          i = n(82645),
          o = n(96174),
          s = n(74587),
          a = n(25283);
        async function c(e, t) {
          return u(e, t);
        }
        async function u(e, t) {
          let {
              block: n,
              chain: c = e.chain,
              request: u,
              type: l = "eip1559",
            } = t || {},
            f = await (async () =>
              "function" == typeof c?.fees?.baseFeeMultiplier
                ? c.fees.baseFeeMultiplier({ block: n, client: e, request: u })
                : c?.fees?.baseFeeMultiplier ?? 1.2)();
          if (f < 1) throw new r.Fz();
          let d = 10 ** (f.toString().split(".")[1]?.length ?? 0),
            h = (e) => (e * BigInt(Math.ceil(f * d))) / BigInt(d),
            p = n || (await (0, i.s)(e, s.Q, "getBlock")({}));
          if ("function" == typeof c?.fees?.estimateFeesPerGas) {
            let t = await c.fees.estimateFeesPerGas({
              block: n,
              client: e,
              multiply: h,
              request: u,
              type: l,
            });
            if (null !== t) return t;
          }
          if ("eip1559" === l) {
            if ("bigint" != typeof p.baseFeePerGas) throw new r.e5();
            let t =
                "bigint" == typeof u?.maxPriorityFeePerGas
                  ? u.maxPriorityFeePerGas
                  : await (0, o.h)(e, { block: p, chain: c, request: u }),
              n = h(p.baseFeePerGas);
            return {
              maxFeePerGas: u?.maxFeePerGas ?? n + t,
              maxPriorityFeePerGas: t,
            };
          }
          return {
            gasPrice:
              u?.gasPrice ?? h(await (0, i.s)(e, a.o, "getGasPrice")({})),
          };
        }
      },
      8741: function (e, t, n) {
        "use strict";
        n.d(t, {
          Q: function () {
            return w;
          },
        });
        var r = n(19775),
          i = n(81544),
          o = n(30708),
          s = n(59455),
          a = n(71282),
          c = n(29707),
          u = n(63228);
        class l extends i.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: r,
              data: i,
              gas: o,
              gasPrice: s,
              maxFeePerGas: l,
              maxPriorityFeePerGas: f,
              nonce: d,
              to: h,
              value: p,
            }
          ) {
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Estimate Gas Arguments:",
                (0, u.xr)({
                  from: t?.address,
                  to: h,
                  value:
                    void 0 !== p &&
                    `${(0, a.d)(p)} ${r?.nativeCurrency?.symbol || "ETH"}`,
                  data: i,
                  gas: o,
                  gasPrice: void 0 !== s && `${(0, c.o)(s)} gwei`,
                  maxFeePerGas: void 0 !== l && `${(0, c.o)(l)} gwei`,
                  maxPriorityFeePerGas: void 0 !== f && `${(0, c.o)(f)} gwei`,
                  nonce: d,
                }),
              ].filter(Boolean),
              name: "EstimateGasExecutionError",
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.cause = e);
          }
        }
        var f = n(78125),
          d = n(18856),
          h = n(70878),
          p = n(92614),
          m = n(77911),
          g = n(54605),
          y = n(86048),
          b = n(32807);
        async function w(e, t) {
          let { account: n = e.account } = t,
            a = n ? (0, r.T)(n) : void 0;
          try {
            let {
                accessList: n,
                authorizationList: r,
                blobs: u,
                blobVersionedHashes: l,
                blockNumber: f,
                blockTag: d,
                data: w,
                gas: v,
                gasPrice: A,
                maxFeePerBlobGas: E,
                maxFeePerGas: C,
                maxPriorityFeePerGas: x,
                nonce: B,
                value: I,
                stateOverride: S,
                ...P
              } = await (0, y.Z)(e, {
                ...t,
                parameters:
                  a?.type === "local" ? void 0 : ["blobVersionedHashes"],
              }),
              T = (f ? (0, s.eC)(f) : void 0) || d,
              O = (0, m.mF)(S),
              k = await (async () =>
                P.to
                  ? P.to
                  : r && r.length > 0
                  ? await (0, o.z)({ authorization: r[0] }).catch(() => {
                      throw new i.G(
                        "`to` is required. Could not infer from `authorizationList`"
                      );
                    })
                  : void 0)();
            (0, g.F)(t);
            let R = e.chain?.formatters?.transactionRequest?.format,
              N = (R || p.tG)({
                ...(0, h.K)(P, { format: R }),
                from: a?.address,
                accessList: n,
                authorizationList: r,
                blobs: u,
                blobVersionedHashes: l,
                data: w,
                gas: v,
                gasPrice: A,
                maxFeePerBlobGas: E,
                maxFeePerGas: C,
                maxPriorityFeePerGas: x,
                nonce: B,
                to: k,
                value: I,
              });
            function c(t) {
              let { block: n, request: r, rpcStateOverride: i } = t;
              return e.request({
                method: "eth_estimateGas",
                params: i ? [r, n ?? "latest", i] : n ? [r, n] : [r],
              });
            }
            let M = BigInt(
              await c({ block: T, request: N, rpcStateOverride: O })
            );
            if (r) {
              let t = await (0, b.s)(e, { address: N.from }),
                n = await Promise.all(
                  r.map(async (e) => {
                    let { contractAddress: n } = e,
                      r = await c({
                        block: T,
                        request: {
                          authorizationList: void 0,
                          data: w,
                          from: a?.address,
                          to: n,
                          value: (0, s.eC)(t),
                        },
                        rpcStateOverride: O,
                      }).catch(() => 100000n);
                    return 2n * BigInt(r);
                  })
                );
              M += n.reduce((e, t) => e + t, 0n);
            }
            return M;
          } catch (n) {
            throw (function (e, { docsPath: t, ...n }) {
              return new l(
                (() => {
                  let t = (0, d.k)(e, n);
                  return t instanceof f.cj ? e : t;
                })(),
                { docsPath: t, ...n }
              );
            })(n, { ...t, account: a, chain: e.chain });
          }
        }
      },
      96174: function (e, t, n) {
        "use strict";
        n.d(t, {
          _: function () {
            return c;
          },
          h: function () {
            return u;
          },
        });
        var r = n(4496),
          i = n(72932),
          o = n(82645),
          s = n(74587),
          a = n(25283);
        async function c(e, t) {
          return u(e, t);
        }
        async function u(e, t) {
          let { block: n, chain: c = e.chain, request: u } = t || {};
          try {
            let t =
              c?.fees?.maxPriorityFeePerGas ?? c?.fees?.defaultPriorityFee;
            if ("function" == typeof t) {
              let r = n || (await (0, o.s)(e, s.Q, "getBlock")({})),
                i = await t({ block: r, client: e, request: u });
              if (null === i) throw Error();
              return i;
            }
            if (void 0 !== t) return t;
            let r = await e.request({ method: "eth_maxPriorityFeePerGas" });
            return (0, i.y_)(r);
          } catch {
            let [t, i] = await Promise.all([
              n ? Promise.resolve(n) : (0, o.s)(e, s.Q, "getBlock")({}),
              (0, o.s)(e, a.o, "getGasPrice")({}),
            ]);
            if ("bigint" != typeof t.baseFeePerGas) throw new r.e5();
            let c = i - t.baseFeePerGas;
            if (c < 0n) return 0n;
            return c;
          }
        }
      },
      32807: function (e, t, n) {
        "use strict";
        n.d(t, {
          s: function () {
            return i;
          },
        });
        var r = n(59455);
        async function i(
          e,
          { address: t, blockNumber: n, blockTag: i = "latest" }
        ) {
          let o = n ? (0, r.eC)(n) : void 0;
          return BigInt(
            await e.request({ method: "eth_getBalance", params: [t, o || i] })
          );
        }
      },
      74587: function (e, t, n) {
        "use strict";
        n.d(t, {
          Q: function () {
            return s;
          },
        });
        var r = n(12197),
          i = n(59455),
          o = n(59069);
        async function s(
          e,
          {
            blockHash: t,
            blockNumber: n,
            blockTag: s,
            includeTransactions: a,
          } = {}
        ) {
          let c = a ?? !1,
            u = void 0 !== n ? (0, i.eC)(n) : void 0,
            l = null;
          if (
            !(l = t
              ? await e.request(
                  { method: "eth_getBlockByHash", params: [t, c] },
                  { dedupe: !0 }
                )
              : await e.request(
                  {
                    method: "eth_getBlockByNumber",
                    params: [u || (s ?? "latest"), c],
                  },
                  { dedupe: !!u }
                ))
          )
            throw new r.f({ blockHash: t, blockNumber: n });
          return (e.chain?.formatters?.block?.format || o.Z)(l);
        }
      },
      13708: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return a;
          },
        });
        let r = new Map(),
          i = new Map();
        async function o(
          e,
          { cacheKey: t, cacheTime: n = Number.POSITIVE_INFINITY }
        ) {
          let o = (function (e) {
              let t = (e, t) => ({
                  clear: () => t.delete(e),
                  get: () => t.get(e),
                  set: (n) => t.set(e, n),
                }),
                n = t(e, r),
                o = t(e, i);
              return {
                clear: () => {
                  n.clear(), o.clear();
                },
                promise: n,
                response: o,
              };
            })(t),
            s = o.response.get();
          if (s && n > 0 && new Date().getTime() - s.created.getTime() < n)
            return s.data;
          let a = o.promise.get();
          a || ((a = e()), o.promise.set(a));
          try {
            let e = await a;
            return o.response.set({ created: new Date(), data: e }), e;
          } finally {
            o.promise.clear();
          }
        }
        let s = (e) => `blockNumber.${e}`;
        async function a(e, { cacheTime: t = e.cacheTime } = {}) {
          return BigInt(
            await o(() => e.request({ method: "eth_blockNumber" }), {
              cacheKey: s(e.uid),
              cacheTime: t,
            })
          );
        }
      },
      12363: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return i;
          },
        });
        var r = n(72932);
        async function i(e) {
          let t = await e.request({ method: "eth_chainId" }, { dedupe: !0 });
          return (0, r.ly)(t);
        }
      },
      25283: function (e, t, n) {
        "use strict";
        async function r(e) {
          return BigInt(await e.request({ method: "eth_gasPrice" }));
        }
        n.d(t, {
          o: function () {
            return r;
          },
        });
      },
      39277: function (e, t, n) {
        "use strict";
        n.d(t, {
          f: function () {
            return s;
          },
        });
        var r = n(63228),
          i = n(59455),
          o = n(27481);
        async function s(
          e,
          { blockHash: t, blockNumber: n, blockTag: s, hash: a, index: c }
        ) {
          let u = s || "latest",
            l = void 0 !== n ? (0, i.eC)(n) : void 0,
            f = null;
          if (
            (a
              ? (f = await e.request(
                  { method: "eth_getTransactionByHash", params: [a] },
                  { dedupe: !0 }
                ))
              : t
              ? (f = await e.request(
                  {
                    method: "eth_getTransactionByBlockHashAndIndex",
                    params: [t, (0, i.eC)(c)],
                  },
                  { dedupe: !0 }
                ))
              : (l || u) &&
                (f = await e.request(
                  {
                    method: "eth_getTransactionByBlockNumberAndIndex",
                    params: [l || u, (0, i.eC)(c)],
                  },
                  { dedupe: !!l }
                )),
            !f)
          )
            throw new r.Bh({
              blockHash: t,
              blockNumber: n,
              blockTag: u,
              hash: a,
              index: c,
            });
          return (e.chain?.formatters?.transaction?.format || o.Tr)(f);
        }
      },
      16689: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return o;
          },
        });
        var r = n(72932),
          i = n(59455);
        async function o(
          e,
          { address: t, blockTag: n = "latest", blockNumber: o }
        ) {
          let s = await e.request(
            {
              method: "eth_getTransactionCount",
              params: [t, o ? (0, i.eC)(o) : n],
            },
            { dedupe: !!o }
          );
          return (0, r.ly)(s);
        }
      },
      75848: function (e, t, n) {
        "use strict";
        n.d(t, {
          a: function () {
            return c;
          },
        });
        var r = n(63228),
          i = n(72932),
          o = n(55668),
          s = n(27481);
        let a = { "0x0": "reverted", "0x1": "success" };
        async function c(e, { hash: t }) {
          let n = await e.request(
            { method: "eth_getTransactionReceipt", params: [t] },
            { dedupe: !0 }
          );
          if (!n) throw new r.Yb({ hash: t });
          return (
            e.chain?.formatters?.transactionReceipt?.format ||
            function (e) {
              let t = {
                ...e,
                blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                contractAddress: e.contractAddress ? e.contractAddress : null,
                cumulativeGasUsed: e.cumulativeGasUsed
                  ? BigInt(e.cumulativeGasUsed)
                  : null,
                effectiveGasPrice: e.effectiveGasPrice
                  ? BigInt(e.effectiveGasPrice)
                  : null,
                gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
                logs: e.logs ? e.logs.map((e) => (0, o.U)(e)) : null,
                to: e.to ? e.to : null,
                transactionIndex: e.transactionIndex
                  ? (0, i.ly)(e.transactionIndex)
                  : null,
                status: e.status ? a[e.status] : null,
                type: e.type ? s.c8[e.type] || e.type : null,
              };
              return (
                e.blobGasPrice && (t.blobGasPrice = BigInt(e.blobGasPrice)),
                e.blobGasUsed && (t.blobGasUsed = BigInt(e.blobGasUsed)),
                t
              );
            }
          )(n);
        }
      },
      94797: function (e, t, n) {
        "use strict";
        n.d(t, {
          A: function () {
            return h;
          },
        });
        var r = n(98158),
          i = n(65531),
          o = n(81544),
          s = n(20010),
          a = n(65436),
          c = n(17283),
          u = n(93627),
          l = n(34180),
          f = n(82645),
          d = n(28766);
        async function h(e, t) {
          let {
              allowFailure: n = !0,
              batchSize: h,
              blockNumber: p,
              blockTag: m,
              multicallAddress: g,
              stateOverride: y,
            } = t,
            b = t.contracts,
            w =
              h ??
              (("object" == typeof e.batch?.multicall &&
                e.batch.multicall.batchSize) ||
                1024),
            v = g;
          if (!v) {
            if (!e.chain)
              throw Error(
                "client chain not configured. multicallAddress is required."
              );
            v = (0, u.L)({
              blockNumber: p,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let A = [[]],
            E = 0,
            C = 0;
          for (let e = 0; e < b.length; e++) {
            let { abi: t, address: r, args: i, functionName: o } = b[e];
            try {
              let e = (0, c.R)({ abi: t, args: i, functionName: o });
              (C += (e.length - 2) / 2),
                w > 0 &&
                  C > w &&
                  A[E].length > 0 &&
                  (E++, (C = (e.length - 2) / 2), (A[E] = [])),
                (A[E] = [
                  ...A[E],
                  { allowFailure: !0, callData: e, target: r },
                ]);
            } catch (s) {
              let e = (0, l.S)(s, {
                abi: t,
                address: r,
                args: i,
                docsPath: "/docs/contract/multicall",
                functionName: o,
              });
              if (!n) throw e;
              A[E] = [...A[E], { allowFailure: !0, callData: "0x", target: r }];
            }
          }
          let x = await Promise.allSettled(
              A.map((t) =>
                (0, f.s)(
                  e,
                  d.L,
                  "readContract"
                )({
                  abi: r.F8,
                  address: v,
                  args: [t],
                  blockNumber: p,
                  blockTag: m,
                  functionName: "aggregate3",
                  stateOverride: y,
                })
              )
            ),
            B = [];
          for (let e = 0; e < x.length; e++) {
            let t = x[e];
            if ("rejected" === t.status) {
              if (!n) throw t.reason;
              for (let n = 0; n < A[e].length; n++)
                B.push({ status: "failure", error: t.reason, result: void 0 });
              continue;
            }
            let r = t.value;
            for (let t = 0; t < r.length; t++) {
              let { returnData: o, success: c } = r[t],
                { callData: u } = A[e][t],
                { abi: f, address: d, functionName: h, args: p } = b[B.length];
              try {
                if ("0x" === u) throw new i.wb();
                if (!c) throw new s.VQ({ data: o });
                let e = (0, a.k)({ abi: f, args: p, data: o, functionName: h });
                B.push(n ? { result: e, status: "success" } : e);
              } catch (t) {
                let e = (0, l.S)(t, {
                  abi: f,
                  address: d,
                  args: p,
                  docsPath: "/docs/contract/multicall",
                  functionName: h,
                });
                if (!n) throw e;
                B.push({ error: e, result: void 0, status: "failure" });
              }
            }
          }
          if (B.length !== b.length)
            throw new o.G("multicall results mismatch");
          return B;
        }
      },
      28766: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return c;
          },
        });
        var r = n(65436),
          i = n(17283),
          o = n(34180),
          s = n(82645),
          a = n(25664);
        async function c(e, t) {
          let { abi: n, address: c, args: u, functionName: l, ...f } = t,
            d = (0, i.R)({ abi: n, args: u, functionName: l });
          try {
            let { data: t } = await (0, s.s)(
              e,
              a.R,
              "call"
            )({ ...f, data: d, to: c });
            return (0, r.k)({
              abi: n,
              args: u,
              functionName: l,
              data: t || "0x",
            });
          } catch (e) {
            throw (0, o.S)(e, {
              abi: n,
              address: c,
              args: u,
              docsPath: "/docs/contract/readContract",
              functionName: l,
            });
          }
        }
      },
      21541: function (e, t, n) {
        "use strict";
        n.d(t, {
          a: function () {
            return u;
          },
        });
        var r = n(19775),
          i = n(65436),
          o = n(17283),
          s = n(34180),
          a = n(82645),
          c = n(25664);
        async function u(e, t) {
          let {
              abi: n,
              address: u,
              args: l,
              dataSuffix: f,
              functionName: d,
              ...h
            } = t,
            p = h.account ? (0, r.T)(h.account) : e.account,
            m = (0, o.R)({ abi: n, args: l, functionName: d });
          try {
            let { data: r } = await (0, a.s)(
                e,
                c.R,
                "call"
              )({
                batch: !1,
                data: `${m}${f ? f.replace("0x", "") : ""}`,
                to: u,
                ...h,
                account: p,
              }),
              o = (0, i.k)({
                abi: n,
                args: l,
                functionName: d,
                data: r || "0x",
              }),
              s = n.filter((e) => "name" in e && e.name === t.functionName);
            return {
              result: o,
              request: {
                abi: s,
                address: u,
                args: l,
                dataSuffix: f,
                functionName: d,
                ...h,
                account: p,
              },
            };
          } catch (e) {
            throw (0, s.S)(e, {
              abi: n,
              address: u,
              args: l,
              docsPath: "/docs/contract/simulateContract",
              functionName: d,
              sender: p?.address,
            });
          }
        }
      },
      67348: function (e, t, n) {
        "use strict";
        n.d(t, {
          e: function () {
            return p;
          },
        });
        var r = n(12197),
          i = n(63228),
          o = n(82645),
          s = n(36478),
          a = n(56921),
          c = n(49287),
          u = n(31853),
          l = n(74587),
          f = n(39277),
          d = n(75848),
          h = n(99376);
        async function p(
          e,
          {
            confirmations: t = 1,
            hash: n,
            onReplaced: p,
            pollingInterval: m = e.pollingInterval,
            retryCount: g = 6,
            retryDelay: y = ({ count: e }) => 200 * ~~(1 << e),
            timeout: b = 18e4,
          }
        ) {
          let w, v, A;
          let E = (0, u.P)(["waitForTransactionReceipt", e.uid, n]),
            C = !1,
            { promise: x, resolve: B, reject: I } = (0, a.n)(),
            S = b ? setTimeout(() => I(new i.mc({ hash: n })), b) : void 0,
            P = (0, s.N7)(E, { onReplaced: p, resolve: B, reject: I }, (s) => {
              let a = (0, o.s)(
                e,
                h.q,
                "watchBlockNumber"
              )({
                emitMissed: !0,
                emitOnBegin: !0,
                poll: !0,
                pollingInterval: m,
                async onBlockNumber(u) {
                  let h = (e) => {
                      clearTimeout(S), a(), e(), P();
                    },
                    p = u;
                  if (!C)
                    try {
                      if (A) {
                        if (
                          t > 1 &&
                          (!A.blockNumber || p - A.blockNumber + 1n < t)
                        )
                          return;
                        h(() => s.resolve(A));
                        return;
                      }
                      if (
                        (w ||
                          ((C = !0),
                          await (0, c.J)(
                            async () => {
                              (w = await (0, o.s)(
                                e,
                                f.f,
                                "getTransaction"
                              )({ hash: n })).blockNumber &&
                                (p = w.blockNumber);
                            },
                            { delay: y, retryCount: g }
                          ),
                          (C = !1)),
                        (A = await (0, o.s)(
                          e,
                          d.a,
                          "getTransactionReceipt"
                        )({ hash: n })),
                        t > 1 && (!A.blockNumber || p - A.blockNumber + 1n < t))
                      )
                        return;
                      h(() => s.resolve(A));
                    } catch (n) {
                      if (n instanceof i.Bh || n instanceof i.Yb) {
                        if (!w) {
                          C = !1;
                          return;
                        }
                        try {
                          (v = w), (C = !0);
                          let n = await (0, c.J)(
                            () =>
                              (0, o.s)(
                                e,
                                l.Q,
                                "getBlock"
                              )({ blockNumber: p, includeTransactions: !0 }),
                            {
                              delay: y,
                              retryCount: g,
                              shouldRetry: ({ error: e }) => e instanceof r.f,
                            }
                          );
                          C = !1;
                          let i = n.transactions.find(
                            ({ from: e, nonce: t }) =>
                              e === v.from && t === v.nonce
                          );
                          if (
                            !i ||
                            ((A = await (0, o.s)(
                              e,
                              d.a,
                              "getTransactionReceipt"
                            )({ hash: i.hash })),
                            t > 1 &&
                              (!A.blockNumber || p - A.blockNumber + 1n < t))
                          )
                            return;
                          let a = "replaced";
                          i.to === v.to && i.value === v.value
                            ? (a = "repriced")
                            : i.from === i.to &&
                              0n === i.value &&
                              (a = "cancelled"),
                            h(() => {
                              s.onReplaced?.({
                                reason: a,
                                replacedTransaction: v,
                                transaction: i,
                                transactionReceipt: A,
                              }),
                                s.resolve(A);
                            });
                        } catch (e) {
                          h(() => s.reject(e));
                        }
                      } else h(() => s.reject(n));
                    }
                },
              });
            });
          return x;
        }
      },
      99376: function (e, t, n) {
        "use strict";
        n.d(t, {
          q: function () {
            return u;
          },
        });
        var r = n(72932),
          i = n(82645),
          o = n(36478),
          s = n(41495),
          a = n(31853),
          c = n(13708);
        function u(
          e,
          {
            emitOnBegin: t = !1,
            emitMissed: n = !1,
            onBlockNumber: u,
            onError: l,
            poll: f,
            pollingInterval: d = e.pollingInterval,
          }
        ) {
          let h;
          return (
            void 0 !== f
              ? f
              : "webSocket" !== e.transport.type &&
                ("fallback" !== e.transport.type ||
                  "webSocket" !== e.transport.transports[0].config.type)
          )
            ? (() => {
                let r = (0, a.P)(["watchBlockNumber", e.uid, t, n, d]);
                return (0, o.N7)(r, { onBlockNumber: u, onError: l }, (r) =>
                  (0, s.$)(
                    async () => {
                      try {
                        let t = await (0, i.s)(
                          e,
                          c.z,
                          "getBlockNumber"
                        )({ cacheTime: 0 });
                        if (h) {
                          if (t === h) return;
                          if (t - h > 1 && n)
                            for (let e = h + 1n; e < t; e++)
                              r.onBlockNumber(e, h), (h = e);
                        }
                        (!h || t > h) && (r.onBlockNumber(t, h), (h = t));
                      } catch (e) {
                        r.onError?.(e);
                      }
                    },
                    { emitOnBegin: t, interval: d }
                  )
                );
              })()
            : (() => {
                let i = (0, a.P)(["watchBlockNumber", e.uid, t, n]);
                return (0, o.N7)(i, { onBlockNumber: u, onError: l }, (t) => {
                  let n = !0,
                    i = () => (n = !1);
                  return (
                    (async () => {
                      try {
                        let o = (() => {
                            if ("fallback" === e.transport.type) {
                              let t = e.transport.transports.find(
                                (e) => "webSocket" === e.config.type
                              );
                              return t ? t.value : e.transport;
                            }
                            return e.transport;
                          })(),
                          { unsubscribe: s } = await o.subscribe({
                            params: ["newHeads"],
                            onData(e) {
                              if (!n) return;
                              let i = (0, r.y_)(e.result?.number);
                              t.onBlockNumber(i, h), (h = i);
                            },
                            onError(e) {
                              t.onError?.(e);
                            },
                          });
                        (i = s), n || i();
                      } catch (e) {
                        l?.(e);
                      }
                    })(),
                    () => i()
                  );
                });
              })();
        }
      },
      86048: function (e, t, n) {
        "use strict";
        n.d(t, {
          Q: function () {
            return x;
          },
          Z: function () {
            return B;
          },
        });
        var r = n(19775),
          i = n(6458),
          o = n(8741),
          s = n(74587),
          a = n(16689),
          c = n(4496),
          u = n(44659),
          l = n(59455);
        function f(e) {
          let { kzg: t } = e,
            n = e.to ?? ("string" == typeof e.blobs[0] ? "hex" : "bytes"),
            r =
              "string" == typeof e.blobs[0]
                ? e.blobs.map((e) => (0, u.nr)(e))
                : e.blobs,
            i = [];
          for (let e of r) i.push(Uint8Array.from(t.blobToKzgCommitment(e)));
          return "bytes" === n ? i : i.map((e) => (0, l.ci)(e));
        }
        function d(e) {
          let { kzg: t } = e,
            n = e.to ?? ("string" == typeof e.blobs[0] ? "hex" : "bytes"),
            r =
              "string" == typeof e.blobs[0]
                ? e.blobs.map((e) => (0, u.nr)(e))
                : e.blobs,
            i =
              "string" == typeof e.commitments[0]
                ? e.commitments.map((e) => (0, u.nr)(e))
                : e.commitments,
            o = [];
          for (let e = 0; e < r.length; e++) {
            let n = r[e],
              s = i[e];
            o.push(Uint8Array.from(t.computeBlobKzgProof(n, s)));
          }
          return "bytes" === n ? o : o.map((e) => (0, l.ci)(e));
        }
        var h = n(29272),
          p = n(93610),
          m = n(81544);
        class g extends m.G {
          constructor({ maxSize: e, size: t }) {
            super("Blob size is too large.", {
              metaMessages: [`Max: ${e} bytes`, `Given: ${t} bytes`],
              name: "BlobSizeTooLargeError",
            });
          }
        }
        class y extends m.G {
          constructor() {
            super("Blob data must not be empty.", { name: "EmptyBlobError" });
          }
        }
        var b = n(46033),
          w = n(20556),
          v = n(82645),
          A = n(54605),
          E = n(63228),
          C = n(12363);
        let x = [
          "blobVersionedHashes",
          "chainId",
          "fees",
          "gas",
          "nonce",
          "type",
        ];
        async function B(e, t) {
          let n, m;
          let {
              account: B = e.account,
              blobs: I,
              chain: S,
              gas: P,
              kzg: T,
              nonce: O,
              nonceManager: k,
              parameters: R = x,
              type: N,
            } = t,
            M = B ? (0, r.T)(B) : B,
            L = { ...t, ...(M ? { from: M?.address } : {}) };
          async function F() {
            return (
              n ||
              (n = await (0, v.s)(e, s.Q, "getBlock")({ blockTag: "latest" }))
            );
          }
          async function U() {
            return (
              m ||
              (S
                ? S.id
                : void 0 !== t.chainId
                ? t.chainId
                : (m = await (0, v.s)(e, C.L, "getChainId")({})))
            );
          }
          if (
            (R.includes("blobVersionedHashes") || R.includes("sidecars")) &&
            I &&
            T
          ) {
            let e = f({ blobs: I, kzg: T });
            if (R.includes("blobVersionedHashes")) {
              let t = (function (e) {
                let { commitments: t, version: n } = e,
                  r = e.to ?? ("string" == typeof t[0] ? "hex" : "bytes"),
                  i = [];
                for (let e of t)
                  i.push(
                    (function (e) {
                      let { commitment: t, version: n = 1 } = e,
                        r = e.to ?? ("string" == typeof t ? "hex" : "bytes"),
                        i = (function (e, t) {
                          let n = (0, h.JQ)(
                            (0, p.v)(e, { strict: !1 }) ? (0, u.O0)(e) : e
                          );
                          return "bytes" === (t || "hex") ? n : (0, l.NC)(n);
                        })(t, "bytes");
                      return i.set([n], 0), "bytes" === r ? i : (0, l.ci)(i);
                    })({ commitment: e, to: r, version: n })
                  );
                return i;
              })({ commitments: e, to: "hex" });
              L.blobVersionedHashes = t;
            }
            if (R.includes("sidecars")) {
              let t = d({ blobs: I, commitments: e, kzg: T }),
                n = (function (e) {
                  let { data: t, kzg: n, to: r } = e,
                    i =
                      e.blobs ??
                      (function (e) {
                        let t =
                            e.to ??
                            ("string" == typeof e.data ? "hex" : "bytes"),
                          n =
                            "string" == typeof e.data
                              ? (0, u.nr)(e.data)
                              : e.data,
                          r = (0, w.d)(n);
                        if (!r) throw new y();
                        if (r > 761855)
                          throw new g({ maxSize: 761855, size: r });
                        let i = [],
                          o = !0,
                          s = 0;
                        for (; o; ) {
                          let e = (0, b.q)(new Uint8Array(131072)),
                            t = 0;
                          for (; t < 4096; ) {
                            let r = n.slice(s, s + 31);
                            if (
                              (e.pushByte(0), e.pushBytes(r), r.length < 31)
                            ) {
                              e.pushByte(128), (o = !1);
                              break;
                            }
                            t++, (s += 31);
                          }
                          i.push(e);
                        }
                        return "bytes" === t
                          ? i.map((e) => e.bytes)
                          : i.map((e) => (0, l.ci)(e.bytes));
                      })({ data: t, to: r }),
                    o = e.commitments ?? f({ blobs: i, kzg: n, to: r }),
                    s =
                      e.proofs ??
                      d({ blobs: i, commitments: o, kzg: n, to: r }),
                    a = [];
                  for (let e = 0; e < i.length; e++)
                    a.push({ blob: i[e], commitment: o[e], proof: s[e] });
                  return a;
                })({ blobs: I, commitments: e, proofs: t, to: "hex" });
              L.sidecars = n;
            }
          }
          if (
            (R.includes("chainId") && (L.chainId = await U()),
            R.includes("nonce") && void 0 === O && M)
          ) {
            if (k) {
              let t = await U();
              L.nonce = await k.consume({
                address: M.address,
                chainId: t,
                client: e,
              });
            } else
              L.nonce = await (0, v.s)(
                e,
                a.K,
                "getTransactionCount"
              )({ address: M.address, blockTag: "pending" });
          }
          if ((R.includes("fees") || R.includes("type")) && void 0 === N)
            try {
              L.type = (function (e) {
                if (e.type) return e.type;
                if (void 0 !== e.authorizationList) return "eip7702";
                if (
                  void 0 !== e.blobs ||
                  void 0 !== e.blobVersionedHashes ||
                  void 0 !== e.maxFeePerBlobGas ||
                  void 0 !== e.sidecars
                )
                  return "eip4844";
                if (
                  void 0 !== e.maxFeePerGas ||
                  void 0 !== e.maxPriorityFeePerGas
                )
                  return "eip1559";
                if (void 0 !== e.gasPrice)
                  return void 0 !== e.accessList ? "eip2930" : "legacy";
                throw new E.j3({ transaction: e });
              })(L);
            } catch {
              let e = await F();
              L.type =
                "bigint" == typeof e?.baseFeePerGas ? "eip1559" : "legacy";
            }
          if (R.includes("fees")) {
            if ("legacy" !== L.type && "eip2930" !== L.type) {
              if (
                void 0 === L.maxFeePerGas ||
                void 0 === L.maxPriorityFeePerGas
              ) {
                let n = await F(),
                  { maxFeePerGas: r, maxPriorityFeePerGas: o } = await (0, i.C)(
                    e,
                    { block: n, chain: S, request: L }
                  );
                if (
                  void 0 === t.maxPriorityFeePerGas &&
                  t.maxFeePerGas &&
                  t.maxFeePerGas < o
                )
                  throw new c.ld({ maxPriorityFeePerGas: o });
                (L.maxPriorityFeePerGas = o), (L.maxFeePerGas = r);
              }
            } else {
              if (
                void 0 !== t.maxFeePerGas ||
                void 0 !== t.maxPriorityFeePerGas
              )
                throw new c.e5();
              let n = await F(),
                { gasPrice: r } = await (0, i.C)(e, {
                  block: n,
                  chain: S,
                  request: L,
                  type: "legacy",
                });
              L.gasPrice = r;
            }
          }
          return (
            R.includes("gas") &&
              void 0 === P &&
              (L.gas = await (0, v.s)(
                e,
                o.Q,
                "estimateGas"
              )({
                ...L,
                account: M ? { address: M.address, type: "json-rpc" } : M,
              })),
            (0, A.F)(L),
            delete L.parameters,
            L
          );
        }
      },
      9769: function (e, t, n) {
        "use strict";
        async function r(e, { serializedTransaction: t }) {
          return e.request(
            { method: "eth_sendRawTransaction", params: [t] },
            { retryCount: 0 }
          );
        }
        n.d(t, {
          p: function () {
            return r;
          },
        });
      },
      37240: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return r;
          },
        });
        let r = {
          formatters: void 0,
          fees: void 0,
          serializers: void 0,
          id: 1,
          name: "Ethereum",
          nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
          rpcUrls: { default: { http: ["https://cloudflare-eth.com"] } },
          blockExplorers: {
            default: {
              name: "Etherscan",
              url: "https://etherscan.io",
              apiUrl: "https://api.etherscan.io/api",
            },
          },
          contracts: {
            ensRegistry: {
              address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            },
            ensUniversalResolver: {
              address: "0xce01f8eee7E479C928F8919abD53E553a36CeF67",
              blockCreated: 19258213,
            },
            multicall3: {
              address: "0xca11bde05977b3631167028862be2a173976ca11",
              blockCreated: 14353601,
            },
          },
        };
      },
      82538: function (e, t, n) {
        "use strict";
        n.d(t, {
          e: function () {
            return o;
          },
        });
        var r = n(19775),
          i = n(78217);
        function o(e) {
          let {
              batch: t,
              cacheTime: n = e.pollingInterval ?? 4e3,
              ccipRead: o,
              key: s = "base",
              name: a = "Base Client",
              pollingInterval: c = 4e3,
              type: u = "base",
            } = e,
            l = e.chain,
            f = e.account ? (0, r.T)(e.account) : void 0,
            {
              config: d,
              request: h,
              value: p,
            } = e.transport({ chain: l, pollingInterval: c }),
            m = {
              account: f,
              batch: t,
              cacheTime: n,
              ccipRead: o,
              chain: l,
              key: s,
              name: a,
              pollingInterval: c,
              request: h,
              transport: { ...d, ...p },
              type: u,
              uid: (0, i.h)(),
            };
          return Object.assign(m, {
            extend: (function e(t) {
              return (n) => {
                let r = n(t);
                for (let e in m) delete r[e];
                let i = { ...t, ...r };
                return Object.assign(i, { extend: e(i) });
              };
            })(m),
          });
        }
      },
      24250: function (e, t, n) {
        "use strict";
        n.d(t, {
          q: function () {
            return d;
          },
        });
        var r = n(81544),
          i = n(17057),
          o = n(77014),
          s = n(59455),
          a = n(13169);
        let c = new (n(82061).k)(8192);
        var u = n(49287),
          l = n(31853),
          f = n(78217);
        function d(
          {
            key: e,
            name: t,
            request: n,
            retryCount: d = 3,
            retryDelay: h = 150,
            timeout: p,
            type: m,
          },
          g
        ) {
          return {
            config: {
              key: e,
              name: t,
              request: n,
              retryCount: d,
              retryDelay: h,
              timeout: p,
              type: m,
            },
            request: (function (e, t = {}) {
              return async (n, f = {}) => {
                let {
                    dedupe: d = !1,
                    retryDelay: h = 150,
                    retryCount: p = 3,
                    uid: m,
                  } = { ...t, ...f },
                  g = d ? (0, a.w)((0, s.$G)(`${m}.${(0, l.P)(n)}`)) : void 0;
                return (function (e, { enabled: t = !0, id: n }) {
                  if (!t || !n) return e();
                  if (c.get(n)) return c.get(n);
                  let r = e().finally(() => c.delete(n));
                  return c.set(n, r), r;
                })(
                  () =>
                    (0, u.J)(
                      async () => {
                        try {
                          return await e(n);
                        } catch (e) {
                          switch (e.code) {
                            case o.s7.code:
                              throw new o.s7(e);
                            case o.B.code:
                              throw new o.B(e);
                            case o.LX.code:
                              throw new o.LX(e, { method: n.method });
                            case o.nY.code:
                              throw new o.nY(e);
                            case o.XS.code:
                              throw new o.XS(e);
                            case o.yR.code:
                              throw new o.yR(e);
                            case o.Og.code:
                              throw new o.Og(e);
                            case o.pT.code:
                              throw new o.pT(e);
                            case o.KB.code:
                              throw new o.KB(e);
                            case o.gS.code:
                              throw new o.gS(e, { method: n.method });
                            case o.Pv.code:
                              throw new o.Pv(e);
                            case o.GD.code:
                              throw new o.GD(e);
                            case o.ab.code:
                              throw new o.ab(e);
                            case o.PE.code:
                              throw new o.PE(e);
                            case o.Ts.code:
                              throw new o.Ts(e);
                            case o.u5.code:
                              throw new o.u5(e);
                            case o.I0.code:
                              throw new o.I0(e);
                            case o.x3.code:
                              throw new o.x3(e);
                            case 5e3:
                              throw new o.ab(e);
                            default:
                              if (e instanceof r.G) throw e;
                              throw new o.ir(e);
                          }
                        }
                      },
                      {
                        delay: ({ count: e, error: t }) => {
                          if (t && t instanceof i.Gg) {
                            let e = t?.headers?.get("Retry-After");
                            if (e?.match(/\d/)) return 1e3 * Number.parseInt(e);
                          }
                          return ~~(1 << e) * h;
                        },
                        retryCount: p,
                        shouldRetry: ({ error: e }) =>
                          "code" in e && "number" == typeof e.code
                            ? -1 === e.code ||
                              e.code === o.Pv.code ||
                              e.code === o.XS.code
                            : !(e instanceof i.Gg) ||
                              !e.status ||
                              403 === e.status ||
                              408 === e.status ||
                              413 === e.status ||
                              429 === e.status ||
                              500 === e.status ||
                              502 === e.status ||
                              503 === e.status ||
                              504 === e.status,
                      }
                    ),
                  { enabled: d, id: g }
                );
              };
            })(n, { retryCount: d, retryDelay: h, uid: (0, f.h)() }),
            value: g,
          };
        }
      },
      79516: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return f;
          },
        });
        var r = n(17057),
          i = n(81544);
        class o extends i.G {
          constructor() {
            super(
              "No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",
              { docsPath: "/docs/clients/intro", name: "UrlRequiredError" }
            );
          }
        }
        var s = n(43226),
          a = n(39504),
          c = n(31853);
        let u = {
          current: 0,
          take() {
            return this.current++;
          },
          reset() {
            this.current = 0;
          },
        };
        var l = n(24250);
        function f(e, t = {}) {
          let {
            batch: n,
            fetchOptions: i,
            key: f = "http",
            name: d = "HTTP JSON-RPC",
            onFetchRequest: h,
            onFetchResponse: p,
            retryDelay: m,
          } = t;
          return ({ chain: g, retryCount: y, timeout: b }) => {
            let { batchSize: w = 1e3, wait: v = 0 } =
                "object" == typeof n ? n : {},
              A = t.retryCount ?? y,
              E = b ?? t.timeout ?? 1e4,
              C = e || g?.rpcUrls.default.http[0];
            if (!C) throw new o();
            let x = (function (e, t = {}) {
              return {
                async request(n) {
                  let {
                      body: i,
                      onRequest: o = t.onRequest,
                      onResponse: s = t.onResponse,
                      timeout: l = t.timeout ?? 1e4,
                    } = n,
                    f = {
                      ...(t.fetchOptions ?? {}),
                      ...(n.fetchOptions ?? {}),
                    },
                    { headers: d, method: h, signal: p } = f;
                  try {
                    let t;
                    let n = await (0, a.F)(
                      async ({ signal: t }) => {
                        let n = {
                            ...f,
                            body: Array.isArray(i)
                              ? (0, c.P)(
                                  i.map((e) => ({
                                    jsonrpc: "2.0",
                                    id: e.id ?? u.take(),
                                    ...e,
                                  }))
                                )
                              : (0, c.P)({
                                  jsonrpc: "2.0",
                                  id: i.id ?? u.take(),
                                  ...i,
                                }),
                            headers: {
                              "Content-Type": "application/json",
                              ...d,
                            },
                            method: h || "POST",
                            signal: p || (l > 0 ? t : null),
                          },
                          r = new Request(e, n),
                          s = (await o?.(r, n)) ?? { ...n, url: e };
                        return await fetch(s.url ?? e, s);
                      },
                      {
                        errorInstance: new r.W5({ body: i, url: e }),
                        timeout: l,
                        signal: !0,
                      }
                    );
                    if (
                      (s && (await s(n)),
                      n.headers
                        .get("Content-Type")
                        ?.startsWith("application/json"))
                    )
                      t = await n.json();
                    else {
                      t = await n.text();
                      try {
                        t = JSON.parse(t || "{}");
                      } catch (e) {
                        if (n.ok) throw e;
                        t = { error: t };
                      }
                    }
                    if (!n.ok)
                      throw new r.Gg({
                        body: i,
                        details: (0, c.P)(t.error) || n.statusText,
                        headers: n.headers,
                        status: n.status,
                        url: e,
                      });
                    return t;
                  } catch (t) {
                    if (t instanceof r.Gg || t instanceof r.W5) throw t;
                    throw new r.Gg({ body: i, cause: t, url: e });
                  }
                },
              };
            })(C, { fetchOptions: i, onRequest: h, onResponse: p, timeout: E });
            return (0, l.q)(
              {
                key: f,
                name: d,
                async request({ method: e, params: t }) {
                  let i = { method: e, params: t },
                    { schedule: o } = (0, s.S)({
                      id: C,
                      wait: v,
                      shouldSplitBatch: (e) => e.length > w,
                      fn: (e) => x.request({ body: e }),
                      sort: (e, t) => e.id - t.id,
                    }),
                    a = async (e) =>
                      n ? o(e) : [await x.request({ body: e })],
                    [{ error: c, result: u }] = await a(i);
                  if (c) throw new r.bs({ body: i, error: c, url: C });
                  return u;
                },
                retryCount: A,
                retryDelay: m,
                timeout: E,
                type: "http",
              },
              { fetchOptions: i, url: C }
            );
          };
        }
      },
      98158: function (e, t, n) {
        "use strict";
        n.d(t, {
          $o: function () {
            return u;
          },
          F8: function () {
            return r;
          },
          X$: function () {
            return c;
          },
          du: function () {
            return s;
          },
          k3: function () {
            return o;
          },
          nZ: function () {
            return a;
          },
        });
        let r = [
            {
              inputs: [
                {
                  components: [
                    { name: "target", type: "address" },
                    { name: "allowFailure", type: "bool" },
                    { name: "callData", type: "bytes" },
                  ],
                  name: "calls",
                  type: "tuple[]",
                },
              ],
              name: "aggregate3",
              outputs: [
                {
                  components: [
                    { name: "success", type: "bool" },
                    { name: "returnData", type: "bytes" },
                  ],
                  name: "returnData",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
          ],
          i = [
            { inputs: [], name: "ResolverNotFound", type: "error" },
            { inputs: [], name: "ResolverWildcardNotSupported", type: "error" },
            { inputs: [], name: "ResolverNotContract", type: "error" },
            {
              inputs: [{ name: "returnData", type: "bytes" }],
              name: "ResolverError",
              type: "error",
            },
            {
              inputs: [
                {
                  components: [
                    { name: "status", type: "uint16" },
                    { name: "message", type: "string" },
                  ],
                  name: "errors",
                  type: "tuple[]",
                },
              ],
              name: "HttpError",
              type: "error",
            },
          ],
          o = [
            ...i,
            {
              name: "resolve",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes" },
                { name: "data", type: "bytes" },
              ],
              outputs: [
                { name: "", type: "bytes" },
                { name: "address", type: "address" },
              ],
            },
            {
              name: "resolve",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes" },
                { name: "data", type: "bytes" },
                { name: "gateways", type: "string[]" },
              ],
              outputs: [
                { name: "", type: "bytes" },
                { name: "address", type: "address" },
              ],
            },
          ],
          s = [
            ...i,
            {
              name: "reverse",
              type: "function",
              stateMutability: "view",
              inputs: [{ type: "bytes", name: "reverseName" }],
              outputs: [
                { type: "string", name: "resolvedName" },
                { type: "address", name: "resolvedAddress" },
                { type: "address", name: "reverseResolver" },
                { type: "address", name: "resolver" },
              ],
            },
            {
              name: "reverse",
              type: "function",
              stateMutability: "view",
              inputs: [
                { type: "bytes", name: "reverseName" },
                { type: "string[]", name: "gateways" },
              ],
              outputs: [
                { type: "string", name: "resolvedName" },
                { type: "address", name: "resolvedAddress" },
                { type: "address", name: "reverseResolver" },
                { type: "address", name: "resolver" },
              ],
            },
          ],
          a = [
            {
              name: "text",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "key", type: "string" },
              ],
              outputs: [{ name: "", type: "string" }],
            },
          ],
          c = [
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [{ name: "name", type: "bytes32" }],
              outputs: [{ name: "", type: "address" }],
            },
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "coinType", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bytes" }],
            },
          ],
          u = [
            {
              inputs: [
                { name: "_signer", type: "address" },
                { name: "_hash", type: "bytes32" },
                { name: "_signature", type: "bytes" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              inputs: [
                { name: "_signer", type: "address" },
                { name: "_hash", type: "bytes32" },
                { name: "_signature", type: "bytes" },
              ],
              outputs: [{ type: "bool" }],
              stateMutability: "nonpayable",
              type: "function",
              name: "isValidSig",
            },
          ];
      },
      45434: function (e, t, n) {
        "use strict";
        n.d(t, {
          NO: function () {
            return r;
          },
          ST: function () {
            return o;
          },
          pG: function () {
            return i;
          },
        });
        let r =
            "0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe",
          i =
            "0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe",
          o =
            "0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572";
      },
      75018: function (e, t, n) {
        "use strict";
        n.d(t, {
          zL: function () {
            return r;
          },
        });
        let r = 2n ** 256n - 1n;
      },
      55246: function (e, t, n) {
        "use strict";
        n.d(t, {
          $: function () {
            return r;
          },
          Up: function () {
            return i;
          },
          hZ: function () {
            return o;
          },
        });
        let r = {
            1: "An `assert` condition failed.",
            17: "Arithmetic operation resulted in underflow or overflow.",
            18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
            33: "Attempted to convert to an invalid type.",
            34: "Attempted to access a storage byte array that is incorrectly encoded.",
            49: "Performed `.pop()` on an empty array",
            50: "Array index is out of bounds.",
            65: "Allocated too much memory or created an array which is too large.",
            81: "Attempted to call a zero-initialized variable of internal function type.",
          },
          i = {
            inputs: [{ name: "message", type: "string" }],
            name: "Error",
            type: "error",
          },
          o = {
            inputs: [{ name: "reason", type: "uint256" }],
            name: "Panic",
            type: "error",
          };
      },
      98173: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bd: function () {
            return o;
          },
          Zn: function () {
            return i;
          },
          ez: function () {
            return r;
          },
        });
        let r = { gwei: 9, wei: 18 },
          i = { ether: -9, wei: 9 },
          o = { ether: -18, gwei: -9 };
      },
      65531: function (e, t, n) {
        "use strict";
        n.d(t, {
          CI: function () {
            return x;
          },
          FM: function () {
            return p;
          },
          Gy: function () {
            return E;
          },
          KY: function () {
            return v;
          },
          M4: function () {
            return f;
          },
          MX: function () {
            return b;
          },
          S4: function () {
            return w;
          },
          SM: function () {
            return A;
          },
          cO: function () {
            return a;
          },
          dh: function () {
            return C;
          },
          fM: function () {
            return s;
          },
          fs: function () {
            return d;
          },
          gr: function () {
            return l;
          },
          hn: function () {
            return B;
          },
          lC: function () {
            return m;
          },
          mv: function () {
            return g;
          },
          wM: function () {
            return I;
          },
          wb: function () {
            return u;
          },
          xB: function () {
            return c;
          },
          xL: function () {
            return y;
          },
          yP: function () {
            return h;
          },
        });
        var r = n(7275),
          i = n(20556),
          o = n(81544);
        class s extends o.G {
          constructor({ docsPath: e }) {
            super(
              "A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.",
              { docsPath: e, name: "AbiConstructorNotFoundError" }
            );
          }
        }
        class a extends o.G {
          constructor({ docsPath: e }) {
            super(
              "Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.",
              { docsPath: e, name: "AbiConstructorParamsNotFoundError" }
            );
          }
        }
        class c extends o.G {
          constructor({ data: e, params: t, size: n }) {
            super(
              `Data size of ${n} bytes is too small for given parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.h)(t, { includeName: !0 })})`,
                  `Data:   ${e} (${n} bytes)`,
                ],
                name: "AbiDecodingDataSizeTooSmallError",
              }
            ),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e),
              (this.params = t),
              (this.size = n);
          }
        }
        class u extends o.G {
          constructor() {
            super('Cannot decode zero data ("0x") with ABI parameters.', {
              name: "AbiDecodingZeroDataError",
            });
          }
        }
        class l extends o.G {
          constructor({ expectedLength: e, givenLength: t, type: n }) {
            super(
              `ABI encoding array length mismatch for type ${n}.
Expected length: ${e}
Given length: ${t}`,
              { name: "AbiEncodingArrayLengthMismatchError" }
            );
          }
        }
        class f extends o.G {
          constructor({ expectedSize: e, value: t }) {
            super(
              `Size of bytes "${t}" (bytes${(0, i.d)(
                t
              )}) does not match expected size (bytes${e}).`,
              { name: "AbiEncodingBytesSizeMismatchError" }
            );
          }
        }
        class d extends o.G {
          constructor({ expectedLength: e, givenLength: t }) {
            super(
              `ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`,
              { name: "AbiEncodingLengthMismatchError" }
            );
          }
        }
        class h extends o.G {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t, name: "AbiErrorSignatureNotFoundError" }
            ),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.signature = e);
          }
        }
        class p extends o.G {
          constructor({ docsPath: e }) {
            super("Cannot extract event signature from empty topics.", {
              docsPath: e,
              name: "AbiEventSignatureEmptyTopicsError",
            });
          }
        }
        class m extends o.G {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t, name: "AbiEventSignatureNotFoundError" }
            );
          }
        }
        class g extends o.G {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Event ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`,
              { docsPath: t, name: "AbiEventNotFoundError" }
            );
          }
        }
        class y extends o.G {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Function ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t, name: "AbiFunctionNotFoundError" }
            );
          }
        }
        class b extends o.G {
          constructor(e, { docsPath: t }) {
            super(
              `Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t, name: "AbiFunctionOutputsNotFoundError" }
            );
          }
        }
        class w extends o.G {
          constructor(e, t) {
            super("Found ambiguous types in overloaded ABI items.", {
              metaMessages: [
                `\`${e.type}\` in \`${(0, r.t)(e.abiItem)}\`, and`,
                `\`${t.type}\` in \`${(0, r.t)(t.abiItem)}\``,
                "",
                "These types encode differently and cannot be distinguished at runtime.",
                "Remove one of the ambiguous items in the ABI.",
              ],
              name: "AbiItemAmbiguityError",
            });
          }
        }
        class v extends o.G {
          constructor({ expectedSize: e, givenSize: t }) {
            super(`Expected bytes${e}, got bytes${t}.`, {
              name: "BytesSizeMismatchError",
            });
          }
        }
        class A extends o.G {
          constructor({ abiItem: e, data: t, params: n, size: i }) {
            super(
              `Data size of ${i} bytes is too small for non-indexed event parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.h)(n, { includeName: !0 })})`,
                  `Data:   ${t} (${i} bytes)`,
                ],
                name: "DecodeLogDataMismatch",
              }
            ),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e),
              (this.data = t),
              (this.params = n),
              (this.size = i);
          }
        }
        class E extends o.G {
          constructor({ abiItem: e, param: t }) {
            super(
              `Expected a topic for indexed event parameter${
                t.name ? ` "${t.name}"` : ""
              } on event "${(0, r.t)(e, { includeName: !0 })}".`,
              { name: "DecodeLogTopicsMismatch" }
            ),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e);
          }
        }
        class C extends o.G {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`,
              { docsPath: t, name: "InvalidAbiEncodingType" }
            );
          }
        }
        class x extends o.G {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`,
              { docsPath: t, name: "InvalidAbiDecodingType" }
            );
          }
        }
        class B extends o.G {
          constructor(e) {
            super(`Value "${e}" is not a valid array.`, {
              name: "InvalidArrayError",
            });
          }
        }
        class I extends o.G {
          constructor(e) {
            super(
              `"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`,
              { name: "InvalidDefinitionTypeError" }
            );
          }
        }
      },
      65704: function (e, t, n) {
        "use strict";
        n.d(t, {
          Y: function () {
            return o;
          },
          o: function () {
            return i;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ docsPath: e } = {}) {
            super(
              "Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.",
              { docsPath: e, docsSlug: "account", name: "AccountNotFoundError" }
            );
          }
        }
        class o extends r.G {
          constructor({ docsPath: e, metaMessages: t, type: n }) {
            super(`Account type "${n}" is not supported.`, {
              docsPath: e,
              metaMessages: t,
              name: "AccountTypeNotSupportedError",
            });
          }
        }
      },
      10052: function (e, t, n) {
        "use strict";
        n.d(t, {
          b: function () {
            return i;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ address: e }) {
            super(`Address "${e}" is invalid.`, {
              metaMessages: [
                "- Address must be a hex value of 20 bytes (40 hex characters).",
                "- Address must match its checksum counterpart.",
              ],
              name: "InvalidAddressError",
            });
          }
        }
      },
      81544: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return o;
          },
        });
        let r = "2.21.44",
          i = {
            getDocsUrl: ({ docsBaseUrl: e, docsPath: t = "", docsSlug: n }) =>
              t ? `${e ?? "https://viem.sh"}${t}${n ? `#${n}` : ""}` : void 0,
            version: `viem@${r}`,
          };
        class o extends Error {
          constructor(e, t = {}) {
            let n =
                t.cause instanceof o
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              s = (t.cause instanceof o && t.cause.docsPath) || t.docsPath,
              a = i.getDocsUrl?.({ ...t, docsPath: s });
            super(
              [
                e || "An error occurred.",
                "",
                ...(t.metaMessages ? [...t.metaMessages, ""] : []),
                ...(a ? [`Docs: ${a}`] : []),
                ...(n ? [`Details: ${n}`] : []),
                ...(i.version ? [`Version: ${i.version}`] : []),
              ].join("\n"),
              t.cause ? { cause: t.cause } : void 0
            ),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "version", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BaseError",
              }),
              (this.details = n),
              (this.docsPath = s),
              (this.metaMessages = t.metaMessages),
              (this.name = t.name ?? this.name),
              (this.shortMessage = e),
              (this.version = r);
          }
          walk(e) {
            return (function e(t, n) {
              return n?.(t)
                ? t
                : t &&
                  "object" == typeof t &&
                  "cause" in t &&
                  void 0 !== t.cause
                ? e(t.cause, n)
                : n
                ? null
                : t;
            })(this, e);
          }
        }
      },
      12197: function (e, t, n) {
        "use strict";
        n.d(t, {
          f: function () {
            return i;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ blockHash: e, blockNumber: t }) {
            let n = "Block";
            e && (n = `Block at hash "${e}"`),
              t && (n = `Block at number "${t}"`),
              super(`${n} could not be found.`, { name: "BlockNotFoundError" });
          }
        }
      },
      35586: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bk: function () {
            return s;
          },
          Yl: function () {
            return o;
          },
          mm: function () {
            return i;
          },
          pZ: function () {
            return a;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ blockNumber: e, chain: t, contract: n }) {
            super(`Chain "${t.name}" does not support contract "${n.name}".`, {
              metaMessages: [
                "This could be due to any of the following:",
                ...(e && n.blockCreated && n.blockCreated > e
                  ? [
                      `- The contract "${n.name}" was not deployed until block ${n.blockCreated} (current block ${e}).`,
                    ]
                  : [
                      `- The chain does not have the contract "${n.name}" configured.`,
                    ]),
              ],
              name: "ChainDoesNotSupportContract",
            });
          }
        }
        class o extends r.G {
          constructor({ chain: e, currentChainId: t }) {
            super(
              `The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`,
              {
                metaMessages: [
                  `Current Chain ID:  ${t}`,
                  `Expected Chain ID: ${e.id} – ${e.name}`,
                ],
                name: "ChainMismatchError",
              }
            );
          }
        }
        class s extends r.G {
          constructor() {
            super(
              "No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.",
              { name: "ChainNotFoundError" }
            );
          }
        }
        class a extends r.G {
          constructor() {
            super("No chain was provided to the Client.", {
              name: "ClientChainNotConfiguredError",
            });
          }
        }
      },
      20010: function (e, t, n) {
        "use strict";
        n.d(t, {
          cg: function () {
            return y;
          },
          uq: function () {
            return b;
          },
          Lu: function () {
            return w;
          },
          Dk: function () {
            return v;
          },
          Mo: function () {
            return A;
          },
          VQ: function () {
            return E;
          },
        });
        var r = n(19775),
          i = n(55246),
          o = n(33591),
          s = n(7275),
          a = n(31853);
        function c({
          abiItem: e,
          args: t,
          includeFunctionName: n = !0,
          includeName: r = !1,
        }) {
          if ("name" in e && "inputs" in e && e.inputs)
            return `${n ? e.name : ""}(${e.inputs
              .map(
                (e, n) =>
                  `${r && e.name ? `${e.name}: ` : ""}${
                    "object" == typeof t[n] ? (0, a.P)(t[n]) : t[n]
                  }`
              )
              .join(", ")})`;
        }
        var u = n(64043),
          l = n(71282),
          f = n(29707),
          d = n(65531),
          h = n(81544),
          p = n(29625),
          m = n(63228),
          g = n(97564);
        class y extends h.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: i,
              data: o,
              gas: s,
              gasPrice: a,
              maxFeePerGas: c,
              maxPriorityFeePerGas: u,
              nonce: d,
              to: h,
              value: g,
              stateOverride: y,
            }
          ) {
            let b = t ? (0, r.T)(t) : void 0,
              w = (0, m.xr)({
                from: b?.address,
                to: h,
                value:
                  void 0 !== g &&
                  `${(0, l.d)(g)} ${i?.nativeCurrency?.symbol || "ETH"}`,
                data: o,
                gas: s,
                gasPrice: void 0 !== a && `${(0, f.o)(a)} gwei`,
                maxFeePerGas: void 0 !== c && `${(0, f.o)(c)} gwei`,
                maxPriorityFeePerGas: void 0 !== u && `${(0, f.o)(u)} gwei`,
                nonce: d,
              });
            y &&
              (w += `
${(0, p.Bj)(y)}`),
              super(e.shortMessage, {
                cause: e,
                docsPath: n,
                metaMessages: [
                  ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                  "Raw Call Arguments:",
                  w,
                ].filter(Boolean),
                name: "CallExecutionError",
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.cause = e);
          }
        }
        class b extends h.G {
          constructor(
            e,
            {
              abi: t,
              args: n,
              contractAddress: r,
              docsPath: i,
              functionName: o,
              sender: a,
            }
          ) {
            let l = (0, u.mE)({ abi: t, args: n, name: o }),
              f = l
                ? c({
                    abiItem: l,
                    args: n,
                    includeFunctionName: !1,
                    includeName: !1,
                  })
                : void 0,
              d = l ? (0, s.t)(l, { includeName: !0 }) : void 0,
              h = (0, m.xr)({
                address: r && (0, g.C)(r),
                function: d,
                args:
                  f &&
                  "()" !== f &&
                  `${[...Array(o?.length ?? 0).keys()]
                    .map(() => " ")
                    .join("")}${f}`,
                sender: a,
              });
            super(
              e.shortMessage ||
                `An unknown error occurred while executing the contract function "${o}".`,
              {
                cause: e,
                docsPath: i,
                metaMessages: [
                  ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                  h && "Contract Call:",
                  h,
                ].filter(Boolean),
                name: "ContractFunctionExecutionError",
              }
            ),
              Object.defineProperty(this, "abi", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "args", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "contractAddress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "formattedArgs", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "functionName", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "sender", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abi = t),
              (this.args = n),
              (this.cause = e),
              (this.contractAddress = r),
              (this.functionName = o),
              (this.sender = a);
          }
        }
        class w extends h.G {
          constructor({ abi: e, data: t, functionName: n, message: r }) {
            let a, u, l, f, h;
            if (t && "0x" !== t)
              try {
                let {
                  abiItem: n,
                  errorName: r,
                  args: a,
                } = (h = (0, o.p)({ abi: e, data: t }));
                if ("Error" === r) l = a[0];
                else if ("Panic" === r) {
                  let [e] = a;
                  l = i.$[e];
                } else {
                  let e = n ? (0, s.t)(n, { includeName: !0 }) : void 0,
                    t =
                      n && a
                        ? c({
                            abiItem: n,
                            args: a,
                            includeFunctionName: !1,
                            includeName: !1,
                          })
                        : void 0;
                  u = [
                    e ? `Error: ${e}` : "",
                    t && "()" !== t
                      ? `       ${[...Array(r?.length ?? 0).keys()]
                          .map(() => " ")
                          .join("")}${t}`
                      : "",
                  ];
                }
              } catch (e) {
                a = e;
              }
            else r && (l = r);
            a instanceof d.yP &&
              ((f = a.signature),
              (u = [
                `Unable to decode signature "${f}" as it was not found on the provided ABI.`,
                "Make sure you are using the correct ABI and that the error exists on it.",
                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${f}.`,
              ])),
              super(
                (l && "execution reverted" !== l) || f
                  ? [
                      `The contract function "${n}" reverted with the following ${
                        f ? "signature" : "reason"
                      }:`,
                      l || f,
                    ].join("\n")
                  : `The contract function "${n}" reverted.`,
                {
                  cause: a,
                  metaMessages: u,
                  name: "ContractFunctionRevertedError",
                }
              ),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "reason", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = h),
              (this.reason = l),
              (this.signature = f);
          }
        }
        class v extends h.G {
          constructor({ functionName: e }) {
            super(`The contract function "${e}" returned no data ("0x").`, {
              metaMessages: [
                "This could be due to any of the following:",
                `  - The contract does not have the function "${e}",`,
                "  - The parameters passed to the contract function may be invalid, or",
                "  - The address is not a contract.",
              ],
              name: "ContractFunctionZeroDataError",
            });
          }
        }
        class A extends h.G {
          constructor({ factory: e }) {
            super(
              `Deployment for counterfactual contract call failed${
                e ? ` for factory "${e}".` : ""
              }`,
              {
                metaMessages: [
                  "Please ensure:",
                  "- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).",
                  "- The `factoryData` is a valid encoded function call for contract deployment function on the factory.",
                ],
                name: "CounterfactualDeploymentFailedError",
              }
            );
          }
        }
        class E extends h.G {
          constructor({ data: e, message: t }) {
            super(t || "", { name: "RawContractError" }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3,
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e);
          }
        }
      },
      33630: function (e, t, n) {
        "use strict";
        n.d(t, {
          KD: function () {
            return s;
          },
          T_: function () {
            return i;
          },
          lQ: function () {
            return o;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ offset: e }) {
            super(`Offset \`${e}\` cannot be negative.`, {
              name: "NegativeOffsetError",
            });
          }
        }
        class o extends r.G {
          constructor({ length: e, position: t }) {
            super(
              `Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`,
              { name: "PositionOutOfBoundsError" }
            );
          }
        }
        class s extends r.G {
          constructor({ count: e, limit: t }) {
            super(
              `Recursive read limit of \`${t}\` exceeded (recursive read count: \`${e}\`).`,
              { name: "RecursiveReadLimitExceededError" }
            );
          }
        }
      },
      47116: function (e, t, n) {
        "use strict";
        n.d(t, {
          $s: function () {
            return o;
          },
          W_: function () {
            return s;
          },
          mV: function () {
            return i;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ offset: e, position: t, size: n }) {
            super(
              `Slice ${
                "start" === t ? "starting" : "ending"
              } at offset "${e}" is out-of-bounds (size: ${n}).`,
              { name: "SliceOffsetOutOfBoundsError" }
            );
          }
        }
        class o extends r.G {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} size (${e}) exceeds padding size (${t}).`,
              { name: "SizeExceedsPaddingSizeError" }
            );
          }
        }
        class s extends r.G {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} is expected to be ${t} ${n} long, but is ${e} ${n} long.`,
              { name: "InvalidBytesLengthError" }
            );
          }
        }
      },
      63152: function (e, t, n) {
        "use strict";
        n.d(t, {
          Cd: function () {
            return s;
          },
          J5: function () {
            return i;
          },
          M6: function () {
            return a;
          },
          yr: function () {
            return o;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ max: e, min: t, signed: n, size: r, value: i }) {
            super(
              `Number "${i}" is not in safe ${
                r ? `${8 * r}-bit ${n ? "signed" : "unsigned"} ` : ""
              }integer range ${e ? `(${t} to ${e})` : `(above ${t})`}`,
              { name: "IntegerOutOfRangeError" }
            );
          }
        }
        class o extends r.G {
          constructor(e) {
            super(
              `Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,
              { name: "InvalidBytesBooleanError" }
            );
          }
        }
        class s extends r.G {
          constructor(e) {
            super(
              `Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`,
              { name: "InvalidHexBooleanError" }
            );
          }
        }
        class a extends r.G {
          constructor({ givenSize: e, maxSize: t }) {
            super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`, {
              name: "SizeOverflowError",
            });
          }
        }
      },
      4496: function (e, t, n) {
        "use strict";
        n.d(t, {
          Fz: function () {
            return o;
          },
          e5: function () {
            return s;
          },
          ld: function () {
            return a;
          },
        });
        var r = n(29707),
          i = n(81544);
        class o extends i.G {
          constructor() {
            super("`baseFeeMultiplier` must be greater than 1.", {
              name: "BaseFeeScalarError",
            });
          }
        }
        class s extends i.G {
          constructor() {
            super("Chain does not support EIP-1559 fees.", {
              name: "Eip1559FeesNotSupportedError",
            });
          }
        }
        class a extends i.G {
          constructor({ maxPriorityFeePerGas: e }) {
            super(
              `\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,
              r.o)(e)} gwei).`,
              { name: "MaxFeePerGasTooLowError" }
            );
          }
        }
      },
      78125: function (e, t, n) {
        "use strict";
        n.d(t, {
          C_: function () {
            return f;
          },
          G$: function () {
            return a;
          },
          Hh: function () {
            return s;
          },
          M_: function () {
            return o;
          },
          WF: function () {
            return d;
          },
          ZI: function () {
            return c;
          },
          cj: function () {
            return g;
          },
          cs: function () {
            return m;
          },
          dR: function () {
            return h;
          },
          pZ: function () {
            return p;
          },
          se: function () {
            return l;
          },
          vU: function () {
            return u;
          },
        });
        var r = n(29707),
          i = n(81544);
        class o extends i.G {
          constructor({ cause: e, message: t } = {}) {
            let n = t
              ?.replace("execution reverted: ", "")
              ?.replace("execution reverted", "");
            super(
              `Execution reverted ${
                n ? `with reason: ${n}` : "for an unknown reason"
              }.`,
              { cause: e, name: "ExecutionRevertedError" }
            );
          }
        }
        Object.defineProperty(o, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 3,
        }),
          Object.defineProperty(o, "nodeMessage", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: /execution reverted/,
          });
        class s extends i.G {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.o)(t)} gwei` : ""
              }) cannot be higher than the maximum allowed value (2^256-1).`,
              { cause: e, name: "FeeCapTooHighError" }
            );
          }
        }
        Object.defineProperty(s, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/,
        });
        class a extends i.G {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.o)(t)}` : ""
              } gwei) cannot be lower than the block base fee.`,
              { cause: e, name: "FeeCapTooLowError" }
            );
          }
        }
        Object.defineProperty(a, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/,
        });
        class c extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is higher than the next one expected.`,
              { cause: e, name: "NonceTooHighError" }
            );
          }
        }
        Object.defineProperty(c, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too high/,
        });
        class u extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`,
              { cause: e, name: "NonceTooLowError" }
            );
          }
        }
        Object.defineProperty(u, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too low|transaction already imported|already known/,
        });
        class l extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }exceeds the maximum allowed nonce.`,
              { cause: e, name: "NonceMaxValueError" }
            );
          }
        }
        Object.defineProperty(l, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce has max value/,
        });
        class f extends i.G {
          constructor({ cause: e } = {}) {
            super(
              "The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
              {
                cause: e,
                metaMessages: [
                  "This error could arise when the account does not have enough funds to:",
                  " - pay for the total gas fee,",
                  " - pay for the value to send.",
                  " ",
                  "The cost of the transaction is calculated as `gas * gas fee + value`, where:",
                  " - `gas` is the amount of gas needed for transaction to execute,",
                  " - `gas fee` is the gas fee,",
                  " - `value` is the amount of ether to send to the recipient.",
                ],
                name: "InsufficientFundsError",
              }
            );
          }
        }
        Object.defineProperty(f, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /insufficient funds|exceeds transaction sender account balance/,
        });
        class d extends i.G {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction exceeds the limit allowed for the block.`,
              { cause: e, name: "IntrinsicGasTooHighError" }
            );
          }
        }
        Object.defineProperty(d, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too high|gas limit reached/,
        });
        class h extends i.G {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction is too low.`,
              { cause: e, name: "IntrinsicGasTooLowError" }
            );
          }
        }
        Object.defineProperty(h, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too low/,
        });
        class p extends i.G {
          constructor({ cause: e }) {
            super("The transaction type is not supported for this chain.", {
              cause: e,
              name: "TransactionTypeNotSupportedError",
            });
          }
        }
        Object.defineProperty(p, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /transaction type not valid/,
        });
        class m extends i.G {
          constructor({
            cause: e,
            maxPriorityFeePerGas: t,
            maxFeePerGas: n,
          } = {}) {
            super(
              `The provided tip (\`maxPriorityFeePerGas\`${
                t ? ` = ${(0, r.o)(t)} gwei` : ""
              }) cannot be higher than the fee cap (\`maxFeePerGas\`${
                n ? ` = ${(0, r.o)(n)} gwei` : ""
              }).`,
              { cause: e, name: "TipAboveFeeCapError" }
            );
          }
        }
        Object.defineProperty(m, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max priority fee per gas higher than max fee per gas|tip higher than fee cap/,
        });
        class g extends i.G {
          constructor({ cause: e }) {
            super(`An error occurred while executing: ${e?.shortMessage}`, {
              cause: e,
              name: "UnknownNodeError",
            });
          }
        }
      },
      17057: function (e, t, n) {
        "use strict";
        n.d(t, {
          Gg: function () {
            return s;
          },
          W5: function () {
            return c;
          },
          bs: function () {
            return a;
          },
        });
        var r = n(31853),
          i = n(81544),
          o = n(97564);
        class s extends i.G {
          constructor({
            body: e,
            cause: t,
            details: n,
            headers: i,
            status: s,
            url: a,
          }) {
            super("HTTP request failed.", {
              cause: t,
              details: n,
              metaMessages: [
                s && `Status: ${s}`,
                `URL: ${(0, o.G)(a)}`,
                e && `Request body: ${(0, r.P)(e)}`,
              ].filter(Boolean),
              name: "HttpRequestError",
            }),
              Object.defineProperty(this, "body", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "headers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "status", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "url", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.body = e),
              (this.headers = i),
              (this.status = s),
              (this.url = a);
          }
        }
        class a extends i.G {
          constructor({ body: e, error: t, url: n }) {
            super("RPC Request failed.", {
              cause: t,
              details: t.message,
              metaMessages: [
                `URL: ${(0, o.G)(n)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
              name: "RpcRequestError",
            }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.code = t.code);
          }
        }
        class c extends i.G {
          constructor({ body: e, url: t }) {
            super("The request took too long to respond.", {
              details: "The request timed out.",
              metaMessages: [
                `URL: ${(0, o.G)(t)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
              name: "TimeoutError",
            });
          }
        }
      },
      77014: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return c;
          },
          GD: function () {
            return b;
          },
          I0: function () {
            return C;
          },
          KB: function () {
            return m;
          },
          LX: function () {
            return u;
          },
          Og: function () {
            return h;
          },
          PE: function () {
            return v;
          },
          Pv: function () {
            return y;
          },
          Ts: function () {
            return A;
          },
          XS: function () {
            return f;
          },
          ab: function () {
            return w;
          },
          gS: function () {
            return g;
          },
          ir: function () {
            return B;
          },
          nY: function () {
            return l;
          },
          pT: function () {
            return p;
          },
          s7: function () {
            return a;
          },
          u5: function () {
            return E;
          },
          x3: function () {
            return x;
          },
          yR: function () {
            return d;
          },
        });
        var r = n(81544),
          i = n(17057);
        class o extends r.G {
          constructor(
            e,
            { code: t, docsPath: n, metaMessages: r, name: o, shortMessage: s }
          ) {
            super(s, {
              cause: e,
              docsPath: n,
              metaMessages: r || e?.metaMessages,
              name: o || "RpcError",
            }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.name = o || e.name),
              (this.code = e instanceof i.bs ? e.code : t ?? -1);
          }
        }
        class s extends o {
          constructor(e, t) {
            super(e, t),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = t.data);
          }
        }
        class a extends o {
          constructor(e) {
            super(e, {
              code: a.code,
              name: "ParseRpcError",
              shortMessage:
                "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            });
          }
        }
        Object.defineProperty(a, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32700,
        });
        class c extends o {
          constructor(e) {
            super(e, {
              code: c.code,
              name: "InvalidRequestRpcError",
              shortMessage: "JSON is not a valid request object.",
            });
          }
        }
        Object.defineProperty(c, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32600,
        });
        class u extends o {
          constructor(e, { method: t } = {}) {
            super(e, {
              code: u.code,
              name: "MethodNotFoundRpcError",
              shortMessage: `The method${
                t ? ` "${t}"` : ""
              } does not exist / is not available.`,
            });
          }
        }
        Object.defineProperty(u, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32601,
        });
        class l extends o {
          constructor(e) {
            super(e, {
              code: l.code,
              name: "InvalidParamsRpcError",
              shortMessage:
                "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters.",
            });
          }
        }
        Object.defineProperty(l, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32602,
        });
        class f extends o {
          constructor(e) {
            super(e, {
              code: f.code,
              name: "InternalRpcError",
              shortMessage: "An internal error was received.",
            });
          }
        }
        Object.defineProperty(f, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32603,
        });
        class d extends o {
          constructor(e) {
            super(e, {
              code: d.code,
              name: "InvalidInputRpcError",
              shortMessage:
                "Missing or invalid parameters.\nDouble check you have provided the correct parameters.",
            });
          }
        }
        Object.defineProperty(d, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32e3,
        });
        class h extends o {
          constructor(e) {
            super(e, {
              code: h.code,
              name: "ResourceNotFoundRpcError",
              shortMessage: "Requested resource not found.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(h, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32001,
        });
        class p extends o {
          constructor(e) {
            super(e, {
              code: p.code,
              name: "ResourceUnavailableRpcError",
              shortMessage: "Requested resource not available.",
            });
          }
        }
        Object.defineProperty(p, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32002,
        });
        class m extends o {
          constructor(e) {
            super(e, {
              code: m.code,
              name: "TransactionRejectedRpcError",
              shortMessage: "Transaction creation failed.",
            });
          }
        }
        Object.defineProperty(m, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32003,
        });
        class g extends o {
          constructor(e, { method: t } = {}) {
            super(e, {
              code: g.code,
              name: "MethodNotSupportedRpcError",
              shortMessage: `Method${t ? ` "${t}"` : ""} is not implemented.`,
            });
          }
        }
        Object.defineProperty(g, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32004,
        });
        class y extends o {
          constructor(e) {
            super(e, {
              code: y.code,
              name: "LimitExceededRpcError",
              shortMessage: "Request exceeds defined limit.",
            });
          }
        }
        Object.defineProperty(y, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32005,
        });
        class b extends o {
          constructor(e) {
            super(e, {
              code: b.code,
              name: "JsonRpcVersionUnsupportedError",
              shortMessage: "Version of JSON-RPC protocol is not supported.",
            });
          }
        }
        Object.defineProperty(b, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32006,
        });
        class w extends s {
          constructor(e) {
            super(e, {
              code: w.code,
              name: "UserRejectedRequestError",
              shortMessage: "User rejected the request.",
            });
          }
        }
        Object.defineProperty(w, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4001,
        });
        class v extends s {
          constructor(e) {
            super(e, {
              code: v.code,
              name: "UnauthorizedProviderError",
              shortMessage:
                "The requested method and/or account has not been authorized by the user.",
            });
          }
        }
        Object.defineProperty(v, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4100,
        });
        class A extends s {
          constructor(e, { method: t } = {}) {
            super(e, {
              code: A.code,
              name: "UnsupportedProviderMethodError",
              shortMessage: `The Provider does not support the requested method${
                t ? ` " ${t}"` : ""
              }.`,
            });
          }
        }
        Object.defineProperty(A, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4200,
        });
        class E extends s {
          constructor(e) {
            super(e, {
              code: E.code,
              name: "ProviderDisconnectedError",
              shortMessage: "The Provider is disconnected from all chains.",
            });
          }
        }
        Object.defineProperty(E, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4900,
        });
        class C extends s {
          constructor(e) {
            super(e, {
              code: C.code,
              name: "ChainDisconnectedError",
              shortMessage:
                "The Provider is not connected to the requested chain.",
            });
          }
        }
        Object.defineProperty(C, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4901,
        });
        class x extends s {
          constructor(e) {
            super(e, {
              code: x.code,
              name: "SwitchChainError",
              shortMessage:
                "An error occurred when attempting to switch chain.",
            });
          }
        }
        Object.defineProperty(x, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4902,
        });
        class B extends o {
          constructor(e) {
            super(e, {
              name: "UnknownRpcError",
              shortMessage: "An unknown RPC error occurred.",
            });
          }
        }
      },
      29625: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bj: function () {
            return a;
          },
          Nc: function () {
            return i;
          },
          Z8: function () {
            return o;
          },
        });
        var r = n(81544);
        class i extends r.G {
          constructor({ address: e }) {
            super(`State for account "${e}" is set multiple times.`, {
              name: "AccountStateConflictError",
            });
          }
        }
        class o extends r.G {
          constructor() {
            super("state and stateDiff are set on the same account.", {
              name: "StateAssignmentConflictError",
            });
          }
        }
        function s(e) {
          return e.reduce(
            (e, { slot: t, value: n }) => `${e}        ${t}: ${n}
`,
            ""
          );
        }
        function a(e) {
          return e
            .reduce((e, { address: t, ...n }) => {
              let r = `${e}    ${t}:
`;
              return (
                n.nonce &&
                  (r += `      nonce: ${n.nonce}
`),
                n.balance &&
                  (r += `      balance: ${n.balance}
`),
                n.code &&
                  (r += `      code: ${n.code}
`),
                n.state && (r += "      state:\n" + s(n.state)),
                n.stateDiff && (r += "      stateDiff:\n" + s(n.stateDiff)),
                r
              );
            }, "  State Override:\n")
            .slice(0, -1);
        }
      },
      63228: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bh: function () {
            return l;
          },
          Yb: function () {
            return f;
          },
          j3: function () {
            return c;
          },
          mc: function () {
            return d;
          },
          mk: function () {
            return u;
          },
          xY: function () {
            return a;
          },
          xr: function () {
            return s;
          },
        });
        var r = n(71282),
          i = n(29707),
          o = n(81544);
        function s(e) {
          let t = Object.entries(e)
              .map(([e, t]) => (void 0 === t || !1 === t ? null : [e, t]))
              .filter(Boolean),
            n = t.reduce((e, [t]) => Math.max(e, t.length), 0);
          return t
            .map(([e, t]) => `  ${`${e}:`.padEnd(n + 1)}  ${t}`)
            .join("\n");
        }
        class a extends o.G {
          constructor() {
            super(
              "Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.",
              { name: "FeeConflictError" }
            );
          }
        }
        class c extends o.G {
          constructor({ transaction: e }) {
            super(
              "Cannot infer a transaction type from provided transaction.",
              {
                metaMessages: [
                  "Provided Transaction:",
                  "{",
                  s(e),
                  "}",
                  "",
                  "To infer the type, either provide:",
                  "- a `type` to the Transaction, or",
                  "- an EIP-1559 Transaction with `maxFeePerGas`, or",
                  "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or",
                  "- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or",
                  "- an EIP-7702 Transaction with `authorizationList`, or",
                  "- a Legacy Transaction with `gasPrice`",
                ],
                name: "InvalidSerializableTransactionError",
              }
            );
          }
        }
        class u extends o.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: o,
              data: a,
              gas: c,
              gasPrice: u,
              maxFeePerGas: l,
              maxPriorityFeePerGas: f,
              nonce: d,
              to: h,
              value: p,
            }
          ) {
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Request Arguments:",
                s({
                  chain: o && `${o?.name} (id: ${o?.id})`,
                  from: t?.address,
                  to: h,
                  value:
                    void 0 !== p &&
                    `${(0, r.d)(p)} ${o?.nativeCurrency?.symbol || "ETH"}`,
                  data: a,
                  gas: c,
                  gasPrice: void 0 !== u && `${(0, i.o)(u)} gwei`,
                  maxFeePerGas: void 0 !== l && `${(0, i.o)(l)} gwei`,
                  maxPriorityFeePerGas: void 0 !== f && `${(0, i.o)(f)} gwei`,
                  nonce: d,
                }),
              ].filter(Boolean),
              name: "TransactionExecutionError",
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.cause = e);
          }
        }
        class l extends o.G {
          constructor({
            blockHash: e,
            blockNumber: t,
            blockTag: n,
            hash: r,
            index: i,
          }) {
            let o = "Transaction";
            n &&
              void 0 !== i &&
              (o = `Transaction at block time "${n}" at index "${i}"`),
              e &&
                void 0 !== i &&
                (o = `Transaction at block hash "${e}" at index "${i}"`),
              t &&
                void 0 !== i &&
                (o = `Transaction at block number "${t}" at index "${i}"`),
              r && (o = `Transaction with hash "${r}"`),
              super(`${o} could not be found.`, {
                name: "TransactionNotFoundError",
              });
          }
        }
        class f extends o.G {
          constructor({ hash: e }) {
            super(
              `Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`,
              { name: "TransactionReceiptNotFoundError" }
            );
          }
        }
        class d extends o.G {
          constructor({ hash: e }) {
            super(
              `Timed out while waiting for transaction with hash "${e}" to be confirmed.`,
              { name: "WaitForTransactionReceiptTimeoutError" }
            );
          }
        }
      },
      97564: function (e, t, n) {
        "use strict";
        n.d(t, {
          C: function () {
            return r;
          },
          G: function () {
            return i;
          },
        });
        let r = (e) => e,
          i = (e) => e;
      },
      30708: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return f;
          },
        });
        var r = n(69021),
          i = n(89256),
          o = n(44659),
          s = n(59455),
          a = n(81544),
          c = n(46033);
        function u(e) {
          if (e < 256) return 1;
          if (e < 65536) return 2;
          if (e < 16777216) return 3;
          if (e < 4294967296) return 4;
          throw new a.G("Length is too large.");
        }
        var l = n(13169);
        async function f(e) {
          let { authorization: t, signature: n } = e;
          return (0, r.R)({
            hash: (function (e) {
              let { chainId: t, contractAddress: n, nonce: r, to: a } = e,
                f = (0, l.w)(
                  (0, i.SM)([
                    "0x05",
                    (function (e, t = "hex") {
                      let n = (function e(t) {
                          return Array.isArray(t)
                            ? (function (e) {
                                let t = e.reduce((e, t) => e + t.length, 0),
                                  n = u(t);
                                return {
                                  length: t <= 55 ? 1 + t : 1 + n + t,
                                  encode(r) {
                                    for (let { encode: i } of (t <= 55
                                      ? r.pushByte(192 + t)
                                      : (r.pushByte(247 + n),
                                        1 === n
                                          ? r.pushUint8(t)
                                          : 2 === n
                                          ? r.pushUint16(t)
                                          : 3 === n
                                          ? r.pushUint24(t)
                                          : r.pushUint32(t)),
                                    e))
                                      i(r);
                                  },
                                };
                              })(t.map((t) => e(t)))
                            : (function (e) {
                                let t = "string" == typeof e ? (0, o.nr)(e) : e,
                                  n = u(t.length);
                                return {
                                  length:
                                    1 === t.length && t[0] < 128
                                      ? 1
                                      : t.length <= 55
                                      ? 1 + t.length
                                      : 1 + n + t.length,
                                  encode(e) {
                                    (1 === t.length && t[0] < 128) ||
                                      (t.length <= 55
                                        ? e.pushByte(128 + t.length)
                                        : (e.pushByte(183 + n),
                                          1 === n
                                            ? e.pushUint8(t.length)
                                            : 2 === n
                                            ? e.pushUint16(t.length)
                                            : 3 === n
                                            ? e.pushUint24(t.length)
                                            : e.pushUint32(t.length))),
                                      e.pushBytes(t);
                                  },
                                };
                              })(t);
                        })(e),
                        r = (0, c.q)(new Uint8Array(n.length));
                      return (n.encode(r), "hex" === t)
                        ? (0, s.ci)(r.bytes)
                        : r.bytes;
                    })([t ? (0, s.eC)(t) : "0x", n, r ? (0, s.eC)(r) : "0x"]),
                  ])
                );
              return "bytes" === a ? (0, o.nr)(f) : f;
            })(t),
            signature: n ?? t,
          });
        }
      },
      2742: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return m;
          },
        });
        var r = n(65531),
          i = n(31669),
          o = n(46033),
          s = n(20556),
          a = n(69921),
          c = n(36826),
          u = n(63152),
          l = n(72932),
          f = n(59455);
        function d(e, t = {}) {
          void 0 !== t.size && (0, l.Yf)(e, { size: t.size });
          let n = (0, f.ci)(e, t);
          return (0, l.ly)(n, t);
        }
        var h = n(44659),
          p = n(30056);
        function m(e, t) {
          let n = "string" == typeof t ? (0, h.nr)(t) : t,
            m = (0, o.q)(n);
          if (0 === (0, s.d)(n) && e.length > 0) throw new r.wb();
          if ((0, s.d)(t) && 32 > (0, s.d)(t))
            throw new r.xB({
              data: "string" == typeof t ? t : (0, f.ci)(t),
              params: e,
              size: (0, s.d)(t),
            });
          let y = 0,
            b = [];
          for (let t = 0; t < e.length; ++t) {
            let n = e[t];
            m.setPosition(y);
            let [o, s] = (function e(t, n, { staticPosition: o }) {
              let s = (0, p.S)(n.type);
              if (s) {
                let [r, i] = s;
                return (function (t, n, { length: r, staticPosition: i }) {
                  if (!r) {
                    let r = i + d(t.readBytes(32)),
                      o = r + 32;
                    t.setPosition(r);
                    let s = d(t.readBytes(32)),
                      a = g(n),
                      c = 0,
                      u = [];
                    for (let r = 0; r < s; ++r) {
                      t.setPosition(o + (a ? 32 * r : c));
                      let [i, s] = e(t, n, { staticPosition: o });
                      (c += s), u.push(i);
                    }
                    return t.setPosition(i + 32), [u, 32];
                  }
                  if (g(n)) {
                    let o = i + d(t.readBytes(32)),
                      s = [];
                    for (let i = 0; i < r; ++i) {
                      t.setPosition(o + 32 * i);
                      let [r] = e(t, n, { staticPosition: o });
                      s.push(r);
                    }
                    return t.setPosition(i + 32), [s, 32];
                  }
                  let o = 0,
                    s = [];
                  for (let a = 0; a < r; ++a) {
                    let [r, a] = e(t, n, { staticPosition: i + o });
                    (o += a), s.push(r);
                  }
                  return [s, o];
                })(t, { ...n, type: i }, { length: r, staticPosition: o });
              }
              if ("tuple" === n.type)
                return (function (t, n, { staticPosition: r }) {
                  let i =
                      0 === n.components.length ||
                      n.components.some(({ name: e }) => !e),
                    o = i ? [] : {},
                    s = 0;
                  if (g(n)) {
                    let a = r + d(t.readBytes(32));
                    for (let r = 0; r < n.components.length; ++r) {
                      let c = n.components[r];
                      t.setPosition(a + s);
                      let [u, l] = e(t, c, { staticPosition: a });
                      (s += l), (o[i ? r : c?.name] = u);
                    }
                    return t.setPosition(r + 32), [o, 32];
                  }
                  for (let a = 0; a < n.components.length; ++a) {
                    let c = n.components[a],
                      [u, l] = e(t, c, { staticPosition: r });
                    (o[i ? a : c?.name] = u), (s += l);
                  }
                  return [o, s];
                })(t, n, { staticPosition: o });
              if ("address" === n.type)
                return (function (e) {
                  let t = e.readBytes(32);
                  return [(0, i.x)((0, f.ci)((0, a.T4)(t, -20))), 32];
                })(t);
              if ("bool" === n.type)
                return [
                  (function (e, t = {}) {
                    let n = e;
                    if (
                      (void 0 !== t.size &&
                        ((0, l.Yf)(n, { size: t.size }), (n = (0, c.f)(n))),
                      n.length > 1 || n[0] > 1)
                    )
                      throw new u.yr(n);
                    return !!n[0];
                  })(t.readBytes(32), { size: 32 }),
                  32,
                ];
              if (n.type.startsWith("bytes"))
                return (function (e, t, { staticPosition: n }) {
                  let [r, i] = t.type.split("bytes");
                  if (!i) {
                    let t = d(e.readBytes(32));
                    e.setPosition(n + t);
                    let r = d(e.readBytes(32));
                    if (0 === r) return e.setPosition(n + 32), ["0x", 32];
                    let i = e.readBytes(r);
                    return e.setPosition(n + 32), [(0, f.ci)(i), 32];
                  }
                  return [(0, f.ci)(e.readBytes(Number.parseInt(i), 32)), 32];
                })(t, n, { staticPosition: o });
              if (n.type.startsWith("uint") || n.type.startsWith("int"))
                return (function (e, t) {
                  let n = t.type.startsWith("int"),
                    r = Number.parseInt(t.type.split("int")[1] || "256"),
                    i = e.readBytes(32);
                  return [
                    r > 48
                      ? (function (e, t = {}) {
                          void 0 !== t.size && (0, l.Yf)(e, { size: t.size });
                          let n = (0, f.ci)(e, t);
                          return (0, l.y_)(n, t);
                        })(i, { signed: n })
                      : d(i, { signed: n }),
                    32,
                  ];
                })(t, n);
              if ("string" === n.type)
                return (function (e, { staticPosition: t }) {
                  let n = d(e.readBytes(32));
                  e.setPosition(t + n);
                  let r = d(e.readBytes(32));
                  if (0 === r) return e.setPosition(t + 32), ["", 32];
                  let i = e.readBytes(r, 32),
                    o = (function (e, t = {}) {
                      let n = e;
                      return (
                        void 0 !== t.size &&
                          ((0, l.Yf)(n, { size: t.size }),
                          (n = (0, c.f)(n, { dir: "right" }))),
                        new TextDecoder().decode(n)
                      );
                    })((0, c.f)(i));
                  return e.setPosition(t + 32), [o, 32];
                })(t, { staticPosition: o });
              throw new r.CI(n.type, {
                docsPath: "/docs/contract/decodeAbiParameters",
              });
            })(m, n, { staticPosition: 0 });
            (y += s), b.push(o);
          }
          return b;
        }
        function g(e) {
          let { type: t } = e;
          if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
          if ("tuple" === t) return e.components?.some(g);
          let n = (0, p.S)(e.type);
          return !!(n && g({ ...e, type: n[1] }));
        }
      },
      33591: function (e, t, n) {
        "use strict";
        n.d(t, {
          p: function () {
            return u;
          },
        });
        var r = n(55246),
          i = n(65531),
          o = n(69921),
          s = n(10464),
          a = n(2742),
          c = n(7275);
        function u(e) {
          let { abi: t, data: n } = e,
            u = (0, o.tP)(n, 0, 4);
          if ("0x" === u) throw new i.wb();
          let l = [...(t || []), r.Up, r.hZ].find(
            (e) => "error" === e.type && u === (0, s.C)((0, c.t)(e))
          );
          if (!l)
            throw new i.yP(u, { docsPath: "/docs/contract/decodeErrorResult" });
          return {
            abiItem: l,
            args:
              "inputs" in l && l.inputs && l.inputs.length > 0
                ? (0, a.r)(l.inputs, (0, o.tP)(n, 4))
                : void 0,
            errorName: l.name,
          };
        }
      },
      65436: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return a;
          },
        });
        var r = n(65531),
          i = n(2742),
          o = n(64043);
        let s = "/docs/contract/decodeFunctionResult";
        function a(e) {
          let { abi: t, args: n, functionName: a, data: c } = e,
            u = t[0];
          if (a) {
            let e = (0, o.mE)({ abi: t, args: n, name: a });
            if (!e) throw new r.xL(a, { docsPath: s });
            u = e;
          }
          if ("function" !== u.type) throw new r.xL(void 0, { docsPath: s });
          if (!u.outputs) throw new r.MX(u.name, { docsPath: s });
          let l = (0, i.r)(u.outputs, c);
          return l && l.length > 1 ? l : l && 1 === l.length ? l[0] : void 0;
        }
      },
      30056: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return d;
          },
          S: function () {
            return p;
          },
        });
        var r = n(65531),
          i = n(10052),
          o = n(81544),
          s = n(4012),
          a = n(89256),
          c = n(8796),
          u = n(20556),
          l = n(69921),
          f = n(59455);
        function d(e, t) {
          if (e.length !== t.length)
            throw new r.fs({ expectedLength: e.length, givenLength: t.length });
          let n = h(
            (function ({ params: e, values: t }) {
              let n = [];
              for (let d = 0; d < e.length; d++)
                n.push(
                  (function e({ param: t, value: n }) {
                    let d = p(t.type);
                    if (d) {
                      let [i, o] = d;
                      return (function (t, { length: n, param: i }) {
                        let o = null === n;
                        if (!Array.isArray(t)) throw new r.hn(t);
                        if (!o && t.length !== n)
                          throw new r.gr({
                            expectedLength: n,
                            givenLength: t.length,
                            type: `${i.type}[${n}]`,
                          });
                        let s = !1,
                          c = [];
                        for (let n = 0; n < t.length; n++) {
                          let r = e({ param: i, value: t[n] });
                          r.dynamic && (s = !0), c.push(r);
                        }
                        if (o || s) {
                          let e = h(c);
                          if (o) {
                            let t = (0, f.eC)(c.length, { size: 32 });
                            return {
                              dynamic: !0,
                              encoded: c.length > 0 ? (0, a.zo)([t, e]) : t,
                            };
                          }
                          if (s) return { dynamic: !0, encoded: e };
                        }
                        return {
                          dynamic: !1,
                          encoded: (0, a.zo)(c.map(({ encoded: e }) => e)),
                        };
                      })(n, { length: i, param: { ...t, type: o } });
                    }
                    if ("tuple" === t.type)
                      return (function (t, { param: n }) {
                        let r = !1,
                          i = [];
                        for (let o = 0; o < n.components.length; o++) {
                          let s = n.components[o],
                            a = Array.isArray(t) ? o : s.name,
                            c = e({ param: s, value: t[a] });
                          i.push(c), c.dynamic && (r = !0);
                        }
                        return {
                          dynamic: r,
                          encoded: r
                            ? h(i)
                            : (0, a.zo)(i.map(({ encoded: e }) => e)),
                        };
                      })(n, { param: t });
                    if ("address" === t.type)
                      return (function (e) {
                        if (!(0, s.U)(e)) throw new i.b({ address: e });
                        return {
                          dynamic: !1,
                          encoded: (0, c.gc)(e.toLowerCase()),
                        };
                      })(n);
                    if ("bool" === t.type)
                      return (function (e) {
                        if ("boolean" != typeof e)
                          throw new o.G(
                            `Invalid boolean value: "${e}" (type: ${typeof e}). Expected: \`true\` or \`false\`.`
                          );
                        return {
                          dynamic: !1,
                          encoded: (0, c.gc)((0, f.C4)(e)),
                        };
                      })(n);
                    if (t.type.startsWith("uint") || t.type.startsWith("int"))
                      return (function (e, { signed: t }) {
                        return {
                          dynamic: !1,
                          encoded: (0, f.eC)(e, { size: 32, signed: t }),
                        };
                      })(n, { signed: t.type.startsWith("int") });
                    if (t.type.startsWith("bytes"))
                      return (function (e, { param: t }) {
                        let [, n] = t.type.split("bytes"),
                          i = (0, u.d)(e);
                        if (!n) {
                          let t = e;
                          return (
                            i % 32 != 0 &&
                              (t = (0, c.gc)(t, {
                                dir: "right",
                                size: 32 * Math.ceil((e.length - 2) / 2 / 32),
                              })),
                            {
                              dynamic: !0,
                              encoded: (0, a.zo)([
                                (0, c.gc)((0, f.eC)(i, { size: 32 })),
                                t,
                              ]),
                            }
                          );
                        }
                        if (i !== Number.parseInt(n))
                          throw new r.M4({
                            expectedSize: Number.parseInt(n),
                            value: e,
                          });
                        return {
                          dynamic: !1,
                          encoded: (0, c.gc)(e, { dir: "right" }),
                        };
                      })(n, { param: t });
                    if ("string" === t.type)
                      return (function (e) {
                        let t = (0, f.$G)(e),
                          n = Math.ceil((0, u.d)(t) / 32),
                          r = [];
                        for (let e = 0; e < n; e++)
                          r.push(
                            (0, c.gc)((0, l.tP)(t, 32 * e, (e + 1) * 32), {
                              dir: "right",
                            })
                          );
                        return {
                          dynamic: !0,
                          encoded: (0, a.zo)([
                            (0, c.gc)((0, f.eC)((0, u.d)(t), { size: 32 })),
                            ...r,
                          ]),
                        };
                      })(n);
                    throw new r.dh(t.type, {
                      docsPath: "/docs/contract/encodeAbiParameters",
                    });
                  })({ param: e[d], value: t[d] })
                );
              return n;
            })({ params: e, values: t })
          );
          return 0 === n.length ? "0x" : n;
        }
        function h(e) {
          let t = 0;
          for (let n = 0; n < e.length; n++) {
            let { dynamic: r, encoded: i } = e[n];
            r ? (t += 32) : (t += (0, u.d)(i));
          }
          let n = [],
            r = [],
            i = 0;
          for (let o = 0; o < e.length; o++) {
            let { dynamic: s, encoded: a } = e[o];
            s
              ? (n.push((0, f.eC)(t + i, { size: 32 })),
                r.push(a),
                (i += (0, u.d)(a)))
              : n.push(a);
          }
          return (0, a.zo)([...n, ...r]);
        }
        function p(e) {
          let t = e.match(/^(.*)\[(\d+)?\]$/);
          return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0;
        }
      },
      23010: function (e, t, n) {
        "use strict";
        n.d(t, {
          w: function () {
            return a;
          },
        });
        var r = n(65531),
          i = n(89256),
          o = n(30056);
        let s = "/docs/contract/encodeDeployData";
        function a(e) {
          let { abi: t, args: n, bytecode: a } = e;
          if (!n || 0 === n.length) return a;
          let c = t.find((e) => "type" in e && "constructor" === e.type);
          if (!c) throw new r.fM({ docsPath: s });
          if (!("inputs" in c) || !c.inputs || 0 === c.inputs.length)
            throw new r.cO({ docsPath: s });
          let u = (0, o.E)(c.inputs, n);
          return (0, i.SM)([a, u]);
        }
      },
      17283: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return l;
          },
        });
        var r = n(89256),
          i = n(30056),
          o = n(65531),
          s = n(10464),
          a = n(7275),
          c = n(64043);
        let u = "/docs/contract/encodeFunctionData";
        function l(e) {
          let { args: t } = e,
            { abi: n, functionName: l } =
              1 === e.abi.length && e.functionName?.startsWith("0x")
                ? e
                : (function (e) {
                    let { abi: t, args: n, functionName: r } = e,
                      i = t[0];
                    if (r) {
                      let e = (0, c.mE)({ abi: t, args: n, name: r });
                      if (!e) throw new o.xL(r, { docsPath: u });
                      i = e;
                    }
                    if ("function" !== i.type)
                      throw new o.xL(void 0, { docsPath: u });
                    return { abi: [i], functionName: (0, s.C)((0, a.t)(i)) };
                  })(e),
            f = n[0],
            d =
              "inputs" in f && f.inputs ? (0, i.E)(f.inputs, t ?? []) : void 0;
          return (0, r.SM)([l, d ?? "0x"]);
        }
      },
      7275: function (e, t, n) {
        "use strict";
        n.d(t, {
          h: function () {
            return o;
          },
          t: function () {
            return i;
          },
        });
        var r = n(65531);
        function i(e, { includeName: t = !1 } = {}) {
          if ("function" !== e.type && "event" !== e.type && "error" !== e.type)
            throw new r.wM(e.type);
          return `${e.name}(${o(e.inputs, { includeName: t })})`;
        }
        function o(e, { includeName: t = !1 } = {}) {
          return e
            ? e
                .map((e) =>
                  (function (e, { includeName: t }) {
                    return e.type.startsWith("tuple")
                      ? `(${o(e.components, { includeName: t })})${e.type.slice(
                          5
                        )}`
                      : e.type + (t && e.name ? ` ${e.name}` : "");
                  })(e, { includeName: t })
                )
                .join(t ? ", " : ",")
            : "";
        }
      },
      64043: function (e, t, n) {
        "use strict";
        n.d(t, {
          mE: function () {
            return c;
          },
        });
        var r = n(65531),
          i = n(93610),
          o = n(4012),
          s = n(45392),
          a = n(10464);
        function c(e) {
          let t;
          let { abi: n, args: c = [], name: u } = e,
            l = (0, i.v)(u, { strict: !1 }),
            f = n.filter((e) =>
              l
                ? "function" === e.type
                  ? (0, a.C)(e) === u
                  : "event" === e.type && (0, s.n)(e) === u
                : "name" in e && e.name === u
            );
          if (0 !== f.length) {
            if (1 === f.length) return f[0];
            for (let e of f)
              if ("inputs" in e) {
                if (!c || 0 === c.length) {
                  if (!e.inputs || 0 === e.inputs.length) return e;
                  continue;
                }
                if (
                  e.inputs &&
                  0 !== e.inputs.length &&
                  e.inputs.length === c.length &&
                  c.every((t, n) => {
                    let r = "inputs" in e && e.inputs[n];
                    return (
                      !!r &&
                      (function e(t, n) {
                        let r = typeof t,
                          i = n.type;
                        switch (i) {
                          case "address":
                            return (0, o.U)(t, { strict: !1 });
                          case "bool":
                            return "boolean" === r;
                          case "function":
                          case "string":
                            return "string" === r;
                          default:
                            if ("tuple" === i && "components" in n)
                              return Object.values(n.components).every((n, r) =>
                                e(Object.values(t)[r], n)
                              );
                            if (
                              /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                                i
                              )
                            )
                              return "number" === r || "bigint" === r;
                            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(i))
                              return "string" === r || t instanceof Uint8Array;
                            if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(i))
                              return (
                                Array.isArray(t) &&
                                t.every((t) =>
                                  e(t, {
                                    ...n,
                                    type: i.replace(/(\[[0-9]{0,}\])$/, ""),
                                  })
                                )
                              );
                            return !1;
                        }
                      })(t, r)
                    );
                  })
                ) {
                  if (t && "inputs" in t && t.inputs) {
                    let n = (function e(t, n, r) {
                      for (let i in t) {
                        let s = t[i],
                          a = n[i];
                        if (
                          "tuple" === s.type &&
                          "tuple" === a.type &&
                          "components" in s &&
                          "components" in a
                        )
                          return e(s.components, a.components, r[i]);
                        let c = [s.type, a.type];
                        if (
                          (c.includes("address") && c.includes("bytes20")) ||
                          (((c.includes("address") && c.includes("string")) ||
                            (c.includes("address") && c.includes("bytes"))) &&
                            (0, o.U)(r[i], { strict: !1 }))
                        )
                          return c;
                      }
                    })(e.inputs, t.inputs, c);
                    if (n)
                      throw new r.S4(
                        { abiItem: e, type: n[0] },
                        { abiItem: t, type: n[1] }
                      );
                  }
                  t = e;
                }
              }
            return t || f[0];
          }
        }
      },
      31669: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return l;
          },
          x: function () {
            return u;
          },
        });
        var r = n(10052),
          i = n(44659),
          o = n(13169),
          s = n(82061),
          a = n(4012);
        let c = new s.k(8192);
        function u(e, t) {
          if (c.has(`${e}.${t}`)) return c.get(`${e}.${t}`);
          let n = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
            r = (0, o.w)((0, i.qX)(n), "bytes"),
            s = (t ? n.substring(`${t}0x`.length) : n).split("");
          for (let e = 0; e < 40; e += 2)
            r[e >> 1] >> 4 >= 8 && s[e] && (s[e] = s[e].toUpperCase()),
              (15 & r[e >> 1]) >= 8 &&
                s[e + 1] &&
                (s[e + 1] = s[e + 1].toUpperCase());
          let a = `0x${s.join("")}`;
          return c.set(`${e}.${t}`, a), a;
        }
        function l(e, t) {
          if (!(0, a.U)(e, { strict: !1 })) throw new r.b({ address: e });
          return u(e, t);
        }
      },
      4012: function (e, t, n) {
        "use strict";
        n.d(t, {
          U: function () {
            return a;
          },
        });
        var r = n(82061),
          i = n(31669);
        let o = /^0x[a-fA-F0-9]{40}$/,
          s = new r.k(8192);
        function a(e, t) {
          let { strict: n = !0 } = t ?? {},
            r = `${e}.${n}`;
          if (s.has(r)) return s.get(r);
          let a =
            !!o.test(e) && (e.toLowerCase() === e || !n || (0, i.x)(e) === e);
          return s.set(r, a), a;
        }
      },
      93637: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return o;
          },
        });
        var r = n(10052),
          i = n(4012);
        function o(e, t) {
          if (!(0, i.U)(e, { strict: !1 })) throw new r.b({ address: e });
          if (!(0, i.U)(t, { strict: !1 })) throw new r.b({ address: t });
          return e.toLowerCase() === t.toLowerCase();
        }
      },
      93627: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return i;
          },
        });
        var r = n(35586);
        function i({ blockNumber: e, chain: t, contract: n }) {
          let i = t?.contracts?.[n];
          if (!i) throw new r.mm({ chain: t, contract: { name: n } });
          if (e && i.blockCreated && i.blockCreated > e)
            throw new r.mm({
              blockNumber: e,
              chain: t,
              contract: { name: n, blockCreated: i.blockCreated },
            });
          return i.address;
        }
      },
      46033: function (e, t, n) {
        "use strict";
        n.d(t, {
          q: function () {
            return o;
          },
        });
        var r = n(33630);
        let i = {
          bytes: new Uint8Array(),
          dataView: new DataView(new ArrayBuffer(0)),
          position: 0,
          positionReadCount: new Map(),
          recursiveReadCount: 0,
          recursiveReadLimit: Number.POSITIVE_INFINITY,
          assertReadLimit() {
            if (this.recursiveReadCount >= this.recursiveReadLimit)
              throw new r.KD({
                count: this.recursiveReadCount + 1,
                limit: this.recursiveReadLimit,
              });
          },
          assertPosition(e) {
            if (e < 0 || e > this.bytes.length - 1)
              throw new r.lQ({ length: this.bytes.length, position: e });
          },
          decrementPosition(e) {
            if (e < 0) throw new r.T_({ offset: e });
            let t = this.position - e;
            this.assertPosition(t), (this.position = t);
          },
          getReadCount(e) {
            return this.positionReadCount.get(e || this.position) || 0;
          },
          incrementPosition(e) {
            if (e < 0) throw new r.T_({ offset: e });
            let t = this.position + e;
            this.assertPosition(t), (this.position = t);
          },
          inspectByte(e) {
            let t = e ?? this.position;
            return this.assertPosition(t), this.bytes[t];
          },
          inspectBytes(e, t) {
            let n = t ?? this.position;
            return (
              this.assertPosition(n + e - 1), this.bytes.subarray(n, n + e)
            );
          },
          inspectUint8(e) {
            let t = e ?? this.position;
            return this.assertPosition(t), this.bytes[t];
          },
          inspectUint16(e) {
            let t = e ?? this.position;
            return this.assertPosition(t + 1), this.dataView.getUint16(t);
          },
          inspectUint24(e) {
            let t = e ?? this.position;
            return (
              this.assertPosition(t + 2),
              (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
            );
          },
          inspectUint32(e) {
            let t = e ?? this.position;
            return this.assertPosition(t + 3), this.dataView.getUint32(t);
          },
          pushByte(e) {
            this.assertPosition(this.position),
              (this.bytes[this.position] = e),
              this.position++;
          },
          pushBytes(e) {
            this.assertPosition(this.position + e.length - 1),
              this.bytes.set(e, this.position),
              (this.position += e.length);
          },
          pushUint8(e) {
            this.assertPosition(this.position),
              (this.bytes[this.position] = e),
              this.position++;
          },
          pushUint16(e) {
            this.assertPosition(this.position + 1),
              this.dataView.setUint16(this.position, e),
              (this.position += 2);
          },
          pushUint24(e) {
            this.assertPosition(this.position + 2),
              this.dataView.setUint16(this.position, e >> 8),
              this.dataView.setUint8(this.position + 2, 255 & e),
              (this.position += 3);
          },
          pushUint32(e) {
            this.assertPosition(this.position + 3),
              this.dataView.setUint32(this.position, e),
              (this.position += 4);
          },
          readByte() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectByte();
            return this.position++, e;
          },
          readBytes(e, t) {
            this.assertReadLimit(), this._touch();
            let n = this.inspectBytes(e);
            return (this.position += t ?? e), n;
          },
          readUint8() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint8();
            return (this.position += 1), e;
          },
          readUint16() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint16();
            return (this.position += 2), e;
          },
          readUint24() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint24();
            return (this.position += 3), e;
          },
          readUint32() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint32();
            return (this.position += 4), e;
          },
          get remaining() {
            return this.bytes.length - this.position;
          },
          setPosition(e) {
            let t = this.position;
            return (
              this.assertPosition(e),
              (this.position = e),
              () => (this.position = t)
            );
          },
          _touch() {
            if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return;
            let e = this.getReadCount();
            this.positionReadCount.set(this.position, e + 1),
              e > 0 && this.recursiveReadCount++;
          },
        };
        function o(e, { recursiveReadLimit: t = 8192 } = {}) {
          let n = Object.create(i);
          return (
            (n.bytes = e),
            (n.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength)),
            (n.positionReadCount = new Map()),
            (n.recursiveReadLimit = t),
            n
          );
        }
      },
      89256: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e[0]
            ? i(e)
            : (function (e) {
                let t = 0;
                for (let n of e) t += n.length;
                let n = new Uint8Array(t),
                  r = 0;
                for (let t of e) n.set(t, r), (r += t.length);
                return n;
              })(e);
        }
        function i(e) {
          return `0x${e.reduce((e, t) => e + t.replace("0x", ""), "")}`;
        }
        n.d(t, {
          SM: function () {
            return i;
          },
          zo: function () {
            return r;
          },
        });
      },
      93610: function (e, t, n) {
        "use strict";
        function r(e, { strict: t = !0 } = {}) {
          return (
            !!e &&
            "string" == typeof e &&
            (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
          );
        }
        n.d(t, {
          v: function () {
            return r;
          },
        });
      },
      8796: function (e, t, n) {
        "use strict";
        n.d(t, {
          gc: function () {
            return o;
          },
          vk: function () {
            return i;
          },
        });
        var r = n(47116);
        function i(e, { dir: t, size: n = 32 } = {}) {
          return "string" == typeof e
            ? o(e, { dir: t, size: n })
            : (function (e, { dir: t, size: n = 32 } = {}) {
                if (null === n) return e;
                if (e.length > n)
                  throw new r.$s({
                    size: e.length,
                    targetSize: n,
                    type: "bytes",
                  });
                let i = new Uint8Array(n);
                for (let r = 0; r < n; r++) {
                  let o = "right" === t;
                  i[o ? r : n - r - 1] = e[o ? r : e.length - r - 1];
                }
                return i;
              })(e, { dir: t, size: n });
        }
        function o(e, { dir: t, size: n = 32 } = {}) {
          if (null === n) return e;
          let i = e.replace("0x", "");
          if (i.length > 2 * n)
            throw new r.$s({
              size: Math.ceil(i.length / 2),
              targetSize: n,
              type: "hex",
            });
          return `0x${i["right" === t ? "padEnd" : "padStart"](2 * n, "0")}`;
        }
      },
      20556: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return i;
          },
        });
        var r = n(93610);
        function i(e) {
          return (0, r.v)(e, { strict: !1 })
            ? Math.ceil((e.length - 2) / 2)
            : e.length;
        }
      },
      69921: function (e, t, n) {
        "use strict";
        n.d(t, {
          T4: function () {
            return u;
          },
          p5: function () {
            return l;
          },
          tP: function () {
            return s;
          },
        });
        var r = n(47116),
          i = n(93610),
          o = n(20556);
        function s(e, t, n, { strict: r } = {}) {
          return (0, i.v)(e, { strict: !1 })
            ? l(e, t, n, { strict: r })
            : u(e, t, n, { strict: r });
        }
        function a(e, t) {
          if ("number" == typeof t && t > 0 && t > (0, o.d)(e) - 1)
            throw new r.mV({ offset: t, position: "start", size: (0, o.d)(e) });
        }
        function c(e, t, n) {
          if (
            "number" == typeof t &&
            "number" == typeof n &&
            (0, o.d)(e) !== n - t
          )
            throw new r.mV({ offset: n, position: "end", size: (0, o.d)(e) });
        }
        function u(e, t, n, { strict: r } = {}) {
          a(e, t);
          let i = e.slice(t, n);
          return r && c(i, t, n), i;
        }
        function l(e, t, n, { strict: r } = {}) {
          a(e, t);
          let i = `0x${e
            .replace("0x", "")
            .slice((t ?? 0) * 2, (n ?? e.length) * 2)}`;
          return r && c(i, t, n), i;
        }
      },
      36826: function (e, t, n) {
        "use strict";
        function r(e, { dir: t = "left" } = {}) {
          let n = "string" == typeof e ? e.replace("0x", "") : e,
            r = 0;
          for (
            let e = 0;
            e < n.length - 1 &&
            "0" === n["left" === t ? e : n.length - e - 1].toString();
            e++
          )
            r++;
          return ((n = "left" === t ? n.slice(r) : n.slice(0, n.length - r)),
          "string" == typeof e)
            ? (1 === n.length && "right" === t && (n = `${n}0`),
              `0x${n.length % 2 == 1 ? `0${n}` : n}`)
            : n;
        }
        n.d(t, {
          f: function () {
            return r;
          },
        });
      },
      72932: function (e, t, n) {
        "use strict";
        n.d(t, {
          XA: function () {
            return u;
          },
          Yf: function () {
            return a;
          },
          ly: function () {
            return l;
          },
          rR: function () {
            return f;
          },
          y_: function () {
            return c;
          },
        });
        var r = n(63152),
          i = n(20556),
          o = n(36826),
          s = n(44659);
        function a(e, { size: t }) {
          if ((0, i.d)(e) > t)
            throw new r.M6({ givenSize: (0, i.d)(e), maxSize: t });
        }
        function c(e, t = {}) {
          let { signed: n } = t;
          t.size && a(e, { size: t.size });
          let r = BigInt(e);
          if (!n) return r;
          let i = (e.length - 2) / 2;
          return r <= (1n << (8n * BigInt(i) - 1n)) - 1n
            ? r
            : r - BigInt(`0x${"f".padStart(2 * i, "f")}`) - 1n;
        }
        function u(e, t = {}) {
          let n = e;
          if (
            (t.size && (a(n, { size: t.size }), (n = (0, o.f)(n))),
            "0x00" === (0, o.f)(n))
          )
            return !1;
          if ("0x01" === (0, o.f)(n)) return !0;
          throw new r.Cd(n);
        }
        function l(e, t = {}) {
          return Number(c(e, t));
        }
        function f(e, t = {}) {
          let n = (0, s.nr)(e);
          return (
            t.size &&
              (a(n, { size: t.size }), (n = (0, o.f)(n, { dir: "right" }))),
            new TextDecoder().decode(n)
          );
        }
      },
      44659: function (e, t, n) {
        "use strict";
        n.d(t, {
          O0: function () {
            return u;
          },
          nr: function () {
            return d;
          },
          qX: function () {
            return h;
          },
        });
        var r = n(81544),
          i = n(93610),
          o = n(8796),
          s = n(72932),
          a = n(59455);
        let c = new TextEncoder();
        function u(e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? d((0, a.eC)(e, t))
            : "boolean" == typeof e
            ? (function (e, t = {}) {
                let n = new Uint8Array(1);
                return ((n[0] = Number(e)), "number" == typeof t.size)
                  ? ((0, s.Yf)(n, { size: t.size }),
                    (0, o.vk)(n, { size: t.size }))
                  : n;
              })(e, t)
            : (0, i.v)(e)
            ? d(e, t)
            : h(e, t);
        }
        let l = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
        function f(e) {
          return e >= l.zero && e <= l.nine
            ? e - l.zero
            : e >= l.A && e <= l.F
            ? e - (l.A - 10)
            : e >= l.a && e <= l.f
            ? e - (l.a - 10)
            : void 0;
        }
        function d(e, t = {}) {
          let n = e;
          t.size &&
            ((0, s.Yf)(n, { size: t.size }),
            (n = (0, o.vk)(n, { dir: "right", size: t.size })));
          let i = n.slice(2);
          i.length % 2 && (i = `0${i}`);
          let a = i.length / 2,
            c = new Uint8Array(a);
          for (let e = 0, t = 0; e < a; e++) {
            let n = f(i.charCodeAt(t++)),
              o = f(i.charCodeAt(t++));
            if (void 0 === n || void 0 === o)
              throw new r.G(
                `Invalid byte sequence ("${i[t - 2]}${i[t - 1]}" in "${i}").`
              );
            c[e] = 16 * n + o;
          }
          return c;
        }
        function h(e, t = {}) {
          let n = c.encode(e);
          return "number" == typeof t.size
            ? ((0, s.Yf)(n, { size: t.size }),
              (0, o.vk)(n, { dir: "right", size: t.size }))
            : n;
        }
      },
      59455: function (e, t, n) {
        "use strict";
        n.d(t, {
          $G: function () {
            return d;
          },
          C4: function () {
            return c;
          },
          NC: function () {
            return a;
          },
          ci: function () {
            return u;
          },
          eC: function () {
            return l;
          },
        });
        var r = n(63152),
          i = n(8796),
          o = n(72932);
        let s = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        function a(e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? l(e, t)
            : "string" == typeof e
            ? d(e, t)
            : "boolean" == typeof e
            ? c(e, t)
            : u(e, t);
        }
        function c(e, t = {}) {
          let n = `0x${Number(e)}`;
          return "number" == typeof t.size
            ? ((0, o.Yf)(n, { size: t.size }), (0, i.vk)(n, { size: t.size }))
            : n;
        }
        function u(e, t = {}) {
          let n = "";
          for (let t = 0; t < e.length; t++) n += s[e[t]];
          let r = `0x${n}`;
          return "number" == typeof t.size
            ? ((0, o.Yf)(r, { size: t.size }),
              (0, i.vk)(r, { dir: "right", size: t.size }))
            : r;
        }
        function l(e, t = {}) {
          let n;
          let { signed: o, size: s } = t,
            a = BigInt(e);
          s
            ? (n = o
                ? (1n << (8n * BigInt(s) - 1n)) - 1n
                : 2n ** (8n * BigInt(s)) - 1n)
            : "number" == typeof e && (n = BigInt(Number.MAX_SAFE_INTEGER));
          let c = "bigint" == typeof n && o ? -n - 1n : 0;
          if ((n && a > n) || a < c) {
            let t = "bigint" == typeof e ? "n" : "";
            throw new r.J5({
              max: n ? `${n}${t}` : void 0,
              min: `${c}${t}`,
              signed: o,
              size: s,
              value: `${e}${t}`,
            });
          }
          let u = `0x${(o && a < 0
            ? (1n << BigInt(8 * s)) + BigInt(a)
            : a
          ).toString(16)}`;
          return s ? (0, i.vk)(u, { size: s }) : u;
        }
        let f = new TextEncoder();
        function d(e, t = {}) {
          return u(f.encode(e), t);
        }
      },
      65358: function (e, t, n) {
        "use strict";
        n.d(t, {
          i: function () {
            return i;
          },
        });
        var r = n(93610);
        function i(e) {
          if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]"))
            return null;
          let t = `0x${e.slice(1, 65)}`;
          return (0, r.v)(t) ? t : null;
        }
      },
      83348: function (e, t, n) {
        "use strict";
        n.d(t, {
          c: function () {
            return s;
          },
        });
        var r = n(55246),
          i = n(81544),
          o = n(20010);
        function s(e, t) {
          if (!(e instanceof i.G)) return !1;
          let n = e.walk((e) => e instanceof o.Lu);
          return (
            n instanceof o.Lu &&
            (!!(
              n.data?.errorName === "ResolverNotFound" ||
              n.data?.errorName === "ResolverWildcardNotSupported" ||
              n.data?.errorName === "ResolverNotContract" ||
              n.data?.errorName === "ResolverError" ||
              n.data?.errorName === "HttpError" ||
              n.reason?.includes(
                "Wildcard on non-extended resolvers is not supported"
              )
            ) ||
              ("reverse" === t && n.reason === r.$[50]))
          );
        }
      },
      21721: function (e, t, n) {
        "use strict";
        n.d(t, {
          V: function () {
            return c;
          },
        });
        var r = n(89256),
          i = n(44659),
          o = n(59455),
          s = n(13169),
          a = n(65358);
        function c(e) {
          let t = new Uint8Array(32).fill(0);
          if (!e) return (0, o.ci)(t);
          let n = e.split(".");
          for (let e = n.length - 1; e >= 0; e -= 1) {
            let o = (0, a.i)(n[e]),
              c = o ? (0, i.O0)(o) : (0, s.w)((0, i.qX)(n[e]), "bytes");
            t = (0, s.w)((0, r.zo)([t, c]), "bytes");
          }
          return (0, o.ci)(t);
        }
      },
      22537: function (e, t, n) {
        "use strict";
        let r, i, o, s, a, c, u, l, f, d, h, p, m, g, y;
        n.d(t, {
          F: function () {
            return eB;
          },
        });
        let b = new Map([
          [8217, "apostrophe"],
          [8260, "fraction slash"],
          [12539, "middle dot"],
        ]);
        function w(e) {
          var t;
          let n;
          return (
            (t = (function (e) {
              let t = 0;
              function n() {
                return (e[t++] << 8) | e[t++];
              }
              let r = n(),
                i = 1,
                o = [0, 1];
              for (let e = 1; e < r; e++) o.push((i += n()));
              let s = n(),
                a = t;
              t += s;
              let c = 0,
                u = 0;
              function l() {
                return (
                  0 == c && ((u = (u << 8) | e[t++]), (c = 8)), (u >> --c) & 1
                );
              }
              let f = 2147483648 - 1,
                d = 0;
              for (let e = 0; e < 31; e++) d = (d << 1) | l();
              let h = [],
                p = 0,
                m = 2147483648;
              for (;;) {
                let e = Math.floor(((d - p + 1) * i - 1) / m),
                  t = 0,
                  n = r;
                for (; n - t > 1; ) {
                  let r = (t + n) >>> 1;
                  e < o[r] ? (n = r) : (t = r);
                }
                if (0 == t) break;
                h.push(t);
                let s = p + Math.floor((m * o[t]) / i),
                  a = p + Math.floor((m * o[t + 1]) / i) - 1;
                for (; ((s ^ a) & 1073741824) == 0; )
                  (d = ((d << 1) & f) | l()),
                    (s = (s << 1) & f),
                    (a = ((a << 1) & f) | 1);
                for (; s & ~a & 536870912; )
                  (d = (1073741824 & d) | ((d << 1) & (f >>> 1)) | l()),
                    (s = (s << 1) ^ 1073741824),
                    (a = ((1073741824 ^ a) << 1) | 1073741825);
                (p = s), (m = 1 + a - s);
              }
              let g = r - 4;
              return h.map((t) => {
                switch (t - g) {
                  case 3:
                    return (
                      g + 65792 + ((e[a++] << 16) | (e[a++] << 8) | e[a++])
                    );
                  case 2:
                    return g + 256 + ((e[a++] << 8) | e[a++]);
                  case 1:
                    return g + e[a++];
                  default:
                    return t - 1;
                }
              });
            })(
              (function (e) {
                let t = [];
                [
                  ..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                ].forEach((e, n) => (t[e.charCodeAt(0)] = n));
                let n = e.length,
                  r = new Uint8Array((6 * n) >> 3);
                for (let i = 0, o = 0, s = 0, a = 0; i < n; i++)
                  (a = (a << 6) | t[e.charCodeAt(i)]),
                    (s += 6) >= 8 && (r[o++] = a >> (s -= 8));
                return r;
              })(e)
            )),
            (n = 0),
            () => t[n++]
          );
        }
        function v(e, t = 0) {
          let n = [];
          for (;;) {
            let r = e(),
              i = e();
            if (!i) break;
            t += r;
            for (let e = 0; e < i; e++) n.push(t + e);
            t += i + 1;
          }
          return n;
        }
        function A(e) {
          return C(() => {
            let t = v(e);
            if (t.length) return t;
          });
        }
        function E(e) {
          let t = [];
          for (;;) {
            let n = e();
            if (0 == n) break;
            t.push(
              (function (e, t) {
                let n = 1 + t(),
                  r = t(),
                  i = C(t);
                return x(i.length, 1 + e, t).flatMap((e, t) => {
                  let [o, ...s] = e;
                  return Array(i[t])
                    .fill()
                    .map((e, t) => {
                      let i = t * r;
                      return [o + t * n, s.map((e) => e + i)];
                    });
                });
              })(n, e)
            );
          }
          for (;;) {
            let n = e() - 1;
            if (n < 0) break;
            t.push(x(1 + e(), 1 + n, e).map((e) => [e[0], e.slice(1)]));
          }
          return t.flat();
        }
        function C(e) {
          let t = [];
          for (;;) {
            let n = e(t.length);
            if (!n) break;
            t.push(n);
          }
          return t;
        }
        function x(e, t, n) {
          let r = Array(e)
            .fill()
            .map(() => []);
          for (let i = 0; i < t; i++)
            (function (e, t) {
              let n = Array(e);
              for (let i = 0, o = 0; i < e; i++) {
                var r;
                n[i] = o += 1 & (r = t()) ? ~r >> 1 : r >> 1;
              }
              return n;
            })(e, n).forEach((e, t) => r[t].push(e));
          return r;
        }
        function B(e) {
          return `{${e.toString(16).toUpperCase().padStart(2, "0")}}`;
        }
        function I(e) {
          let t = e.length;
          if (t < 4096) return String.fromCodePoint(...e);
          let n = [];
          for (let r = 0; r < t; )
            n.push(String.fromCodePoint(...e.slice(r, (r += 4096))));
          return n.join("");
        }
        function S(e, t) {
          let n = e.length,
            r = n - t.length;
          for (let i = 0; 0 == r && i < n; i++) r = e[i] - t[i];
          return r;
        }
        function P(e) {
          return (e >> 24) & 255;
        }
        function T(e) {
          return 16777215 & e;
        }
        function O(e) {
          return e >= 44032 && e < 55204;
        }
        function k(e) {
          r ||
            (function () {
              let e = w(
                "AEUDVgHLCGMATwDUADIAdAAhADQAFAAtABQAIQAPACcADQASAAoAGAAJABIACQARAAUACwAFAAwABQAQAAMABwAEAAoABQAJAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACwANAA0AAwAKAAkABAAdAAYAZwDTAeYDMwCxCl8B8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgPi89uj00MsvBXxEPAGPCDwBnQKoEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiC+AZ4EWRJJFbEu7QDQLARtEbgECxDwAb/RyAk1AV4nD2cEQQKTAzsAGpobWgAahAGPCrysdy0OAKwAfFIcBAQFUmoA/PtZADkBIadVj2UMUgx5Il4ANQC9vAITAdQZWxDzALN9AhsZVwIcGSkCBAgXOhG7AqMZ4M7+1M0UAPDNAWsC+mcJDe8AAQA99zkEXLICyQozAo6lAobcP5JvjQLFzwKD9gU/OD8FEQCtEQL6bW+nAKUEvzjDHsuRyUvOFHcacUz5AqIFRSE2kzsBEQCuaQL5DQTlcgO6twSpTiUgCwIFCAUXBHQEqQV6swAVxUlmTmsCwjqsP/wKJQmXb793UgZBEBsnpRD3DDMBtQE7De1L2ATxBjsEyR99GRkPzZWcCKUt3QztJuMuoYBaI/UqgwXtS/Q83QtNUWgPWQtlCeM6Y4FOAyEBDSKLCt0NOQhtEPMKyWsN5RFFBzkD1UmaAKUHAQsRHTUVtSYQYqwLCTl3Bvsa9guPJq8TKXr8BdMaIQZNASka/wDPLueFsFoxXBxPXwYDCyUjxxSoUCANJUC3eEgaGwcVJakCkUNwSodRNh6TIfY8PQ1mLhNRfAf1PAUZTwuBPJ5Gq0UOEdI+jT1IIklMLAQ1fywvJ4sJzw+FDLl8cgFZCSEJsQxxEzERFzfFCDkHGS2XJCcVCCFGlWCaBPefA/MT0QMLBT8JQQcTA7UcLRMuFSkFDYEk1wLzNtUuswKPVoABFwXLDyUf3xBQR+AO6QibAmUDgyXrAC0VIQAXIpsIQ2MAX4/YUwUuywjHamwjdANnFOdhEXMHkQ5XB6ccMxW/HOFwyF4Lhggoo68JWwF1CZkBXwTjCAk1W4ygIEFnU4tYGJsgYUE/XfwCMQxlFZ9EvYd4AosPaxIbATUBcwc5DQECdxHtEWsQlQjrhgQ1tTP4OiUETyGDIBEKJwNPbM4LJyb5DPhpAaMSYgMMND137merYLYkF/0HGTLFQWAh8QuST80MnBrBGEJULhnkB78D8xrzJ+pBVwX/A6MDEzpNM+4EvQtpCIsJPwBJDqMXB9cYagpxjNABMYsBt5kDV5GDAm+PBjcHCwBnC4cFeeUAHQKnCKMABQDPA1cAOQKtB50AGQCFQQE9AycvASHlAo8DkwgxywGVLwHzKQQbwwwVAPc3bkoCw7ECgGpmogXdWAKOAkk1AU0lBAVOR1EDr3HhANsASwYT30cBFatKyxrjQwHfbysAxwD7AAU1BwVBAc0B820AtwFfCzEJorO1AU3pKQCDABVrAdcCiQDdADUAf/EBUwBNBVn5BdMCT0kBETEYK1dhAbsDHwEzAQ0AeQbLjaXJBx8EbQfTAhAbFeEC7y4HtQEDIt8TzULFAr3eVaFgAmSBAmJCW02vWzcgAqH3AmiYAmYJAp+EOBsLAmY7AmYmBG4EfwN/EwN+kjkGOXcXOYI6IyMCbB0CMjY4CgJtxwJtru+KM2dFKwFnAN4A4QBKBQeYDI0A/gvCAA21AncvAnaiPwJ5S0MCeLodXNtFrkbXAnw/AnrIAn0JAnzwBVkFIEgASH1jJAKBbQKAAAKABQJ/rklYSlsVF0rMAtEBAtDMSycDiE8Dh+ZExZEyAvKhXQMDA65LzkwtJQPPTUxNrwKLPwKK2MEbBx1DZwW3Ao43Ao5cQJeBAo7ZAo5ceFG0UzUKUtRUhQKT+wKTDADpABxVHlWvVdAGLBsplYYy4XhmRTs5ApefAu+yWCGoAFklApaPApZ8nACpWaxaCYFNADsClrUClk5cRFzRApnLAplkXMpdBxkCnJs5wjqdApwWAp+bAp64igAdDzEqDwKd8QKekgC1PWE0Ye8CntMCoG4BqQKenx8Cnk6lY8hkJyUrAievAiZ+AqD7AqBMAqLdAqHEAqYvAqXOAqf/AH0Cp/JofGixAANJahxq0QKs4wKsrgKtZwKtAgJXHQJV3AKx4dcDH05slwKyvQ0CsugXbOBtY21IXwMlzQK2XDs/bpADKUUCuF4CuUcVArkqd3A2cOECvRkCu9pwlgMyEQK+iHICAzNxAr4acyJzTwLDywLDBHOCdEs1RXTgAzynAzyaAz2/AsV8AsZHAsYQiQLIaVECyEQCyU8CyS4CZJ0C3dJ4eWF4rnklS9ADGKNnAgJh9BnzlSR7C16SXrsRAs9rAs9sL0tT0vMTnwDGrQLPcwEp6gNOEn5LBQLcJwLbigLSTwNSXANTXwEBA1WMgIk/AMsW7WBFghyC04LOg40C2scC2d6EEIRJpzwDhqUALwNkDoZxWfkAVQLfZQLeuHN3AuIv7RQB8zAnAfSbAfLShwLr8wLpcHkC6vkC6uQA+UcBuQLuiQLrnJaqlwMC7j8DheCYeXDgcaEC8wMAaQOOFpmTAvcTA5FuA5KHAveYAvnZAvhmmhyaq7s3mx4DnYMC/voBGwA5nxyfswMFjQOmagOm2QDRxQMGaqGIogUJAwxJAtQAPwMA4UEXUwER8wNrB5dnBQCTLSu3r73bAYmZFH8RBDkB+ykFIQ6dCZ8Akv0TtRQrxQL3LScApQC3BbmOkRc/xqdtQS4UJo0uAUMBgPwBtSYAdQMOBG0ALAIWDKEAAAoCPQJqA90DfgSRASBFBSF8CgAFAEQAEwA2EgJ3AQAF1QNr7wrFAgD3Cp8nv7G35QGRIUFCAekUfxE0wIkABAAbAFoCRQKEiwAGOlM6lI1tALg6jzrQAI04wTrcAKUA6ADLATqBOjs5/Dn5O3aJOls7nok6bzkYAVYBMwFsBS81XTWeNa01ZjV1NbY1xTWCNZE10jXhNZ41rTXuNf01sjXBNgI2ETXGNdU2FjYnNd417TYuNj02LjUtITY6Nj02PDbJNwgEkDxXNjg23TcgNw82yiA3iTcwCgSwPGc2JDcZN2w6jTchQtRDB0LgQwscDw8JmyhtKFFVBgDpfwDpsAD+mxQ91wLpNSMArQC9BbeOkRdLxptzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgELgEaJZkC7aMAoQCjBcGOmxdNxrsBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUHqSvAj5Gqwr7YrMUACT9AN3rlr3JG9m8w9lIAXltp/v8kfWaIaaR9OwpAES/I3ZVamDXSgB/UsOgAG6D0tq+5CIqE15FiAhV3yA2VhCQ7tj+m6xXaF53FIfGi/IAZIskMGAi2MU7MDVJNCbMzERyHZi+osdPtnFVbvq653O8rwaCy4IAf9OOok65AqJUtUriUfYsGPPVbe6jm0s9lbKlPCUKjdkHsFsEhvX4kT39ZCtAAbwQdn/h4TpO5hTByWAmr5n+Wuwhdegv6bmvX4LyOes3z2+cuHv2JFYwVMNuq2gzn8YHTjlUQd39osyWei4NKl3LAdfxlO876hh5ENp/cOvpuI9bF55guEthLLPOXjD4dktTH04P5TvZrWTM0e4+BHJxj7MLApXIFOs0sWKhNkG8iwuM5wR83my6V3wW06abhDzTXYfOr/ZpFXgXzmv4d12FFyP00/dPGbIVGV5ao8UufGzUwp/IHx6v/wDWJr9iaoCulhWwlZ7A8q/NMoD12+mBdNRgJYnThRLtMx1Bgwttn8/4Qn2CDfOSup9GVXEvA21ILgp0owHYxNOkpwLWz0G7K+WREIDjIzUzSn8I99CuJSmSpPyH0Ke6/NERYiNx+3dncSebPnOUnnWD61AhJ1n/tSLZmU5wYO5GfgzyAYJm6VL91LxZ8hL1lfximQxIDMRhIecQZBmeE5R0XlrpvwplVrJwpa8BBCdp93GPP9lyBeZ2zkRr920CR3cYbKpKHfogvm0nV7XdDz6EbjzlxADCMjSLXuXpIpyuizy39yY+I+H9rmpoIF3YwEjlH9MgGgWcCNTjHEWMqAbprn2Ox7rOHupaVE3lNyg3nt5XaZID6Y+uml5Ja+aOPu+BI+DZbiJVfaspUadakWUX6TA4dETkIqdJJHYnU4Z4yKpt5y8rVIahoMUf8A8kWtAQNCTbjp71gx3/zVdqNz1Sutkw0gFIMVm2BF4Xdv/0olw+NaDIR9Bb3DPweZA2K/cw+/b+AwyWl9ZOP67A9nexmeTNjfdzPGf9J6E6BMPKa5lJh+qNsdUz3HBUevU71eQFCqOcxiIYhacAhh/8PX0J5DdSViZ6WazDDx7cukJNpMfEkYLJ5Ao4vLoVd3d25Pg4qaVa2p2D2L3WvYPJ5Yf/A/MSxptjlgXL/KJtP2U0cRv2I09ATAiWCJYuRwiapeKFsqmi18yMMulDp3HdcIldq+7jkwsJUOHLHCzzzBw5XFvL0CAmo1ub456z7zb7shk3KPGCLZzr47oT1k/j06XNnJvG3Udv6XrP+wsqTBlZ5MaNPt9FOs/4Bt/ja/vbVhTNpBFl9Gq7MqINvGlWKOAwQzwOZy+EzSdjAqKJVV2YcskTuM94aIK+kc/AZaXiZLPREUDpkXIV947IFfj+85TrqPqLfkGcxgboMQjosf+az+odLNXdyp1mDNGsqSdK/pJ2Ca04mt/4d6s1X+lncOEYaGBBeW4pApGcjf7/XJCFbj3N3mFb+BtlIcw8ZiDKoClFX9Rf0bxCqtLpicObKJzBVVHr/6u4siH2hK75RNv7w9GfTbhJOQBYiFUZAByY4rn37tZBHT//kqKsNi3ryL9AqXJRzqiMIJMhILjoi/i8LVEsbu+Ih9bsyW16sgQqjYLO0qda6KaCPKj3DQcu6CfV5lKtjS3ZCdqLAZkOey9MR+QutJBGiz/r15GVD6rCVwJR4UUKC4GNJkfDf00OMW8aQtLSAGLXV8MIi9mbbl/qQEpxCm2L5hutFX4ekeLH4QgBWUFKs/2VVMKy46WtFE6AbwgmYm/Z0yHk5veDIrcl2HpVqb/rSE0PC9EbDzJEWqeaPhh7vF369Umq2kSiB3s5rBI6c/7N9bkRu4h2n+/h5nSwy+7n+/I+6oXQVANo2Jb5zDwtiBPf1ySCzHdT6yJShMzqSRZfnykX49CaFaxhoVF4PBhEuECJ1PrFYSpmHuyYsl14DTAV9ZxRms1XiR/kBrjhZjidOt0UNe+GSml7XNgpVw8YsUTmZXLTK+6iYnyW/wYR1W4UXwOi14xpFROHb6HcZzksgF5DbL2AFXzKNwHU2adjdAY+KCyM/cwRTBkkq/a227NI0q6DR2MkMCRu620t79bGcYUmACtqN3mk/0uNwd3JSXHqE1kzf6Yyj0W2083JNDRnIXDlgBxJ6uf58NN1f6FQiRCWB4egF8QDx74AixV8oTyw7PluIjr3/rj/WzgwPSq4xPojaF7V0xqG2u5ti2L1h6yYHv73Isrukr0kURDIEjClBsBx7kdcXUxaYMS0syT3ymLzDzslNDWQOT1Tao1YNmJHARUenhCkmV9tqCPGI5GqZaRpkiPxyjoncWjyOHYGqvbvRX+Bn1pn7EhRNXa1lqJPmoeN5VqdqIDPhEVhFsyG0d4iQEIYX0wZUbY2XbZWYlpZ/l66IrDDY0q1C1YzBDpHC4h05YqHQLqS9anyl22JQ6lEvjvdBwMHfE7z0luCXD34/rFeDa2TmSeEAykSpYO5j1G/nsgpR3qn0qaQEmLjnnLfcz+veoYqPnRqmRGwCJ6FJ3Gm/Z1/aVX5PSb03MMnjAf41ww54sD5k8FrkfBP+K0b1MrYpapWjtpZfve2HVf4ickX3LKSOhu7qI1Vd4c1kNrn2ajy1t4y93JhV4fnWCKq7OmFpcr7FjdJCXPTql0Drr14Ho3Z87+GPQ4Z/DcTiGqtvZxlRYi8cNuhXABveZIwNl/BX1huhVLaFax5OqypUrQRyb9OE3SSkPlDdy5uo5XGg2EIGEjLY1MO5cr1ibfiFWV7zspcTgkBKkwo5jPyAin04LqizZXb2tDRgwKJjGx4cVk3ngAQixwcxjYAg2Q7vmUR/hpwInMdw7OhC2qyf41vTPkudQAORS0DdLtOGQxb4fH2VYGsvJCkeWPeUwtf1/tuIhzXEThoCZzzSJqqjUtbaPI3ntHm3T5uf849hGUA0zU8ni5W+EEn3/0Y6oUhQFw9z0aGjkljBbAlFXc0y82G2wkd7VdgWa5KTgJJNjNwZMfmdnUIUn1JU5LiWX5UZEZbVlKSN76mlmjUR2ku+fucTNlO4IAAahnLjBhlvQNR9pe9swGBgq0YR7P3VCyI/seYwQ4QBzy9X+HPePgoF8WfKaJ4MBOhLCGHae6Z8xkNXwni9QAKvTNtVA56x8YJflZ/VvONRSlsSLmiSyNMnTjTaE1ko81zkzGEnVwEhjCzlwIqpxmpDAqwsEmtpdr3xpc7i/ZX3f2TzT3M0FdxIEQvO1jgmmiN+D1YpMduAzEhBtj2OBkMN/rv6p7Th4pSH6f5aH3aTvwFTl7EOSgGASI7ttyMehzpm4AVyK+bFEaFg9gnZsSUPpsbAe/0RFhrH+EXZ12Z7thf4dzN1+Sn+G8QrDA1VKaN4IFxD1rQz9Xq9Coii9S9/hPbTGjyBwFH3H1UdQuz5KsgPDEHua4/kPg2Gp/IIItsaLWBqiT9XH45MiQxSosGJ56H/0F2cjcCFd72l1665RNHURdC3lspI77esfJsl+rXXabkAy7vxDXG/XGGcKpwiKDPFfvMEgjkAHil4Za1F36RnyxxvdIAzvgfH8knukYDck07tc++DP4TdWeI7HXuq5Yl6VVFrUQtf64/dkXewlKZSHQo6YvCSpREB0GDrz+Ys2GfO8nw2SwrYwaf88AifzlPvP17bf1mI3AuccJvAjZIpBmqvharKFAebEjVKfGAwpQjWoXlm9LROsq9bCk1UeQ3CJxJqprzssS/Q04JeS1ReCCubL3J7sx86spkP4eNpp95UF+8K748icIs8vdILFklk9skQqi1So6cx3X906pvy1vz+KipTJ8fiVJxsV5MmT0XwA"
              );
              for (let [t, n] of ((r = new Map(
                A(e).flatMap((e, t) => e.map((e) => [e, (t + 1) << 24]))
              )),
              (i = new Set(v(e))),
              (o = new Map()),
              (s = new Map()),
              E(e))) {
                if (!i.has(t) && 2 == n.length) {
                  let [e, r] = n,
                    i = s.get(e);
                  i || ((i = new Map()), s.set(e, i)), i.set(r, t);
                }
                o.set(t, n.reverse());
              }
            })();
          let t = [],
            n = [],
            a = !1;
          function c(e) {
            let n = r.get(e);
            n && ((a = !0), (e |= n)), t.push(e);
          }
          for (let r of e)
            for (;;) {
              if (r < 128) t.push(r);
              else if (O(r)) {
                let e = r - 44032,
                  t = (e / 588) | 0,
                  n = ((e % 588) / 28) | 0,
                  i = e % 28;
                c(4352 + t), c(4449 + n), i > 0 && c(4519 + i);
              } else {
                let e = o.get(r);
                e ? n.push(...e) : c(r);
              }
              if (!n.length) break;
              r = n.pop();
            }
          if (a && t.length > 1) {
            let e = P(t[0]);
            for (let n = 1; n < t.length; n++) {
              let r = P(t[n]);
              if (0 == r || e <= r) {
                e = r;
                continue;
              }
              let i = n - 1;
              for (;;) {
                let n = t[i + 1];
                if (((t[i + 1] = t[i]), (t[i] = n), !i || (e = P(t[--i])) <= r))
                  break;
              }
              e = P(t[n]);
            }
          }
          return t;
        }
        function R(e) {
          return (function (e) {
            let t = [],
              n = [],
              r = -1,
              i = 0;
            for (let o of e) {
              let e = P(o),
                a = T(o);
              if (-1 == r) 0 == e ? (r = a) : t.push(a);
              else if (i > 0 && i >= e)
                0 == e ? (t.push(r, ...n), (n.length = 0), (r = a)) : n.push(a),
                  (i = e);
              else {
                let o = (function (e, t) {
                  if (e >= 4352 && e < 4371 && t >= 4449 && t < 4470)
                    return 44032 + (e - 4352) * 588 + (t - 4449) * 28;
                  if (O(e) && t > 4519 && t < 4547 && (e - 44032) % 28 == 0)
                    return e + (t - 4519);
                  {
                    let n = s.get(e);
                    return n && (n = n.get(t)) ? n : -1;
                  }
                })(r, a);
                o >= 0
                  ? (r = o)
                  : 0 == i && 0 == e
                  ? (t.push(r), (r = a))
                  : (n.push(a), (i = e));
              }
            }
            return r >= 0 && t.push(r, ...n), t;
          })(k(e));
        }
        let N = (e) => Array.from(e);
        function M(e, t) {
          return e.P.has(t) || e.Q.has(t);
        }
        class L extends Array {
          get is_emoji() {
            return !0;
          }
        }
        function F() {
          let e, t;
          if (a) return;
          let n = w(
              "AEkU4AngDVgB0QKRAQYBOwDqATEAnwDbAIUApABsAOAAbwCRAEYAiQBPAHYAPgA+ACsANwAlAGMAHwAvACsAJQAWAC8AGwAiACIALwAUACsAEQAiAAsAGwARABcAGAA6ACkALAAsADUAFgAsABEAHQAhAA8AGwAdABUAFgAZAA0ADQAXABAAGQAUABIEqgYJAR4UFjfDBdMAsQCuPwFnAKUBA10jAK5/Ly8vLwE/pwUJ6/0HPwbkMQVXBVgAPSs5APa2EQbIwQuUCkEDyJ4zAsUKLwKOoQKG2D+Ob4kCxcsCg/IBH98JAPKtAUECLY0KP48A4wDiChUAF9S5yAwLPZ0EG3cA/QI5GL0P6wkGKekFBIFnDRsHLQCrAGmR76WcfwBbBpMjBukAGwA7DJMAWxVbqfu75wzbIM8IuykDsRQ7APcta6MAoX0YABcEJdcWAR0AuRnNBPoJIEw3CZcJiB4bVllM44NCABMADAAVAA5rVAAhAA4AR+4V2D3zOVjKleYuChAdX01YPewAEwAMABUADmsgXECXAMPrABsAOQzFABsVW6n7Adq4HB0FWwXiAtCfAsSwCkwcpGUUcxptTPUAuw1nAuEACy00iRfJkQKBewETGwC9DWcC4QALLQFIUCWRTAoDLfsFMgnXaRetAddDAEkrEncCMRYhAusnuTdrADnhAfUlAMcOy7UBG2OBALEFAAUAitNJBRvDHwcXAKgn0QGhKy0DmwBnAQoZPu03dAQYFwCqAccCIQDTKxJzOvNQsAWQOncnNUgF+icFWQVYr7gFaTtdQhI6WEGXe5NmX6H4CxMDxQcl8XcjBKNLAlNTAnUbqycBj6OlNVsDRRcEg2EJANEGqz8vIwcpAjldAGsBYR9xAIMdGQCVAUm3ACdpFwGvxQM3LSFDUwFvWQZlAmUA8UkXAykBBQBJQQCrAF0AcwArtQYH8+8ZjX8ACSEAKQCzG0cB0QHbBwsxl3iB6AAKABEANAA9ADgzd3nTwBBfEFwBTQlMbDoVCwKsD6YL5REVDNEqy9PYADSpB+sDUwfrA1MDUwfrB+sDUwfrA1MDUwNTA1McCvAa08AQXw9IBG0FjgWLBNYIgyZJEYEHKAjSVA10HhxHA0UA/CMlSRw7kzMLJUJMDE0DB/w2QmynfTgDRzGrVPWQogPLMk85bAEecRKgACoPcxw1tU5+ekdxoApLT661f0liTmcCvjqoP/gKIQmTb7t3TgY9EBcnoRDzDC8BsQE3DelL1ATtBjcExR95GRUPyZWYCKEt2QzpJt8unYBWI/EqfwXpS/A82QtJUWQPVQthCd86X4FKAx0BCSKHCtkNNQhpEO8KxWcN4RFBBzUD0UmWAKEG/QsNHTEVsSYMYqgLBTlzBvca8guLJqsTJXr4Bc8aHQZJASUa+wDLLuOFrFotXBhPWwX/CyEjwxSkUBwNIUCzeEQaFwcRJaUCjUNsSoNRMh6PIfI8OQ1iLg9ReAfxPAEZSwt9PJpGp0UKEc4+iT1EIkVMKAQxeywrJ4cJyw+BDLV8bgFVCR0JrQxtEy0REzfBCDUHFSmXICcRCB1GkWCWBPObA+8TzQMHBTsJPQcPA7EcKRMqFSUFCYEg0wLvNtEurwKLVnwBEwXHDyEf2xBMR9wO5QiXAmEDfyXnACkVHQATIpcIP18AW4/UUwEuxwjDamgjcANjFONdEW8HjQ5TB6McLxW7HN1wxF4HhgQon6sJVwFxCZUBWwTfCAU1V4ycID1nT4tUGJcgXUE7XfgCLQxhFZtEuYd0AocPZxIXATEBbwc1DP0CcxHpEWcQkQjnhgA1sTP0OiEESyF/IA0KIwNLbMoLIyb1DPRlAZ8SXgMINDl36menYLIgF/kHFTLBQVwh7QuOT8kMmBq9GD5UKhngB7sD7xrvJ+ZBUwX7A58POkkz6gS5C2UIhwk7AEUOnxMH0xhmCm2MzAEthwGzlQNTjX8Ca4sGMwcHAGMHgwV14QAZAqMInwABAMsDUwA1AqkHmQAVAIE9ATkDIysBHeECiwOPCC3HAZErAe8lBBe/DBEA8zNuRgLDrQKAZmaeBdlUAooCRTEBSSEEAUpDTQOrbd0A1wBHBg/bQwERp0bHFt8/AdtrJwDDAPcAATEHAT0ByQHvaQCzAVsLLQmer7EBSeUlAH8AEWcB0wKFANkAMQB77QFPAEkFVfUFzwJLRQENLRQnU10BtwMbAS8BCQB1BseJocUDGwRpB88CEBcV3QLvKgexAyLbE8lCwQK92lEAMhIKNAq1CrQfX/NcLwItbj1MAAofpD7DP0oFTTtPO1Q7TztUO087VDtPO1Q7TztUA5O73rveCmhfQWHnDKIN0ETEOkUT12BNYC4TxC2zFL0VyiVSGTkauCcBJeBVBQ8ALc9mLAgoNHEXuAA7KWSDPWOCHiwKRxzjU41U9C0XAK1LnjOrDagbEUQ8BUN16WImFgoKHgJkfQJiPldJq1c3HAKh8wJolAJmBQKfgDgXBwJmNwJmIgRqBHsDfw8Dfo45AjlzEzl+Oh8fAmwZAjIyOAYCbcMCbarrhi9jQScBYwDaAN0ARgEHlAyJAPoHvgAJsQJ3KwJ2njsCeUc/Ani2GVjXRapG0wJ8OwJ6xAJ9BQJ87AVVBRxH/Eh5XyAAJxFJVEpXERNKyALQ/QLQyEsjA4hLA4fiRMGRLgLynVz/AwOqS8pMKSHLTUhNqwKLOwKK1L0XAxk/YwGzAo4zAo5YPJN9Ao7VAo5YdFGwUzEGUtBUgQKT9wKTCADlABhVGlWrVcwCLBcpkYIy3XhiRTc1ApebAu+uWB2kAFUhApaLApZ4mAClWahaBX1JADcClrEClkpcQFzNApnHAplgXMZdAxUCnJc5vjqZApwSAp+XAp60hgAZCy0mCwKd7QKejgCxOWEwYesCns8CoGoBpQKemxsCnkqhY8RkIyEnAierAiZ6AqD3AqBIAqLZAqHAAqYrAqXKAqf7AHkCp+5oeGit/0VqGGrNAqzfAqyqAq1jAqz+AlcZAlXYArHd0wMfSmyTArK5CQKy5BNs3G1fbURbAyXJArZYNztujAMpQQK4WgK5QxECuSZzcDJw3QK9FQK71nCSAzINAr6Ecf4DM20CvhZzHnNLAsPHAsMAc350RzFBdNwDPKMDPJYDPbsCxXgCxkMCxgyFAshlTQLIQALJSwLJKgJkmQLdznh1XXiqeSFLzAMYn2b+AmHwGe+VIHsHXo5etw0Cz2cCz2grR0/O7w+bAMKpAs9vASXmA04OfkcBAtwjAtuGAtJLA1JYA1NbAP0DVYiAhTvHEulcQYIYgs+CyoOJAtrDAtnahAyERac4A4ahACsDZAqGbVX1AFEC32EC3rRvcwLiK+0QAfMsIwH0lwHyzoMC6+8C6Wx1Aur1AurgAPVDAbUC7oUC65iWppb/Au47A4XcmHVw3HGdAvL/AGUDjhKZjwL3DwORagOSgwL3lAL51QL4YpoYmqe3M5saA51/Av72ARcANZ8Yn68DBYkDpmYDptUAzcEDBmahhKIBBQMMRQELARsHaQZdtWMBALcEZ7sNhx6vCQATcTUAHwMvEkkDhXsBXyMdAIzrAB0A5p8Dm40IswYbn8EApwURu+kdPT4WeAVoNz5AK0IhQrRfcRFfvACWxQUyAJBMGZu5OyZgMhG6zw4vGMYYicn2BVcFWAVXBVgFYwVYBVcFWAVXBVgFVwVYBVcFWEYVCNeFZwICAgpkXukrBMkDsQYvu7sAuwSnuwDnQCkWsgVGPmk+cEI/QrZfdTdf6ABYETOrAIz+zGvL/KbnRno9JiMEKxYnNjV+bd9qwfEZwixpAWvXbjAXBV8FasnBybgIz0lbAAAACnxefYu+ADM/gQADFtEG5a0jBQCMwwsDAQ0A5WUdPSQfSkKxQrxBOCNfJ2A2JzgjCcE9CkQ/Qz54PoE+cD5xAolCvElCO1/LTk9qTQosa1QvagtuH1/gMzobCWebCmIjKzwdJkKrQrwrzAHL/F/JDh8uCQgJIn6d32o6LUoXyavJrAllwcvMCmBBXw/lEKMRAJONHUVCJRupbTnOOAozP0M+cEI/HAcKHUxHbFssLVrhvBIKfe0dK0I/HF0ISgkOM1RDQjcEO0OcLAqBGy1CPxv1CFMiIxgwMQAFj2HwXgpxZMlgC2AtI25DYBk5AhseYLMGAmsQZU5gTREBZOdgFWCVYH1gs2BLYJFoFhcGtQ7cVam8WgtDFqsBuyvNwQIfFQAcAx4BeQJsLzCVUoABigq4RxoA5CN0jgrKDaZN6gGbAoecTwVAXwD39wkANBZXDAulDCQfuq9HAE8MNAAVE58rggh6AtILS2URGwDYTgZ1BAoeWgAxALa4AZonCxZvqyQ4nxkBWwGGCfwD2e0PBqoGSga5AB3LValaCbthE4kLLT8OuwG7ASICR1ooKCggHh8hLBImBiEMjQBUAm5XkEmVAW4fD3FHAdN1D85RIBmpsE3qBxEFTF8A9/cKAHoGJGwKKwulODAtx69WDQsAX7wLAGNAlQh6AOpN7yIbvwAxALa4AZonLTsOzgKQGHtQu1jIdHKO16WbDvWZFT0b7AEpEFwSBg8bAccJOhCTBRArDDYLABEAs84BAgCkAOEAmIIABWtXLwAUAFsbxi5sdioNwRACOyQz0+EcHgsbfQJ7Ls6hHATBCqrxbAA3OS0Opge7CQAQOi7OERkAfavaHA+7GkcczaF3HgE9Kl8cAuugCAHCAULz5B9lAb4Jtwz6CDwKPgAFwAs9AksNuwi8DTwKvC7OoSoJPA67BZgBG2sKD4sa4QHDARELuxY7AKALOxC7BBige9wAO2sMPAACpgm8BRvQ9QUBvgH6bsoGewAHuwG7D00RErwBAQDqAQAAdBVbBhbLFPxvF7sYOwAuuwLrDlaouwAeuwJVICp/AAG7AALjAAg7FTwVuwAbuwG9KOClWw6/xAD0AGj7L7ZtvgNIo7vIqDsDAbuVJ0sAAlsACrsEAOfdGbsIGnsIoQUK/3AA37unuxjbGruji3lyBvupm4MAErsGGwsBvAAAhgBtuwYAC7unOwEaO7oIoZzKAbsL7QfAqTsA4XsBvwAA5QAVuwAG+wAJuwBpiwAauwAOuwIYu45pFfsAAVsADmsALkseAAa7ABe7CCEADUoBwgC3ryYBwAAAtAAOmwG+J+QAsloAHBsBv/7hCqEABcYLFRXbAAebAEK7AQIAabsAC3sAHbsACLsJoQAFygBunxnVAJEIIQAFygABOwAH2wAdmwghAAaaAAl7ABsrAG0bAOa7gAAIWwAUuwkhAAbKAOOLAAk7C6EOxPtfAAc7AG6cQEgARwADOwAJrQM3AAcbABl7Abv/Aab7AAobAAo7AAn7p+sGuwAJGwADCwAQOwAAFDsAEWsAD4sADesADbsAGQsGFhsAFTsAbpsWswG7ALoAEzsDAGkrCgDhSwACOwAEUgAXewUbAAbQABi7AAv7AF+7AGv7AOSLAbsAF3YBvAABcguhAAVKHgF7KFIAOUUA/gcNDHIAKCpwAaQFCF4BvF4jDAkHb0tsXyqJHzwUYi02A6EKtAHYABYC0QNuAXZyR1IUIQNPAhU+ASwGA3NGvHtSekAAKQAxAfsAUwrbAHuQLAErAHblDREyRgFKAFcFAAFQAQeKzAB4OwQgpQBaANYVAJVoNx+LAM1rsQDP1BYIwnVzGxhWHQnRAYiQqyJTU01IEjzCifkAfxw3QCkr4BGXTwByASksMClCGQ8DMFUE98XuAEtl3ABqAnECPxF6Osd4LjXVBgUAEBsdCggMKgQfHSlOU04IuboAChLNACYAARoAhgCJAI41AO4AtADgAJ08ALsAqwCmAKEA8gCfANMAnADrAQwBBwDAAHkAWgDLAM0BBwDXAOsAiACiATUA4wDYANUDAQcqM9TU1NS2wNzN0M5DMhcBTQFXL0cBVQFkAWMBVgFHS0NFaA0BThUHCAMyNgwHACINJCYpLDg6Oj09PT4/DkAeUVFRUVNTUlMpVFVXVlYcXWFhYGJhI2ZocG9ycnJycnJ0dHR0dHR0dHR0dHZ2d3Z1WwBA7ABFAJYAdAAuAGLyAIoAUwBTADMCc+kAh//y8gBgAI/sAJsASwBeAGD5+aoAgQCBAGUAUgCtAB4AsgB/AjwCPwD4AOMA+gD6AOQA+wDlAOUA5ADiACkCdwFNATwBOgFQAToBOgE6ATUBNAE0ATQBGAFUDwArCAAATRcKFgMVFg4AigCSAKIASwBkGAItAHAAaQCRAxIDJCoDHkE+RykAiwJLAMMCUwKgALoCkgKSApICkgKSApIChwKSApICkgKSApICkgKRApEClAKcApMCkgKSApACkAKQApACjgKRAnEB0AKTApsCkgKSApEWeQsA+gUDpwJdAjYXAVAQNQLeEQorEwFKNxNNkQF3pDwBZVkA/wM9RwEAAJMpHhiPagApYABpAC4AiQOUzIvwroRaBborDsIRAZ3VdCoLBCMxbAEzWmwBsgDdfoB/foB+gYKCfoOGhH6FiIaAh4KIgol+in6LfoyKjX6Ofo+CkH6RfpJ+k36Ug5WIloKXftoC2WzhAtdsAIJsJGygAINsbARCBD8EQQREBEIESARFBEAERgRIBEcEQwRFBEgAlmZsAKMDh2wAtGYBBWwAyVFsbADPbAIMbAD2WmwA9gEZAPYA9AD0APUA9AN8XmzUhCNlvwD2APQA9AD1APQcbGwAiVpsAPYAiQEZAPYAiQLsAPYAiQN8XmzUhCNlvxxsAPdabAEZAPYA9gD0APQA9QD0APcA9AD0APUA9AN8XmzUhCNlvxxsbACJWmwBGQD2AIkA9gCJAuwA9gCJA3xebNSEI2W/HGwCQwE2bAJKATlsAkvBbGwCV2xsA54C7AOeA54DnwOfA58DnwN8XmzUhCNlvxxsbACJWmwBGQOeAIkDngCJAuwDngCJA3xebNSEI2W/HGwEN2wAiQQ4AIkGjTFtIC9s1m4DJmwA/QDGWgJsbABVWv4UMgJsbACJAmwAVAEAuV5sAmxebGwAiV5sAmxebD3YAEls1gJsbEZFNiJ9FGVAe8xvEZKvxVfKZszAVTBzYBH2d1iyUXEHH7twNw7eZF5JJRHI5EgaRr5D20/3dfONrFLSq5qSrrgd2CEUq722WBQ/LzpA+bx1oREI5xy4BDSZNun0ZWORUJqInZSyMaioyvfSI0l5uFDzbWaQ28/zdB0hwR4OQZ0/jn9ALSLNikjFYGfqR389qtFlhD3a6KdIh97rhZYpywuLc7o8ql5/X8KCbPU3L/QlmCowhRXhsGDvg6wUNprA9bM/49uxlAj7ZVy3ouEY/BgFXBNyK0TLrSjZWeJm/T4nz6QGLT3cJNtWRZVZTvIdtaxMMJRHgig9+S11LjBh7Inr06ykoch1U097Rw0hvgmOrydQyaWcEQDg0RavuMuT0zYabUZl1e33HNSK1oNUCS03eh+9C2EvF3fq9h+XBaAMFuoWeZf+mfZgL4HzyiKDIUtfNU4oFu0aE9qt3VA3U4D3fOSrAcYVnjG3cSkp1vhXZnp3JQm4JknKdBitO2NVnGCYQwU3YMWHWB87NEd+4AHuOKI8BSIH92reW0pfs+kWCTJxDCbRjFv8Cfc4/DSBYJScJYTeAEgg9wTEvcwd/QuHRHqGzAQ4fXf5FUI1lPrO+fvEcPl4JInM1z9AtBT2bL4QYEREe7KiSnnxTwtmAFjn8lqT3mND8qTktX2F16Ae9cakqJ6/pEQsHURqyqWlRMCzKXRKfCHT7sYHWx9/T/ugYTFY6iVN3Btm58ATJR5alYZybKMWojwOw3HbFn23NFyeLl7+Er82RchyYuBoGQ3j7SAWNxiYvp5U+Fq/DEzB9cG5DlJWsqkosRze92OVlCtQEYo1S1lF72Z8xWc4ld/+fFcfTEDTFb9d8tJGQ75dpJEvcWyGmGBiTbiWDdGOcw93Dmxq5ISUrmasygONfHLvhgo83HQZenbdBtSzBkvYrCEQ/xEDMhMZsN6gqplx5jGG9mSQLhM81UEdEeJ59sdNJDAFy/gPyJoKlwPZgB/MkC/kICLiCB8va+nCdO2ry4aDfkmPFpF/H/SGQ3LJ6aAv9dtJ8DniHtLOckZix0BVb0iR5V3LAp521LBSIi6AtV7r2ZB/hQEvAw54EFNOQcFnl1xGUIc67tqK1INNwD2n/RbwgzO9h45LM6VMuN8V1ZNIQ6t+Xy3lTqyVCD5kqLy/t3/b8MLbgDg8JIWDkSZ+LrGhhr+gYpH+pr1TnCUnZPjpUdw6bSL6MWVXoDDciQDWECwU2e6VEpfrcOBbrSOijqGkEIoJPbpmeJLkcwbvA0yWIixQVjo0HnYh7fji+Dfdq1mtV1lG2Zz9R7eFMHS+FK7nybutu2fwzDpFldO2pZBshsHJWaltn3PWOoGJpCT2jE8EHOuC6FkejNWcfsWCqNqMLP9xTwcWArj2EiiI7D+EaDi7/2cqHL1gPiF6C/J7aUo7RQqogPZ11WqbyP97nsoMxPOC78wZMF7B1Y0g7JNXJV/nN1m4xx8hbqWz07KSaqr5hE4icB326DMR/vUKX9LoNjle/ZWtbUhrTAcsdgrLlG5Ne8aiR0bS/2ZhpNOVVxavWIZsEM/rd68EB4vjbbD13NkMK1qvMk74vGbSkL7ULO0sZ9R6APSCo6KH+Xn98wEdw1bCPAnDTaBsD6sidAGN58uiH4a3ovG1KyZAu2XtyGgF/vgWKGxw9R1lfAVcfuYE71DHuxtTzfGZnHaDpDGWmfEq0N4GawE7yIkaoz8jcmVmzJe1ydM8q0p08YIxFcY1YcqQc1djWBEoNETDFcgk5waRftEJasPREkrV++N/TOKkERF1fCLrXS8DFGYGRBeECMQRNEs0ES3FzUtXCcNxpYEM3Uei6XodZruXUIRnn+UXf2b/r7n1vQutoi6WoIbW7svDNWBbUWcDUc7F9SJK3bvSy9KIqhgyJHoW2Kpvv0J4ob14HFXGWWVsYXJzjwxS+SADShTgCRjhoDgjAYRGxwJ1Vonw+cpnCKhz8NQPrb0SFxHIRbmG95Q2hlC4mDxvPBRbkFa60cvWakd7f0kVBxxktzZ9agPJEWyA63RSHYVqt8cPrs2uFJ3rS3k9ETGKn5+A6F9IOrdZHfT1biEyUJKEvwzuscwshGCBJvd16TrefW03xVnJf4xvs72PdxrMidjJO8EiWyN/VWyB3fv9kc34YIuZTFtXGo9DuG3H1Uka5FgBMwDPEvRcSabi3WakNQkXFecJlFk6buLVk5YHpuKWTw6oF632FPPSVIVl5hgUAeHhj0t/sw/PEEvThLQDDFE34eCg/rLOyXT3r+L98oRKrlTO0MdALYQ3rRQqC7d822dJPGxF1K4J2TtfPSMFaCAg0n0NGk9yiaKKOJD1v2aBX9HUOIawjjfvwCmjHZJTR62R9c9x33JnBjWrN4QYEOmehy0oZMP9XM9Zyi6TYoe07PaLceRXcCWZiY/imRUWW6+mci7+wMxSdwMdbXckXtvhJH8sc4iQcTwm7yp+3f7CaesTTQB2qkgeXh+wFiSMXfMlH7Yil0OoZ2QTtRLTip2O0cLZ4SstqWHZ6H+8A2kZXhpm0kPbL9dUanTOvziqIUh6Ambwa3WrCb2eWbuCN3L1hgWUmjRC3JoL3dBhR3imSQI8xuCMfsszlji7cSShNSYdqCXPxEVwbqO9i5B6hf93YI7aeyI8jxgcVXK0I/klbvhSXjkjOIwZgPdVwmsFW7HGPLUAvDRuKm+itybRg7c8+Yqqjg824Qf+/NxsBSUNAK9KCoJpauFqK0XQULrWYj4FnxeKDuvr54iokpi+D57e6Y1zxRJJdsHnDR3JyraCUufHBRTKODWBVzthjm4k3/Hv+Q990XDVR+KW+TcJX045LW86EKhz/97aqj89A8ZvTk1//tczosU90loIPVaHuWegJU3wP//7XHcO7c0yQM2jM/IhQKrf8hiObHWiWDZManF8Uf/HzbmDfC2wT//aiZ4hGTv/xzgKwdb1sD6cGEkceow0s3b89/zg+3plyRm0HlZi886j5wUwFhdHiDTaBidZRo5cx/tMeLyguOATbzq17ydhzbrpxunuHx6lbFGiO97gsd4dk//7iCIo+Ew+hG2so5kvv+ITG4c1fzHPtu1Xn5QfUnqY3/uByVmB7gmnE/E+5zdm+6nDmoews5fr+NzThdSHzK4bBQOL9c4O8OI0xLSqjJ4lbniLJg1aFpQRLwaSMZmpkC9e/j6FOVrTQ6a/a4alGgfrl2ZL1sbHUQ3DOI7ntq9diHFfm3t1mul3rdJEJCHnlW/hlQntipMrpeMs7fUr6wK370D7VbXH0DUHzdYfRg/6Z11Ult1sffJS+heHbco15Sxy3+rDnPesqH1lajk0yu02hPUvEUqvcUXWXL7Ad0wNGMx5gOle4XJxq/r/YY0xdco2wRSEGwcT7YADlBrHc9ZbvzOL0QwyWCWWChB9Obg800v7tyBWaNvdwz+fL7Ph9i2irEeJkRgOzeEDw+JiD/V93vH9FgMEoFIJMoIuogmicZohf94SBuPn6hXaV9jP4VVVA/bu+Wg8S88GLtmEPSNRLdtlXx2XL/nuM8nKkhnlnjaropiKKLIH94pLIASci0pDBfj9Hi5BfaTSXQg5+PMjQX91Ktk4MOqK1K99l4BRPv5+vNovGZ3IxQv8ICvjV4/diThpoaM8uvd3D9d/DE477w3yAbW3IDm2i73pZ9aEj38JqS6h/s8/xgmUIVcuq2JTgefAyuoafzQxAuRASeg3NtG3ach/JEkyuX+JDt2PnDZTShUhyHHG3ttBg/6lhAchGjLJBtopj4e01MlCp2yqQRTr4sBBXru+lKaoanwYX8y2aWCJiR3KnhCOkYVFSvsO0oDRujUFOEptiNDTYrJoUbvOyvl4AhC9h3wORiTXK1MrpMfnvdnndnR/HRVSusMBgIxwrLdn3vq1VcncPiD0SquTx/kNmxeFyCT4uXVUd9AL+rSGmuq7OOCzDKeVPjiNWVaoP5KOFqYq5Xcuf/xW9S+u9eIq9GAtZWtQlgkRecjRtvG1NR4WXXpn+pwsTBTIy079Ikg8rSef1aVapIFcXCd6C2wHVjLXR+N0tw4Taw6x6H90BFRgNrtlq2up6hHKuV3inM5RJaQWZHd84e6RsKkk9po3dk9by54tpPw7cBkFas/G+GbHwuG+AwP55BZyXILTHCIVrPpXHEaUPYfL6nphJP1Rc10xG4UaCeY4IHCwuur8xmSQDgY4aVwhzWhjbtSHG8JO6P2i2nC9/0Bfx0zk6dYQq3aw7k5vIObD7SEKrxhz0fQ0+YTOfHW23CBNeZci1qNsUDhoeqmfyP6PvjoEjHk8QbrFyQVZPHVWijnb8YCM65iYNoEbvnchStZ/9cKg5Vd45j8KnB6UjzXl/bkyZx7VoD47ocUUi117WwgySSb4rXgLJ52Mv5XJbp3I+uBP81BUvOjy4Cacgi+GWWlC/8dwgqwiojjUBDnEOxyRyowwLQfytFra1OZS4XvRYr4uoamAfG3I/p2bA7G90yqKThH8Ke00Tqd+3l3dmJpaCZelBMYjGqNLVa3SM4+LQeL56gY6Bymy2LQPVOxjWfj5tq4o74swcxhyGJPynkS5xAjOXZP1/FAYcBT3u6qLoIkEfErwo4gozmyI1YCvM0oyI3ghjGPQSsof2sKUhq91WsKy9cYWN+4A2v4pG/Mxpdc6w6kI/HX7Xb0TuihmsiOy2wQIsrZbUmr3OBSUo6oDJNgQp+YqYkgTgYcWZDgawJw3DFfdzT//PhVUidgB2qa8uw/j9ToHBAS33iT8YLhhAfyXG0bQUFp7QmH7oQ3i6Flf4OTZLvJdh8pfuflmWu2ohm5pTiSg1pl3vq9uluTJwqXfh1hqy8e2iHoD+Y35gCIViTo6VOtK5dD8HYClucJucXASzwe2kPj4S4eYQtmkYHagXhAzp/F541xE8YFYqSPszDuz3soWzHy0p3E2jwZNQaIcGU9FNQwQxeDw0ZlK9dxXrj9IUHGUPTOyib8CqXmbZ7Ex54bn1rLx3qqAavu/gh6XjV0GmN1p+yyMK9HN5uYEvxgbAk43tsheREhyI+Q5WLIneKTGPmYiM/lxOp8fvqHy8YgXK0TlMiX0tliLI2JtfmWZP8eVV732sdYm+pcWzDzEmKLJZyeelyaZKkjPnnUO9keDwtgiLnmd5+t+Sr5y8brRnlvxcWEWfCqIALQYHvaXx6jTg4dAlye469uGwwOZVZCILLfGjaMg4LUCNMTtMSp1aC2y/3wR2t1v3w/iNBRQ+bNbtDqL2NAr7K4rUcyqbSpNrXZgAWXvjxBBtfYLK1uRYt3q2pfXJOAL0HtWcEwJLddOSJKV1SwvcvEuzg/4MPnA8MIUJOLqm3qI6wFyN99Ck6zYaV/zGSAzF/PGsaNa4vPLe5QnyuqVUnVQ6xELA6gbe53aGgeke+R/ycb2LJVyc7BhuzI90zA+c6wUDTb7NH//gdDSl2u/aW7lRJm8m1fLtPxcNuEM5JbkOCZKPM88HUsLRoC1pmKKlvWyeAXuxILbu0snpSxf8N+RgtLUSe5n2gdjOjoSTaN7mMZ7bF+cWk/MS8mFD4pcyl5UN7CbpFZH2a+Pm1VAnUTVfbw8qrmz1G9m5aKmRzY1SMhhPrlCn2t4uNUXNA3IFe6NOjSC1DEaAFZAfDlEkQCsbNhsZPj6NQPDSB3tLiTo0ZYoEbIeEIaKtU3Wk60rEszawTFuyHVd365LA/c/uarABN5M5rGq/dqTG3Ilye/5EKiYisisuzqNaZjmWv0z9TORc0CKbaTea214oNM9u2sXUZub/eqM3Pi/PjRSyQiOSwPWif2asTgu6hS6fb5UGosCWxdedMqdViIUUSSdIJx+qQ4KShfTT39VAWZbi+mB+iKICNwpt6cflY57Rcbs6d1kA26Iru73cuxYVlSvuJdcR5VfDYZRk8X0AXePROyw3Le6LaUdmTLzYsoNhhgQpd67xVNiHgk3pakmndeIAtTC4DCXy9oS6eU4CWxDdVmY53pKNbdAKmQsP37lrJZC6iDXMELGKcHjNuuZgcDyY8W/yv6ha3DX7OWm/35fpvhw55oitf4V+GULlcPWYyGGuVBdro19c8u0RDddDun40W7G5cSIzHLh/qZxb59R+EPY+wZ2XerkUim92hhXpKyW6WtAh6zQS97DrPyjCvKi3pCw96LeKynOpyjtsMQc2RmI/20zFOZcSa2AK++PoRcT6zeJyxlBZ7kk5mhqXGkLlM2hFKc+/T544xXP0Ua38Q6xdPTLTeG1PHnLMaOvksUQMrEFTB/lizCirmFQL8zYVU+OTeYQEFaITsBSMMYexS9HkajO2gGIf2micvntCZJsZQEwIH3/4JGJQGflBuH5rNXmnRRYXDQs3ZoEQoMtYDr1kFKUS/siiQSUxcTH9XYeBZiKDDFQoExREO9dddKQLO3BwMHvymCSTFyY+vxn3D27NDx6OlU092D5EDUwilttqVHpjJQDUceJYCLsK2swfXeNUVrBJT/w/sk+7si8rPtiMFis+oxvGdGQxirMBID700T39mULuNHzOyN+xBfcFACZcyngF1aSpv0JPkNUrAZTqfplv509cGXFUiEEm5dZb+OsP/blizqdK45/dSsIrufYTrCPY2lgJD6k6QljTfXVlHfYKSq+MsagyUcaMintyr95bD8kdTAeYNLNsMmo/Wdd8a2nStBP49ARIjqqpUHWY4q4mvO5Cq/CgCP+4/B+5zutGwX5pssgVLr1+fIM7WWLfiUQDk4c6ZdHZOWv5hG3g2dgQ5NXnpIY+BWwJpaouf25bXnjDzbHnQNofH/c6m+dEAS9Gs2h7pFRPKOBDnqswZ8KZjhId1ytHUTs533KwBoSiImoxKQUgZ7z6pA9QB3sZ8Cq0vwutJTTkfbX8AzCpm2cFXx/P22niUMHauU8IGc+78R6TsutoonoqFuoNA3l80t387YHMoL5KGAT1JO4zmx+vJ0LbLHlicHraSVYvJjnO9p++qnWgKw9OwFVVUagvZuf9qfiuum+hIicxP1q4zDnzkHsCNriLxBpxY9N+UOmqzdY1MunLMDgkMyi3uvnN3UBXJeZ8YLs5xr8QrOhimYoKuGBebZHAiBIkViv3DG8k2oNpp5OIgX6ulqaRN8V62QUPjn5tl1kPXhT9bcd8qIm8gi4or/FGbvQ6pgGSHmnayrugmf5E0upGxPRf/3xOtitGMaHLKJVm5zhglmVfI91o0yxhJZVS/5wQ8zfxK8Ylw0WmHXoGfRkoBRx9Hsnl/6sgTjAVwpmNuSeZtBwlX4qB8Bh8lxjqBDIuFGJ4I1wxN0XRlAAslzqMKwQfyA7OkuivCXfv+i+3XmhcBFM2n4jdT+NyUmBnQJPV3F2sZfKvJhUlXzSosFR4VevVVcOkFnnjdiRWc0TeSYxj41sJGYMbZTeLI3GvyZ8/gAAudQ1+4oFX+enX5V49MczGCYVBuoC4kHjp7ZVxj+clBwPr9k+v05SsezQK3enxLs1Nt/N7c7AImVUysjGou4iOohHo83Zs9/MI/OWB+OyXzOBD93NbApGHXrv8CVRHp2bwH+xB55cfNrdqFD35HSMx4iVmtzYAmSCIV8kXsHoq3DIb93riTWbubnjxbBW5zConVtbxLRStXHkIyAByaozME952Gc9aAdAbBpZSVCH88Uwb/4bPTVOVl+WoMYD7JIvK8VcMrJ8zHV4bbG0Dg7Kx17A4ej/ZcZ2Z5pVuVLUH1E/AccUTKm81SE+LQ6STTUDscUk0x2OWIbEORhg69tdoTGNkA1RfkGIRZHr5mCXOpLC55WWzCZoGPFUVtZRHwh0nq039CDdjEPo+JyaxSQAvDgR6Iqvxy0frrtEG1A385N81l05SSzN+IDm9bypF9m92EUqblnauZ5sjc37wRykOdl7w4o8WMgQsjii3EE/aJYDfHs1cH6DNBEujjcCc8qAefYFyIAURDcDnzun5UmkbBQsU4eu/W8I9nBE0qJKTdg2hwjq0+XV7a3TJ7R+alvJZCRia9lJ+grNB9dbrOmWEvUotMjvDhq4wV/kq4fvIBkzUGpDeYH74rne8uU3dgoNZdR9pUL6q9YDNRfOiF6Dyk+SYXQIghTjm9qR4tBHh0gnmF/9q3Qv22EzaLhSvDlDOxMrrCNRmLCl1jApzLrBCPn2mjn5zqK7OYK7VxOfQ5GfBfoPdyQwqFEgCVHkJ9oTnagRM3R0+rsuN5jQv9icCav/p1WqiEXSzCdLd/WEA6z6dDP7tPqPbeDYKAkVcz1lLGbFOC9b7cBd3MV0Ve8dZ89oR7OnxGS7uVpSry8banVZwpJg+nkH1jRBYa2BvBMY2xITH9ERXCjHzdZxs+ipdXP2DY7X+eWiBhtT2L0RRGTLPeazn5tpl4tu8iE2rWig731iuJDRbCHHy+g/Mb9+miAyVqfIpXT/iZeOxOxODO0hEpLM78I1+G2Z45yi3lS1K3m4WMQ559Lp4UML5vZUjYGJuxl+OPpUH5klpyBujkjprhei0TmUik10gjvNUp8mDkWlNKikmYspaVTqewbnOzJrmz8FLIpsT67EJLHIIfeDcWEfiP+DJrZ1jfxpoAb2abeMqLx+9RuZGzQoYtYVGgAWwEM9Kek2vPIeBNAKD6ao7nw6sgvfeLZPoXkbYO/tStHJdKzk+WFSFEU2NcALJAEP6S8pcnqqBBt57dwTrzQNCIdk2SocK4dLRbD/pu/VryKnm65ZYXiJCfHJk3mx9MRSl+nSK6OqEBSoGjz0/LADddwF/HqcfK3K3O+6YUGQcmj8pZL4PhZ6KrGkb8B38FmDvvLd3XQXbvS/FQmrXFTvJNkaN/FGo83KuS43BK1UfVnIqigGkCoP5fBda2MwAGTGNKX9K9t4Bx83pMFc5KSORmWKv+8VoVggWxoaBz3/9IBh6RwLd1tebwy89xvE5z6EEpXpDfrXWfRsMs6+ekUHH6idVosno55+xQ8Zqzelh0bxtJTgCcH3Z3/Cxlx9eNIS4JIFKOAVrDqbrXRszmY55a5+niJGHtkO3b6mnIDxLa1WXc7BAe33mt2KyM4Fbc3R6/WVTQN8QhlqAtave2WsQTqzWeSlKuGUVIJRqtObpv294rS0kDN1RKzdstZTXJebR2HlzsQ4P3NbMHUqFZMZw+/IKXnh4t+lY8qocp/B1oMszR03EFs3bPeND8QkItMvllObeCz3SZAjqZrobmLcrpFyQV7mwBjg3C3C8/bc5goQhv8j/IXMLGnt4mF7tybRDG5G0polxoUScQkPvmnga2/K+aapKeqSL0BTmo1Cm5g+booNOtdyKva2KoefRURaBk7113QKo3y+WTuFKtgETIK8HRluYS9DvlcciCDvnG8UaJRfZE2siZsiTHvRmN80xkUIInHeRZl5Re/+ATL6VhKFi8CZ/n/jbFV6T5pZ+Uoppvsi3qjacVFOJgWWfdlwVHKPW/TJO3na9hRM9bS2yo2rEsC6IBzRReVO6IesJU7PItzOamr+ROFfwGZmZ7ue8HNxAgLJKb7P3p8dMqk6Be5PJaT/5Rdc1deYVihWH9cjVKc9uz5EnfHqxLUkOO8iJUENBNVf5LyNy8zjLu/78k5WNTywiPfYeX3CPk7yc6CI3lum/CEZwfUaNpcI3KsPqfn2lmz3kd/acQjKA1ebkJaiuLD+epQ/Fc1llHXXMzofWzz/Kd29SNmOhcjMWw1jq1g3YfrXZ9rzXDYW4ZttfgfMi6oCUtBs0PkMVuxmq5lxEoCaSXPSqCJJ7MlKdRDidVt0AFlxk5cTdX++sBF2+E35mjwfm8ERVxH0FvuAQtsfA4V2G0TKTUxeyRGVjd/u6F1SvuAiU2/WaQjcNCU4Ep7VunXCYSbZj3U3wzu/LWM5MPlYuyQ3FOOCD/zt7K295hY2JhwF+ODDIZ676vGQFKveEQYkWj7lkK7rVmD7MhU0Y/tF8EcTTpo4/yqOufbd/zWIpMajnbDuWK2vn6OPPtz2rc9MIBNlPd8tt+yf+7SC4wqEPbozKMCwY5Bygx4JmoIEDsixWRDcdHd6S3/dZMHXOJAAv7+NIstl00crgSqHZKAEe4g3G4dzIV51EeZB01r7p8GNlfUnG/GjZgNGsqXZdYMBVtAtFNv3hJWPve4GvqZ2XxuiNkHTz5kxWgr0PjQdJlVywJ9Zf2ZvqeeTbolKtvK54re2Lq5BoyzfsRtvDfyao3kmyFzDQ88nM+qx83w74RDlkngtYiArI05Epre3GgBeSlMig0pE6RGQaFznKkGeb0SozLCyiOtxh7hgwZlbKbClzUUfC8ntMiHUOZE375RhTy9c4DA+oMLkUDkztSybZbdmP1xpaIbjUpPAHBq3cIq+CBFzbMlMMCCkUQ6d9LGV6GYCsYiEWZIy3nBnuxOYXeU4YTGDSin9e4/pCjPtQSHlg5LMEvIlF0ElthqrF129iK2RPBEWd3XWOl3SWV5uz5VUyZYp5kEFmz7QfP/B1W1BBzQ2iTGbSVT79lUHzcGXz3PJceSgz4uknETUwo0xffpr2KUvZF0i/r2sL3IFIClYx8CbIZE6Qt7MDJbOPB3xMScwaOcWG66IJfCnDkb0D2Mb+PHzX+oiCbxeTIogtyN+s2NJirNACk/OACSOTtV6vscwbzW4M168xqaI+RzR47S1nlV/rOoZnid87n/Ima2XYa3un3BuGAisNjb8eLMT9OnMtazQROFCuO1HiZXaOc0oUDbNC4eKLToOx8DzVhMgGA8XIAQ2x3b6I0uEyLssQjJX3QphcUMx4KsMgJ+72km4N2aqkBF2coKmUEt1eqIMGn+5txMT4kYVGd3ALO+y9Z4PP3d3l48JQK8s9ZZ/Qx/+NBKgBEJFlQ32psoJiihGO7FSYM5L81q72kaAYcilEFMG+ZK1BcMqELkflyCV7v8JEXLO4Rf/oZYNZHZVjJhfL6fnpP9Tio3Euue5uS7FMkfGOeRCTrBZ06Caev7tgufeTrX34Ur/Vvc+b8ksiIShNJtuF9WmYxOZ4xg8y6zTdy3KAB2y5kYkcRnXsptWwAFyKZ2I/QGySNeoQLkINUMloC+5L3WuMMx297Q1xUYLKqZ9XHavaobo6QQv4auMm+i84IhxRpPt9nUmcav9NcjCcP+TcMmxsQZ/F3mgeoA0fQgwvTsyXuuTaM3Sqtv2jaaajmaFQpK9W6uIbeqwvSDo34ZrY6elDUHwSCjHRRmlwmyy+eOra64Ssq0XSXYljMHtKY+FShcMkHsEUY/4Bw63dJ6KpwDaxmthlDdbdE+TvYF3v33cGSKqO+1H1pKYhJMvZD5ckQcHyNF8zrtiR5b0ko6NPGoRexUZTYP6VbUdn3zzxGBOi8Z0OqHjGqYxRXwN3mYi0GYEEZYq+Q3QvdKcEHILLLj8S+VFepSfErtmfZCdvxbfIifFSpEzKi+7VJsLMT+zEFeyp1OdwRC1VZrfTLIyR7xTPUcZFYPD9qI7D70uTb4hdpqPXsJIRNYbZtNwch1OI3trh3u2ScoQyM9POnInsUa+OovcwkUP1UfIzPb95n4BaF2ev57NHAej0+BVMF9/Cj9663HN2/JN3SQgslL914bKfiTTDFAz9PlQEL/dSv1H8xl3mtWxh1McFO9EJXlRDaKQDsyKO4vOJW90NFE6yw2tjbc2GeF95sbs0I9enAa6QwQVf/kJQhAD2BzUDKggOyjy1TEhED6sfk+418lQy3c/uj8aw8UEzZ6hIMCd8RohAkumMtIj9m73l2yPWoGHVTPaywkC7Yj9tBM1NxMgcrDwRtk4RO2WHT7Ql5kQCKdJj6kNuOTeyEBYBjLMhGz+O5/YGa84HEiTYEpZ6fFzy26GG2hWtTyteuYrhSyG56BjsT/wQeLRytpTY3D7sIMqZnJ9z1FDrfyjFlGl2TNw9BQysbaxOuwYYZs/7I6BANgkqCknWZC7/BBXvaeKwAmC959I+G39BUE9bExkNlbRoFRyEtNzv+NJ91FuisG3JCS6uYBeRnfv8AkAfKTeg9EYamqnsGfAV7d0f9DghHEQ5IsPGDIUhgoSj7obM4Bu5uhQ3/CYEDTHc92AsFvDK4XGrwUeGBWBHPlS+f4x+CxmmHz2sAGmSFNt65kwZC64mnaoWlu2310laYn8r62AqsR5dfjyK18MEdurdagldzfJtjFXlZs7St4QhdPiye6TPh2/ZAQLU/Fip5s7TDEM16KtRWrK9hmxnQ7bmfa/+7pa10Z8WDPK3NuJ+NN/RAbQ5vHx2uX0Lm7/w7cAEH/hvZA+mt7J7zGw7YtQYwnNN6dpgwkGjjrS3yQoeoYt1EnczmtmJfQZWzUlP3Hlg9Wzlr9IH23q3thGth+QNEANFettxKfskkGOlLk8AqoKJwDqOxAa6UzAx07plSSyNBJSGco9zjnC5gGbDoKvsMDuBR6bGRlGzJ+hFsGa/Izt78aI+WZ6dJlZKp4pGISuv9rV0sAS0MWEwCmfauO7oQZMiakHU35LBxiyJoOMddhUWgcZuC8r4Ksvn75TTcQXLJ7kWtYhGuGqPd9dZuFjBWQHNwosXY5snbHFQq72CvHXhIg+shQxycuLOuWYErwCLZeF24b7F78pO7xw4X6lIAR02hUOf5087Rl0nOaeb6CK4i/KA/EZv76ftOWZtjwxslNr0E/u8rWUmnf3amfg6UZmBAluuoj3Dd7UV+9IAJ6iYcDfSJlgmIImohjfIUMJ27z+opj50Ak9af2LCNrWrBJvMovA1OeNO+MF/MwZvnaCxTgG7Cw4QfSPF6AYCGFt21M8PySZFeV3t2Rqqs5JMzMYzGRgq4o+UaKRgBf9GHi/9X9HXA3wxkCsd/UhnHSh2zUVDiraio/6nP4y3XJqs8ABfALAtCYU7DHPMPRjgcM6Ad/HiSXDAbOdSMkvGZPAkHs8wuQTy6X2Ov/JFvcPuKfV3/r9Q28"
            ),
            r = () => v(n),
            i = () => new Set(r()),
            o = (e, t) => t.forEach((t) => e.add(t));
          (a = new Map(E(n))),
            (c = i()),
            (u = r()),
            (l = new Set(r().map((e) => u[e]))),
            (u = new Set(u)),
            (f = i()),
            i();
          let s = A(n),
            b = n(),
            x = () => {
              let e = new Set();
              return r().forEach((t) => o(e, s[t])), o(e, r()), e;
            };
          (d = C((e) => {
            let t = C(n).map((e) => e + 96);
            if (t.length) {
              let r = e >= b;
              return (
                (t[0] -= 32),
                (t = I(t)),
                r && (t = `Restricted[${t}]`),
                { N: t, P: x(), Q: x(), M: !n(), R: r }
              );
            }
          })),
            (h = i()),
            (p = new Map());
          let B = r()
            .concat(N(h))
            .sort((e, t) => e - t);
          for (let { V: e, M: t } of (B.forEach((e, t) => {
            let r = n(),
              i = (B[t] = r ? B[t - r] : { V: [], M: new Map() });
            i.V.push(e), h.has(e) || p.set(e, i);
          }),
          new Set(p.values()))) {
            let n = [];
            for (let t of e) {
              let e = d.filter((e) => M(e, t)),
                r = n.find(({ G: t }) => e.some((e) => t.has(e)));
              r || ((r = { G: new Set(), V: [] }), n.push(r)),
                r.V.push(t),
                o(r.G, e);
            }
            let r = n.flatMap((e) => N(e.G));
            for (let { G: e, V: i } of n) {
              let n = new Set(r.filter((t) => !e.has(t)));
              for (let e of i) t.set(e, n);
            }
          }
          m = new Set();
          let P = new Set(),
            O = (e) => (m.has(e) ? P.add(e) : m.add(e));
          for (let e of d) {
            for (let t of e.P) O(t);
            for (let t of e.Q) O(t);
          }
          for (let e of m) p.has(e) || P.has(e) || p.set(e, 1);
          for (let r of (o(m, k(m).map(T)),
          (g = ((e = []),
          (t = v(n)),
          (function t({ S: n, B: r }, i, o) {
            if (!(4 & n) || o !== i[i.length - 1])
              for (let s of (2 & n && (o = i[i.length - 1]),
              1 & n && e.push(i),
              r))
                for (let e of s.Q) t(s, [...i, e], o);
          })(
            (function e(r) {
              return {
                S: n(),
                B: C(() => {
                  let r = v(n).map((e) => t[e]);
                  if (r.length) return e(r);
                }),
                Q: r,
              };
            })([]),
            []
          ),
          e)
            .map((e) => L.from(e))
            .sort(S)),
          (y = new Map()),
          g)) {
            let e = [y];
            for (let t of r) {
              let n = e.map((e) => {
                let n = e.get(t);
                return n || ((n = new Map()), e.set(t, n)), n;
              });
              65039 === t ? e.push(...n) : (e = n);
            }
            for (let t of e) t.V = r;
          }
        }
        function U(e) {
          return (j(e) ? "" : `${D(_([e]))} `) + B(e);
        }
        function D(e) {
          return `"${e}"\u200E`;
        }
        function _(e, t = 1 / 0, n = B) {
          var r;
          let i = [];
          (r = e[0]),
            F(),
            u.has(r) && i.push("◌"),
            e.length > t &&
              ((t >>= 1), (e = [...e.slice(0, t), 8230, ...e.slice(-t)]));
          let o = 0,
            s = e.length;
          for (let t = 0; t < s; t++) {
            let r = e[t];
            j(r) && (i.push(I(e.slice(o, t))), i.push(n(r)), (o = t + 1));
          }
          return i.push(I(e.slice(o, s))), i.join("");
        }
        function j(e) {
          return F(), f.has(e);
        }
        function G(e) {
          return Error(`disallowed character: ${U(e)}`);
        }
        function H(e, t) {
          let n = U(t),
            r = d.find((e) => e.P.has(t));
          return (
            r && (n = `${r.N} ${n}`), Error(`illegal mixture: ${e.N} + ${n}`)
          );
        }
        function q(e) {
          return Error(`illegal placement: ${e}`);
        }
        function z(e) {
          return e.filter((e) => 65039 != e);
        }
        n(81025);
        class Q extends Error {
          constructor(e, t = {}) {
            let n = (() => {
                if (t.cause instanceof Q) {
                  if (t.cause.details) return t.cause.details;
                  if (t.cause.shortMessage) return t.cause.shortMessage;
                }
                return t.cause?.message ? t.cause.message : t.details;
              })(),
              r = (t.cause instanceof Q && t.cause.docsPath) || t.docsPath,
              i = `https://oxlib.sh${r ?? ""}`;
            super(
              [
                e || "An error occurred.",
                ...(t.metaMessages ? ["", ...t.metaMessages] : []),
                ...(n || r
                  ? ["", n ? `Details: ${n}` : void 0, r ? `See: ${i}` : void 0]
                  : []),
              ]
                .filter((e) => "string" == typeof e)
                .join("\n"),
              t.cause ? { cause: t.cause } : void 0
            ),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docs", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BaseError",
              }),
              Object.defineProperty(this, "version", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ox@0.1.1",
              }),
              (this.cause = t.cause),
              (this.details = n),
              (this.docs = i),
              (this.docsPath = r),
              (this.shortMessage = e);
          }
          walk(e) {
            return (function e(t, n) {
              return n?.(t)
                ? t
                : t && "object" == typeof t && "cause" in t && t.cause
                ? e(t.cause, n)
                : n
                ? null
                : t;
            })(this, e);
          }
        }
        function W(e, t, n) {
          return JSON.stringify(
            e,
            (e, n) =>
              "function" == typeof t
                ? t(e, n)
                : "bigint" == typeof n
                ? n.toString() + "#__bigint"
                : n,
            n
          );
        }
        W.parseError = (e) => e;
        let V = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
        function K(e) {
          return e >= V.zero && e <= V.nine
            ? e - V.zero
            : e >= V.A && e <= V.F
            ? e - (V.A - 10)
            : e >= V.a && e <= V.f
            ? e - (V.a - 10)
            : void 0;
        }
        function $(e, t) {
          if (ee(e) > t) throw new ei({ givenSize: ee(e), maxSize: t });
        }
        function Z(e, t = {}) {
          let { dir: n, size: r = 32 } = t;
          if (0 === r) return e;
          let i = e.replace("0x", "");
          if (i.length > 2 * r)
            throw new eo({
              size: Math.ceil(i.length / 2),
              targetSize: r,
              type: "Hex",
            });
          return `0x${i["right" === n ? "padEnd" : "padStart"](2 * r, "0")}`;
        }
        let J = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        function Y(e, t = {}) {
          let { strict: n = !1 } = t;
          if (!e || "string" != typeof e) throw new et(e);
          if ((n && !/^0x[0-9a-fA-F]*$/.test(e)) || !e.startsWith("0x"))
            throw new en(e);
        }
        Y.parseError = (e) => e;
        function X(e, t) {
          return Z(e, { dir: "right", size: t });
        }
        function ee(e) {
          return Math.ceil((e.length - 2) / 2);
        }
        (e) => e, (X.parseError = (e) => e);
        (ee.parseError = (e) => e), (e) => e;
        class et extends Q {
          constructor(e) {
            super(
              `Value \`${
                "object" == typeof e ? W(e) : e
              }\` of type \`${typeof e}\` is an invalid hex type.`,
              {
                metaMessages: [
                  'Hex types must be represented as `"0x${string}"`.',
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Hex.InvalidHexTypeError",
              });
          }
        }
        class en extends Q {
          constructor(e) {
            super(`Value \`${e}\` is an invalid hex value.`, {
              metaMessages: [
                'Hex values must start with `"0x"` and contain only hexadecimal characters (0-9, a-f, A-F).',
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Hex.InvalidHexValueError",
              });
          }
        }
        class er extends Q {
          constructor(e) {
            super(
              `Hex value \`"${e}"\` is an odd length (${
                e.length - 2
              } nibbles).`,
              { metaMessages: ["It must be an even length."] }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Hex.InvalidLengthError",
              });
          }
        }
        class ei extends Q {
          constructor({ givenSize: e, maxSize: t }) {
            super(
              `Size cannot exceed \`${t}\` bytes. Given size: \`${e}\` bytes.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Hex.SizeOverflowError",
              });
          }
        }
        class eo extends Q {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} size (\`${e}\`) exceeds padding size (\`${t}\`).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Hex.SizeExceedsPaddingSizeError",
              });
          }
        }
        function es(e) {
          return e instanceof Uint8Array ? e : new Uint8Array(e);
        }
        function ea(e, t = {}) {
          let { size: n } = t;
          if (e.length % 2) throw new er(e);
          let r = e;
          n && ($(e, n), (r = X(e, n)));
          let i = r.slice(2),
            o = i.length / 2,
            s = new Uint8Array(o);
          for (let e = 0, t = 0; e < o; e++) {
            let n = K(i.charCodeAt(t++)),
              r = K(i.charCodeAt(t++));
            if (void 0 === n || void 0 === r)
              throw new Q(
                `Invalid byte sequence ("${i[t - 2]}${i[t - 1]}" in "${i}").`
              );
            s[e] = 16 * n + r;
          }
          return s;
        }
        (es.parseError = (e) => e), (ea.parseError = (e) => e);
        class ec extends Q {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} size (\`${e}\`) exceeds padding size (\`${t}\`).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Bytes.SizeExceedsPaddingSizeError",
              });
          }
        }
        var eu = n(88577),
          el = n(25884);
        let ef = new Uint8Array([
            7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
          ]),
          ed = new Uint8Array(
            Array(16)
              .fill(0)
              .map((e, t) => t)
          ),
          eh = ed.map((e) => (9 * e + 5) % 16),
          ep = [ed],
          em = [eh];
        for (let e = 0; e < 4; e++)
          for (let t of [ep, em]) t.push(t[e].map((e) => ef[e]));
        let eg = [
            [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
            [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
            [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
            [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
            [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
          ].map((e) => new Uint8Array(e)),
          ey = ep.map((e, t) => e.map((e) => eg[t][e])),
          eb = em.map((e, t) => e.map((e) => eg[t][e])),
          ew = new Uint32Array([
            0, 1518500249, 1859775393, 2400959708, 2840853838,
          ]),
          ev = new Uint32Array([
            1352829926, 1548603684, 1836072691, 2053994217, 0,
          ]);
        function eA(e, t, n, r) {
          return 0 === e
            ? t ^ n ^ r
            : 1 === e
            ? (t & n) | (~t & r)
            : 2 === e
            ? (t | ~n) ^ r
            : 3 === e
            ? (t & r) | (n & ~r)
            : t ^ (n | ~r);
        }
        let eE = new Uint32Array(16);
        class eC extends eu.VR {
          constructor() {
            super(64, 20, 8, !0),
              (this.h0 = 1732584193),
              (this.h1 = -271733879),
              (this.h2 = -1732584194),
              (this.h3 = 271733878),
              (this.h4 = -1009589776);
          }
          get() {
            let { h0: e, h1: t, h2: n, h3: r, h4: i } = this;
            return [e, t, n, r, i];
          }
          set(e, t, n, r, i) {
            (this.h0 = 0 | e),
              (this.h1 = 0 | t),
              (this.h2 = 0 | n),
              (this.h3 = 0 | r),
              (this.h4 = 0 | i);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) eE[n] = e.getUint32(t, !0);
            let n = 0 | this.h0,
              r = n,
              i = 0 | this.h1,
              o = i,
              s = 0 | this.h2,
              a = s,
              c = 0 | this.h3,
              u = c,
              l = 0 | this.h4,
              f = l;
            for (let e = 0; e < 5; e++) {
              let t = 4 - e,
                d = ew[e],
                h = ev[e],
                p = ep[e],
                m = em[e],
                g = ey[e],
                y = eb[e];
              for (let t = 0; t < 16; t++) {
                let r =
                  ((0, el.XG)(n + eA(e, i, s, c) + eE[p[t]] + d, g[t]) + l) | 0;
                (n = l), (l = c), (c = 0 | (0, el.XG)(s, 10)), (s = i), (i = r);
              }
              for (let e = 0; e < 16; e++) {
                let n =
                  ((0, el.XG)(r + eA(t, o, a, u) + eE[m[e]] + h, y[e]) + f) | 0;
                (r = f), (f = u), (u = 0 | (0, el.XG)(a, 10)), (a = o), (o = n);
              }
            }
            this.set(
              (this.h1 + s + u) | 0,
              (this.h2 + c + f) | 0,
              (this.h3 + l + r) | 0,
              (this.h4 + n + o) | 0,
              (this.h0 + i + a) | 0
            );
          }
          roundClean() {
            eE.fill(0);
          }
          destroy() {
            (this.destroyed = !0), this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
          }
        }
        function ex(e) {
          var t;
          return (t = (function (e, t, n) {
            if (!e) return [];
            F();
            let r = 0;
            return e.split(".").map((e) => {
              let i = (function (e) {
                  let t = [];
                  for (let n = 0, r = e.length; n < r; ) {
                    let r = e.codePointAt(n);
                    (n += r < 65536 ? 1 : 2), t.push(r);
                  }
                  return t;
                })(e),
                o = { input: i, offset: r };
              r += i.length + 1;
              try {
                let e,
                  r = (o.tokens = (function (e, t, n) {
                    let r = [],
                      i = [];
                    for (e = e.slice().reverse(); e.length; ) {
                      let o = (function (e, t) {
                        let n,
                          r = y,
                          i = e.length;
                        for (; i && (r = r.get(e[--i])); ) {
                          let { V: t } = r;
                          t && ((n = t), (e.length = i));
                        }
                        return n;
                      })(e);
                      if (o) i.length && (r.push(t(i)), (i = [])), r.push(n(o));
                      else {
                        let t = e.pop();
                        if (m.has(t)) i.push(t);
                        else {
                          let e = a.get(t);
                          if (e) i.push(...e);
                          else if (!c.has(t)) throw G(t);
                        }
                      }
                    }
                    return i.length && r.push(t(i)), r;
                  })(i, t, n)),
                  s = r.length;
                if (!s) throw Error("empty label");
                let f = (o.output = r.flat());
                if (
                  ((function (e) {
                    for (let t = e.lastIndexOf(95); t > 0; )
                      if (95 !== e[--t])
                        throw Error("underscore allowed only at start");
                  })(f),
                  !(o.emoji = s > 1 || r[0].is_emoji) &&
                    f.every((e) => e < 128))
                )
                  (function (e) {
                    if (e.length >= 4 && 45 == e[2] && 45 == e[3])
                      throw Error(
                        `invalid label extension: "${I(e.slice(0, 4))}"`
                      );
                  })(f),
                    (e = "ASCII");
                else {
                  let t = r.flatMap((e) => (e.is_emoji ? [] : e));
                  if (t.length) {
                    if (u.has(f[0])) throw q("leading combining mark");
                    for (let e = 1; e < s; e++) {
                      let t = r[e];
                      if (!t.is_emoji && u.has(t[0]))
                        throw q(
                          `emoji + combining mark: "${I(r[e - 1])} + ${_([
                            t[0],
                          ])}"`
                        );
                    }
                    !(function (e) {
                      let t = e[0],
                        n = b.get(t);
                      if (n) throw q(`leading ${n}`);
                      let r = e.length,
                        i = -1;
                      for (let o = 1; o < r; o++) {
                        t = e[o];
                        let r = b.get(t);
                        if (r) {
                          if (i == o) throw q(`${n} + ${r}`);
                          (i = o + 1), (n = r);
                        }
                      }
                      if (i == r) throw q(`trailing ${n}`);
                    })(f);
                    let n = N(new Set(t)),
                      [i] = (function (e) {
                        let t = d;
                        for (let n of e) {
                          let e = t.filter((e) => M(e, n));
                          if (!e.length) {
                            if (d.some((e) => M(e, n))) throw H(t[0], n);
                            throw G(n);
                          }
                          if (((t = e), 1 == e.length)) break;
                        }
                        return t;
                      })(n);
                    (function (e, t) {
                      for (let n of t) if (!M(e, n)) throw H(e, n);
                      if (e.M) {
                        let e = k(t).map(T);
                        for (let t = 1, n = e.length; t < n; t++)
                          if (l.has(e[t])) {
                            let r = t + 1;
                            for (let i; r < n && l.has((i = e[r])); r++)
                              for (let n = t; n < r; n++)
                                if (e[n] == i)
                                  throw Error(
                                    `duplicate non-spacing marks: ${U(i)}`
                                  );
                            if (r - t > 4)
                              throw Error(
                                `excessive non-spacing marks: ${D(
                                  _(e.slice(t - 1, r))
                                )} (${r - t}/4)`
                              );
                            t = r;
                          }
                      }
                    })(i, t),
                      (function (e, t) {
                        let n;
                        let r = [];
                        for (let e of t) {
                          let t = p.get(e);
                          if (1 === t) return;
                          if (t) {
                            let r = t.M.get(e);
                            if (
                              !(n = n ? n.filter((e) => r.has(e)) : N(r)).length
                            )
                              return;
                          } else r.push(e);
                        }
                        if (n) {
                          for (let t of n)
                            if (r.every((e) => M(t, e)))
                              throw Error(
                                `whole-script confusable: ${e.N}/${t.N}`
                              );
                        }
                      })(i, n),
                      (e = i.N);
                  } else e = "Emoji";
                }
                o.type = e;
              } catch (e) {
                o.error = e;
              }
              return o;
            });
          })(e, R, z))
            .map(({ input: e, error: n, output: r }) => {
              if (n) {
                let r = n.message;
                throw Error(
                  1 == t.length ? r : `Invalid label ${D(_(e, 63))}: ${r}`
                );
              }
              return I(r);
            })
            .join(".");
        }
        function eB(e) {
          return ex(e);
        }
        n(86691), n(29272), (ex.parseError = (e) => e);
      },
      98707: function (e, t, n) {
        "use strict";
        n.d(t, {
          T: function () {
            return a;
          },
        });
        var r = n(44659),
          i = n(59455),
          o = n(13169),
          s = n(65358);
        function a(e) {
          let t = e.replace(/^\.|\.$/gm, "");
          if (0 === t.length) return new Uint8Array(1);
          let n = new Uint8Array((0, r.qX)(t).byteLength + 2),
            a = 0,
            c = t.split(".");
          for (let e = 0; e < c.length; e++) {
            let t = (0, r.qX)(c[e]);
            if (t.byteLength > 255) {
              var u;
              t = (0, r.qX)(
                ((u = (function (e) {
                  let t = new Uint8Array(32).fill(0);
                  return e
                    ? (0, s.i)(e) || (0, o.w)((0, r.qX)(e))
                    : (0, i.ci)(t);
                })(c[e])),
                `[${u.slice(2)}]`)
              );
            }
            (n[a] = t.length), n.set(t, a + 1), (a += t.length + 1);
          }
          return n.byteLength !== a + 1 ? n.slice(0, a + 1) : n;
        }
      },
      34180: function (e, t, n) {
        "use strict";
        n.d(t, {
          S: function () {
            return a;
          },
        });
        var r = n(65531),
          i = n(81544),
          o = n(20010),
          s = n(77014);
        function a(
          e,
          {
            abi: t,
            address: n,
            args: a,
            docsPath: c,
            functionName: u,
            sender: l,
          }
        ) {
          let {
              code: f,
              data: d,
              message: h,
              shortMessage: p,
            } = e instanceof o.VQ
              ? e
              : e instanceof i.G
              ? e.walk((e) => "data" in e) || e.walk()
              : {},
            m =
              e instanceof r.wb
                ? new o.Dk({ functionName: u })
                : [3, s.XS.code].includes(f) && (d || h || p)
                ? new o.Lu({
                    abi: t,
                    data: "object" == typeof d ? d.data : d,
                    functionName: u,
                    message: p ?? h,
                  })
                : e;
          return new o.uq(m, {
            abi: t,
            args: a,
            contractAddress: n,
            docsPath: c,
            functionName: u,
            sender: l,
          });
        }
      },
      18856: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return o;
          },
        });
        var r = n(81544),
          i = n(78125);
        function o(e, t) {
          let n = (e.details || "").toLowerCase(),
            o = e instanceof r.G ? e.walk((e) => e?.code === i.M_.code) : e;
          return o instanceof r.G
            ? new i.M_({ cause: e, message: o.details })
            : i.M_.nodeMessage.test(n)
            ? new i.M_({ cause: e, message: e.details })
            : i.Hh.nodeMessage.test(n)
            ? new i.Hh({ cause: e, maxFeePerGas: t?.maxFeePerGas })
            : i.G$.nodeMessage.test(n)
            ? new i.G$({ cause: e, maxFeePerGas: t?.maxFeePerGas })
            : i.ZI.nodeMessage.test(n)
            ? new i.ZI({ cause: e, nonce: t?.nonce })
            : i.vU.nodeMessage.test(n)
            ? new i.vU({ cause: e, nonce: t?.nonce })
            : i.se.nodeMessage.test(n)
            ? new i.se({ cause: e, nonce: t?.nonce })
            : i.C_.nodeMessage.test(n)
            ? new i.C_({ cause: e })
            : i.WF.nodeMessage.test(n)
            ? new i.WF({ cause: e, gas: t?.gas })
            : i.dR.nodeMessage.test(n)
            ? new i.dR({ cause: e, gas: t?.gas })
            : i.pZ.nodeMessage.test(n)
            ? new i.pZ({ cause: e })
            : i.cs.nodeMessage.test(n)
            ? new i.cs({
                cause: e,
                maxFeePerGas: t?.maxFeePerGas,
                maxPriorityFeePerGas: t?.maxPriorityFeePerGas,
              })
            : new i.cj({ cause: e });
        }
      },
      59069: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(27481);
        function i(e) {
          let t = e.transactions?.map((e) =>
            "string" == typeof e ? e : r.Tr(e)
          );
          return {
            ...e,
            baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
            blobGasUsed: e.blobGasUsed ? BigInt(e.blobGasUsed) : void 0,
            difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
            excessBlobGas: e.excessBlobGas ? BigInt(e.excessBlobGas) : void 0,
            gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
            hash: e.hash ? e.hash : null,
            logsBloom: e.logsBloom ? e.logsBloom : null,
            nonce: e.nonce ? e.nonce : null,
            number: e.number ? BigInt(e.number) : null,
            size: e.size ? BigInt(e.size) : void 0,
            timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
            transactions: t,
            totalDifficulty: e.totalDifficulty
              ? BigInt(e.totalDifficulty)
              : null,
          };
        }
      },
      70878: function (e, t, n) {
        "use strict";
        function r(e, { format: t }) {
          if (!t) return {};
          let n = {};
          return (
            (function t(r) {
              for (let i of Object.keys(r))
                i in e && (n[i] = e[i]),
                  r[i] &&
                    "object" == typeof r[i] &&
                    !Array.isArray(r[i]) &&
                    t(r[i]);
            })(t(e || {})),
            n
          );
        }
        n.d(t, {
          K: function () {
            return r;
          },
        });
      },
      55668: function (e, t, n) {
        "use strict";
        function r(e, { args: t, eventName: n } = {}) {
          return {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            logIndex: e.logIndex ? Number(e.logIndex) : null,
            transactionHash: e.transactionHash ? e.transactionHash : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            ...(n ? { args: t, eventName: n } : {}),
          };
        }
        n.d(t, {
          U: function () {
            return r;
          },
        });
      },
      27481: function (e, t, n) {
        "use strict";
        n.d(t, {
          Tr: function () {
            return o;
          },
          c8: function () {
            return i;
          },
        });
        var r = n(72932);
        let i = {
          "0x0": "legacy",
          "0x1": "eip2930",
          "0x2": "eip1559",
          "0x3": "eip4844",
          "0x4": "eip7702",
        };
        function o(e) {
          let t = {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            chainId: e.chainId ? (0, r.ly)(e.chainId) : void 0,
            gas: e.gas ? BigInt(e.gas) : void 0,
            gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
            maxFeePerBlobGas: e.maxFeePerBlobGas
              ? BigInt(e.maxFeePerBlobGas)
              : void 0,
            maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
            maxPriorityFeePerGas: e.maxPriorityFeePerGas
              ? BigInt(e.maxPriorityFeePerGas)
              : void 0,
            nonce: e.nonce ? (0, r.ly)(e.nonce) : void 0,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            type: e.type ? i[e.type] : void 0,
            typeHex: e.type ? e.type : void 0,
            value: e.value ? BigInt(e.value) : void 0,
            v: e.v ? BigInt(e.v) : void 0,
          };
          return (
            e.authorizationList &&
              (t.authorizationList = e.authorizationList.map((e) => ({
                contractAddress: e.address,
                chainId: Number(e.chainId),
                nonce: Number(e.nonce),
                r: e.r,
                s: e.s,
                yParity: Number(e.yParity),
              }))),
            (t.yParity = (() => {
              if (e.yParity) return Number(e.yParity);
              if ("bigint" == typeof t.v) {
                if (0n === t.v || 27n === t.v) return 0;
                if (1n === t.v || 28n === t.v) return 1;
                if (t.v >= 35n) return t.v % 2n === 0n ? 1 : 0;
              }
            })()),
            "legacy" === t.type &&
              (delete t.accessList,
              delete t.maxFeePerBlobGas,
              delete t.maxFeePerGas,
              delete t.maxPriorityFeePerGas,
              delete t.yParity),
            "eip2930" === t.type &&
              (delete t.maxFeePerBlobGas,
              delete t.maxFeePerGas,
              delete t.maxPriorityFeePerGas),
            "eip1559" === t.type && delete t.maxFeePerBlobGas,
            t
          );
        }
      },
      92614: function (e, t, n) {
        "use strict";
        n.d(t, {
          tG: function () {
            return o;
          },
        });
        var r = n(59455);
        let i = {
          legacy: "0x0",
          eip2930: "0x1",
          eip1559: "0x2",
          eip4844: "0x3",
          eip7702: "0x4",
        };
        function o(e) {
          let t = {};
          return (
            void 0 !== e.authorizationList &&
              (t.authorizationList = e.authorizationList.map((e) => ({
                address: e.contractAddress,
                r: e.r,
                s: e.s,
                chainId: (0, r.eC)(e.chainId),
                nonce: (0, r.eC)(e.nonce),
                ...(void 0 !== e.yParity
                  ? { yParity: (0, r.eC)(e.yParity) }
                  : {}),
                ...(void 0 !== e.v && void 0 === e.yParity
                  ? { v: (0, r.eC)(e.v) }
                  : {}),
              }))),
            void 0 !== e.accessList && (t.accessList = e.accessList),
            void 0 !== e.blobVersionedHashes &&
              (t.blobVersionedHashes = e.blobVersionedHashes),
            void 0 !== e.blobs &&
              ("string" != typeof e.blobs[0]
                ? (t.blobs = e.blobs.map((e) => (0, r.ci)(e)))
                : (t.blobs = e.blobs)),
            void 0 !== e.data && (t.data = e.data),
            void 0 !== e.from && (t.from = e.from),
            void 0 !== e.gas && (t.gas = (0, r.eC)(e.gas)),
            void 0 !== e.gasPrice && (t.gasPrice = (0, r.eC)(e.gasPrice)),
            void 0 !== e.maxFeePerBlobGas &&
              (t.maxFeePerBlobGas = (0, r.eC)(e.maxFeePerBlobGas)),
            void 0 !== e.maxFeePerGas &&
              (t.maxFeePerGas = (0, r.eC)(e.maxFeePerGas)),
            void 0 !== e.maxPriorityFeePerGas &&
              (t.maxPriorityFeePerGas = (0, r.eC)(e.maxPriorityFeePerGas)),
            void 0 !== e.nonce && (t.nonce = (0, r.eC)(e.nonce)),
            void 0 !== e.to && (t.to = e.to),
            void 0 !== e.type && (t.type = i[e.type]),
            void 0 !== e.value && (t.value = (0, r.eC)(e.value)),
            t
          );
        }
      },
      82645: function (e, t, n) {
        "use strict";
        function r(e, t, n) {
          let r = e[t.name];
          if ("function" == typeof r) return r;
          let i = e[n];
          return "function" == typeof i ? i : (n) => t(e, n);
        }
        n.d(t, {
          s: function () {
            return r;
          },
        });
      },
      13169: function (e, t, n) {
        "use strict";
        n.d(t, {
          w: function () {
            return a;
          },
        });
        var r = n(86691),
          i = n(93610),
          o = n(44659),
          s = n(59455);
        function a(e, t) {
          let n = (0, r.fr)((0, i.v)(e, { strict: !1 }) ? (0, o.O0)(e) : e);
          return "bytes" === (t || "hex") ? n : (0, s.NC)(n);
        }
      },
      45392: function (e, t, n) {
        "use strict";
        n.d(t, {
          n: function () {
            return r;
          },
        });
        let r = n(77505).r;
      },
      10464: function (e, t, n) {
        "use strict";
        n.d(t, {
          C: function () {
            return o;
          },
        });
        var r = n(69921),
          i = n(77505);
        let o = (e) => (0, r.tP)((0, i.r)(e), 0, 4);
      },
      77505: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return f;
          },
        });
        var r = n(44659),
          i = n(13169);
        let o = (e) => (0, i.w)((0, r.O0)(e));
        var s = n(64020);
        let a = /^tuple(?<array>(\[(\d*)\])*)$/;
        function c(e) {
          let t = "",
            n = e.length;
          for (let r = 0; r < n; r++)
            (t += (function e(t) {
              let n = t.type;
              if (a.test(t.type) && "components" in t) {
                n = "(";
                let r = t.components.length;
                for (let i = 0; i < r; i++)
                  (n += e(t.components[i])), i < r - 1 && (n += ", ");
                let i = (0, s.Zw)(a, t.type);
                return (n += `)${i?.array ?? ""}`), e({ ...t, type: n });
              }
              return ("indexed" in t && t.indexed && (n = `${n} indexed`),
              t.name)
                ? `${n} ${t.name}`
                : n;
            })(e[r])),
              r !== n - 1 && (t += ", ");
          return t;
        }
        var u = n(81544);
        let l = (e) =>
          (function (e) {
            let t = !0,
              n = "",
              r = 0,
              i = "",
              o = !1;
            for (let s = 0; s < e.length; s++) {
              let a = e[s];
              if (
                (["(", ")", ","].includes(a) && (t = !0),
                "(" === a && r++,
                ")" === a && r--,
                t)
              ) {
                if (0 === r) {
                  if (" " === a && ["event", "function", ""].includes(i))
                    i = "";
                  else if (((i += a), ")" === a)) {
                    o = !0;
                    break;
                  }
                  continue;
                }
                if (" " === a) {
                  "," !== e[s - 1] &&
                    "," !== n &&
                    ",(" !== n &&
                    ((n = ""), (t = !1));
                  continue;
                }
                (i += a), (n += a);
              }
            }
            if (!o) throw new u.G("Unable to normalize signature.");
            return i;
          })(
            "string" == typeof e
              ? e
              : "function" === e.type
              ? `function ${e.name}(${c(e.inputs)})${
                  e.stateMutability && "nonpayable" !== e.stateMutability
                    ? ` ${e.stateMutability}`
                    : ""
                }${e.outputs.length ? ` returns (${c(e.outputs)})` : ""}`
              : "event" === e.type
              ? `event ${e.name}(${c(e.inputs)})`
              : "error" === e.type
              ? `error ${e.name}(${c(e.inputs)})`
              : "constructor" === e.type
              ? `constructor(${c(e.inputs)})${
                  "payable" === e.stateMutability ? " payable" : ""
                }`
              : "fallback" === e.type
              ? "fallback()"
              : "receive() external payable"
          );
        function f(e) {
          return o(l(e));
        }
      },
      82061: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return r;
          },
        });
        class r extends Map {
          constructor(e) {
            super(),
              Object.defineProperty(this, "maxSize", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.maxSize = e);
          }
          get(e) {
            let t = super.get(e);
            return (
              super.has(e) && void 0 !== t && (this.delete(e), super.set(e, t)),
              t
            );
          }
          set(e, t) {
            if ((super.set(e, t), this.maxSize && this.size > this.maxSize)) {
              let e = this.keys().next().value;
              e && this.delete(e);
            }
            return this;
          }
        }
      },
      36478: function (e, t, n) {
        "use strict";
        n.d(t, {
          N7: function () {
            return s;
          },
        });
        let r = new Map(),
          i = new Map(),
          o = 0;
        function s(e, t, n) {
          let s = ++o,
            a = () => r.get(e) || [],
            c = () => {
              let t = a();
              r.set(
                e,
                t.filter((e) => e.id !== s)
              );
            },
            u = () => {
              let t = i.get(e);
              1 === a().length && t && t(), c();
            },
            l = a();
          if ((r.set(e, [...l, { id: s, fns: t }]), l && l.length > 0))
            return u;
          let f = {};
          for (let e in t)
            f[e] = (...t) => {
              let n = a();
              if (0 !== n.length) for (let r of n) r.fns[e]?.(...t);
            };
          let d = n(f);
          return "function" == typeof d && i.set(e, d), u;
        }
      },
      41495: function (e, t, n) {
        "use strict";
        n.d(t, {
          $: function () {
            return i;
          },
        });
        var r = n(33457);
        function i(e, { emitOnBegin: t, initialWaitTime: n, interval: i }) {
          let o = !0,
            s = () => (o = !1);
          return (
            (async () => {
              let a;
              t && (a = await e({ unpoll: s }));
              let c = (await n?.(a)) ?? i;
              await (0, r.D)(c);
              let u = async () => {
                o && (await e({ unpoll: s }), await (0, r.D)(i), u());
              };
              u();
            })(),
            s
          );
        }
      },
      43226: function (e, t, n) {
        "use strict";
        n.d(t, {
          S: function () {
            return o;
          },
        });
        var r = n(56921);
        let i = new Map();
        function o({
          fn: e,
          id: t,
          shouldSplitBatch: n,
          wait: o = 0,
          sort: s,
        }) {
          let a = async () => {
              let t = l();
              c();
              let n = t.map(({ args: e }) => e);
              0 !== n.length &&
                e(n)
                  .then((e) => {
                    s && Array.isArray(e) && e.sort(s);
                    for (let n = 0; n < t.length; n++) {
                      let { resolve: r } = t[n];
                      r?.([e[n], e]);
                    }
                  })
                  .catch((e) => {
                    for (let n = 0; n < t.length; n++) {
                      let { reject: r } = t[n];
                      r?.(e);
                    }
                  });
            },
            c = () => i.delete(t),
            u = () => l().map(({ args: e }) => e),
            l = () => i.get(t) || [],
            f = (e) => i.set(t, [...l(), e]);
          return {
            flush: c,
            async schedule(e) {
              let { promise: t, resolve: i, reject: s } = (0, r.n)();
              return (
                (n?.([...u(), e]) && a(), l().length > 0)
                  ? f({ args: e, resolve: i, reject: s })
                  : (f({ args: e, resolve: i, reject: s }), setTimeout(a, o)),
                t
              );
            },
          };
        }
      },
      56921: function (e, t, n) {
        "use strict";
        function r() {
          let e = () => void 0,
            t = () => void 0;
          return {
            promise: new Promise((n, r) => {
              (e = n), (t = r);
            }),
            resolve: e,
            reject: t,
          };
        }
        n.d(t, {
          n: function () {
            return r;
          },
        });
      },
      49287: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return i;
          },
        });
        var r = n(33457);
        function i(
          e,
          { delay: t = 100, retryCount: n = 2, shouldRetry: i = () => !0 } = {}
        ) {
          return new Promise((o, s) => {
            let a = async ({ count: c = 0 } = {}) => {
              let u = async ({ error: e }) => {
                let n = "function" == typeof t ? t({ count: c, error: e }) : t;
                n && (await (0, r.D)(n)), a({ count: c + 1 });
              };
              try {
                let t = await e();
                o(t);
              } catch (e) {
                if (c < n && (await i({ count: c, error: e })))
                  return u({ error: e });
                s(e);
              }
            };
            a();
          });
        }
      },
      39504: function (e, t, n) {
        "use strict";
        function r(
          e,
          { errorInstance: t = Error("timed out"), timeout: n, signal: r }
        ) {
          return new Promise((i, o) => {
            (async () => {
              let s;
              try {
                let a = new AbortController();
                n > 0 &&
                  (s = setTimeout(() => {
                    r ? a.abort() : o(t);
                  }, n)),
                  i(await e({ signal: a?.signal || null }));
              } catch (e) {
                e?.name === "AbortError" && o(t), o(e);
              } finally {
                clearTimeout(s);
              }
            })();
          });
        }
        n.d(t, {
          F: function () {
            return r;
          },
        });
      },
      69021: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return l;
          },
        });
        var r = n(31669),
          i = n(13169),
          o = n(93610),
          s = n(72932),
          a = n(59455);
        async function c({ hash: e, signature: t }) {
          let r = (0, o.v)(e) ? e : (0, a.NC)(e),
            { secp256k1: i } = await Promise.resolve().then(n.bind(n, 44101)),
            c = (() => {
              if ("object" == typeof t && "r" in t && "s" in t) {
                let { r: e, s: n, v: r, yParity: o } = t,
                  a = u(Number(o ?? r));
                return new i.Signature(
                  (0, s.y_)(e),
                  (0, s.y_)(n)
                ).addRecoveryBit(a);
              }
              let e = (0, o.v)(t) ? t : (0, a.NC)(t),
                n = u((0, s.ly)(`0x${e.slice(130)}`));
              return i.Signature.fromCompact(
                e.substring(2, 130)
              ).addRecoveryBit(n);
            })()
              .recoverPublicKey(r.substring(2))
              .toHex(!1);
          return `0x${c}`;
        }
        function u(e) {
          if (0 === e || 1 === e) return e;
          if (27 === e) return 0;
          if (28 === e) return 1;
          throw Error("Invalid yParityOrV value");
        }
        async function l({ hash: e, signature: t }) {
          return (function (e) {
            let t = (0, i.w)(`0x${e.substring(4)}`).substring(26);
            return (0, r.x)(`0x${t}`);
          })(await c({ hash: e, signature: t }));
        }
      },
      77911: function (e, t, n) {
        "use strict";
        n.d(t, {
          mF: function () {
            return u;
          },
        });
        var r = n(10052),
          i = n(47116),
          o = n(29625),
          s = n(4012),
          a = n(59455);
        function c(e) {
          if (e && 0 !== e.length)
            return e.reduce((e, { slot: t, value: n }) => {
              if (66 !== t.length)
                throw new i.W_({ size: t.length, targetSize: 66, type: "hex" });
              if (66 !== n.length)
                throw new i.W_({ size: n.length, targetSize: 66, type: "hex" });
              return (e[t] = n), e;
            }, {});
        }
        function u(e) {
          if (!e) return;
          let t = {};
          for (let { address: n, ...i } of e) {
            if (!(0, s.U)(n, { strict: !1 })) throw new r.b({ address: n });
            if (t[n]) throw new o.Nc({ address: n });
            t[n] = (function (e) {
              let { balance: t, nonce: n, state: r, stateDiff: i, code: s } = e,
                u = {};
              if (
                (void 0 !== s && (u.code = s),
                void 0 !== t && (u.balance = (0, a.eC)(t)),
                void 0 !== n && (u.nonce = (0, a.eC)(n)),
                void 0 !== r && (u.state = c(r)),
                void 0 !== i)
              ) {
                if (u.state) throw new o.Z8();
                u.stateDiff = c(i);
              }
              return u;
            })(i);
          }
          return t;
        }
      },
      31853: function (e, t, n) {
        "use strict";
        n.d(t, {
          P: function () {
            return r;
          },
        });
        let r = (e, t, n) =>
          JSON.stringify(
            e,
            (e, n) => {
              let r = "bigint" == typeof n ? n.toString() : n;
              return "function" == typeof t ? t(e, r) : r;
            },
            n
          );
      },
      54605: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return u;
          },
        });
        var r = n(19775),
          i = n(75018),
          o = n(10052),
          s = n(78125),
          a = n(63228),
          c = n(4012);
        function u(e) {
          let {
              account: t,
              gasPrice: n,
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
              to: f,
            } = e,
            d = t ? (0, r.T)(t) : void 0;
          if (d && !(0, c.U)(d.address)) throw new o.b({ address: d.address });
          if (f && !(0, c.U)(f)) throw new o.b({ address: f });
          if (void 0 !== n && (void 0 !== u || void 0 !== l)) throw new a.xY();
          if (u && u > i.zL) throw new s.Hh({ maxFeePerGas: u });
          if (l && u && l > u)
            throw new s.cs({ maxFeePerGas: u, maxPriorityFeePerGas: l });
        }
      },
      78217: function (e, t, n) {
        "use strict";
        let r;
        n.d(t, {
          h: function () {
            return o;
          },
        });
        let i = 256;
        function o(e = 11) {
          if (!r || i + e > 512) {
            (r = ""), (i = 0);
            for (let e = 0; e < 256; e++)
              r += ((256 + 256 * Math.random()) | 0).toString(16).substring(1);
          }
          return r.substring(i, i++ + e);
        }
      },
      71282: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return o;
          },
        });
        var r = n(98173),
          i = n(39502);
        function o(e, t = "wei") {
          return (0, i.b)(e, r.ez[t]);
        }
      },
      29707: function (e, t, n) {
        "use strict";
        n.d(t, {
          o: function () {
            return o;
          },
        });
        var r = n(98173),
          i = n(39502);
        function o(e, t = "wei") {
          return (0, i.b)(e, r.Zn[t]);
        }
      },
      39502: function (e, t, n) {
        "use strict";
        function r(e, t) {
          let n = e.toString(),
            r = n.startsWith("-");
          r && (n = n.slice(1));
          let [i, o] = [
            (n = n.padStart(t, "0")).slice(0, n.length - t),
            n.slice(n.length - t),
          ];
          return (
            (o = o.replace(/(0+)$/, "")),
            `${r ? "-" : ""}${i || "0"}${o ? `.${o}` : ""}`
          );
        }
        n.d(t, {
          b: function () {
            return r;
          },
        });
      },
      33457: function (e, t, n) {
        "use strict";
        async function r(e) {
          return new Promise((t) => setTimeout(t, e));
        }
        n.d(t, {
          D: function () {
            return r;
          },
        });
      },
      10231: function (e, t, n) {
        "use strict";
        n.d(t, {
          V: function () {
            return a;
          },
          F: function () {
            return c;
          },
        });
        var r = n(2265);
        let i = !1;
        async function o(e, t = {}) {
          let n;
          if (i) return [];
          (i = !0),
            e.setState((e) => ({
              ...e,
              status: e.current ? "reconnecting" : "connecting",
            }));
          let r = [];
          if (t.connectors?.length)
            for (let n of t.connectors) {
              let t;
              (t =
                "function" == typeof n ? e._internal.connectors.setup(n) : n),
                r.push(t);
            }
          else r.push(...e.connectors);
          try {
            n = await e.storage?.getItem("recentConnectorId");
          } catch {}
          let o = {};
          for (let [, t] of e.state.connections) o[t.connector.id] = 1;
          n && (o[n] = 0);
          let s =
              Object.keys(o).length > 0
                ? [...r].sort((e, t) => (o[e.id] ?? 10) - (o[t.id] ?? 10))
                : r,
            a = !1,
            c = [],
            u = [];
          for (let t of s) {
            let n = await t.getProvider().catch(() => void 0);
            if (!n || u.some((e) => e === n) || !(await t.isAuthorized()))
              continue;
            let r = await t.connect({ isReconnecting: !0 }).catch(() => null);
            r &&
              (t.emitter.off("connect", e._internal.events.connect),
              t.emitter.on("change", e._internal.events.change),
              t.emitter.on("disconnect", e._internal.events.disconnect),
              e.setState((e) => {
                let n = new Map(a ? e.connections : new Map()).set(t.uid, {
                  accounts: r.accounts,
                  chainId: r.chainId,
                  connector: t,
                });
                return { ...e, current: a ? e.current : t.uid, connections: n };
              }),
              c.push({
                accounts: r.accounts,
                chainId: r.chainId,
                connector: t,
              }),
              u.push(n),
              (a = !0));
          }
          return (
            ("reconnecting" === e.state.status ||
              "connecting" === e.state.status) &&
              (a
                ? e.setState((e) => ({ ...e, status: "connected" }))
                : e.setState((e) => ({
                    ...e,
                    connections: new Map(),
                    current: null,
                    status: "disconnected",
                  }))),
            (i = !1),
            c
          );
        }
        function s(e) {
          let {
              children: t,
              config: n,
              initialState: i,
              reconnectOnMount: s = !0,
            } = e,
            { onMount: a } = (function (e, t) {
              let { initialState: n, reconnectOnMount: r } = t;
              return (
                n &&
                  !e._internal.store.persist.hasHydrated() &&
                  e.setState({
                    ...n,
                    chainId: e.chains.some((e) => e.id === n.chainId)
                      ? n.chainId
                      : e.chains[0].id,
                    connections: r ? n.connections : new Map(),
                    status: r ? "reconnecting" : "disconnected",
                  }),
                {
                  async onMount() {
                    e._internal.ssr &&
                      (await e._internal.store.persist.rehydrate(),
                      e._internal.mipd &&
                        e._internal.connectors.setState((t) => {
                          let n = new Set();
                          for (let e of t ?? []) e.rdns && n.add(e.rdns);
                          let r = [];
                          for (let t of e._internal.mipd?.getProviders() ??
                            []) {
                            if (n.has(t.info.rdns)) continue;
                            let i =
                                e._internal.connectors.providerDetailToConnector(
                                  t
                                ),
                              o = e._internal.connectors.setup(i);
                            r.push(o);
                          }
                          return [...t, ...r];
                        })),
                      r
                        ? o(e)
                        : e.storage &&
                          e.setState((e) => ({ ...e, connections: new Map() }));
                  },
                }
              );
            })(n, { initialState: i, reconnectOnMount: s });
          n._internal.ssr || a();
          let c = (0, r.useRef)(!0);
          return (
            (0, r.useEffect)(() => {
              if (c.current && n._internal.ssr)
                return (
                  a(),
                  () => {
                    c.current = !1;
                  }
                );
            }, []),
            t
          );
        }
        let a = (0, r.createContext)(void 0);
        function c(e) {
          let { children: t, config: n } = e;
          return (0, r.createElement)(
            s,
            e,
            (0, r.createElement)(a.Provider, { value: n }, t)
          );
        }
      },
      64707: function (e, t, n) {
        "use strict";
        n.d(t, {
          m: function () {
            return l;
          },
        });
        var r = n(55911),
          i = n(24380),
          o = n(12364),
          s = n(52123),
          a = n(2265),
          c = n(35195);
        let u = (e) => "object" == typeof e && !Array.isArray(e);
        function l() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = (0, o.Z)(e);
          return (function (e, t) {
            let n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : t,
              r =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : s.v,
              i = (0, a.useRef)([]),
              o = (0, c.useSyncExternalStoreWithSelector)(
                e,
                t,
                n,
                (e) => e,
                (e, t) => {
                  if (u(e) && u(t) && i.current.length) {
                    for (let n of i.current) if (!r(e[n], t[n])) return !1;
                    return !0;
                  }
                  return r(e, t);
                }
              );
            return (0, a.useMemo)(() => {
              if (u(o)) {
                let e = { ...o },
                  t = {};
                for (let [n, r] of Object.entries(e))
                  t = {
                    ...t,
                    [n]: {
                      configurable: !1,
                      enumerable: !0,
                      get: () => (
                        i.current.includes(n) || i.current.push(n), r
                      ),
                    },
                  };
                return Object.defineProperties(e, t), e;
              }
              return o;
            }, [o]);
          })(
            (e) => (0, r.u)(t, { onChange: e }),
            () => (0, i.D)(t)
          );
        }
      },
      89472: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return s;
          },
        });
        var r = n(55911),
          i = n(2265),
          o = n(12364);
        function s() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { onConnect: t, onDisconnect: n } = e,
            s = (0, o.Z)(e);
          (0, i.useEffect)(
            () =>
              (0, r.u)(s, {
                onChange(e, r) {
                  if (
                    ("reconnecting" === r.status ||
                      ("connecting" === r.status && void 0 === r.address)) &&
                    "connected" === e.status
                  ) {
                    let {
                        address: n,
                        addresses: i,
                        chain: o,
                        chainId: s,
                        connector: a,
                      } = e,
                      c = "reconnecting" === r.status || void 0 === r.status;
                    null == t ||
                      t({
                        address: n,
                        addresses: i,
                        chain: o,
                        chainId: s,
                        connector: a,
                        isReconnected: c,
                      });
                  } else
                    "connected" === r.status &&
                      "disconnected" === e.status &&
                      (null == n || n());
                },
              }),
            [s, t, n]
          );
        }
      },
      17379: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return y;
          },
        });
        var r = n(72932),
          i = n(36826),
          o = n(39502),
          s = n(32807),
          a = n(44199),
          c = n(98173);
        function u(e) {
          return "number" == typeof e ? e : "wei" === e ? 0 : Math.abs(c.Bd[e]);
        }
        var l = n(75079);
        async function f(e, t) {
          let {
            address: n,
            blockNumber: c,
            blockTag: l,
            chainId: f,
            token: h,
            unit: p = "ether",
          } = t;
          if (h)
            try {
              return await d(e, {
                balanceAddress: n,
                chainId: f,
                symbolType: "string",
                tokenAddress: h,
              });
            } catch (t) {
              if ("ContractFunctionExecutionError" === t.name) {
                let t = await d(e, {
                    balanceAddress: n,
                    chainId: f,
                    symbolType: "bytes32",
                    tokenAddress: h,
                  }),
                  o = (0, r.rR)((0, i.f)(t.symbol, { dir: "right" }));
                return { ...t, symbol: o };
              }
              throw t;
            }
          let m = e.getClient({ chainId: f }),
            g = (0, a.s)(m, s.s, "getBalance"),
            y = await g(
              c ? { address: n, blockNumber: c } : { address: n, blockTag: l }
            ),
            b = e.chains.find((e) => e.id === f) ?? m.chain;
          return {
            decimals: b.nativeCurrency.decimals,
            formatted: (0, o.b)(y, u(p)),
            symbol: b.nativeCurrency.symbol,
            value: y,
          };
        }
        async function d(e, t) {
          let {
              balanceAddress: n,
              chainId: r,
              symbolType: i,
              tokenAddress: s,
              unit: a,
            } = t,
            c = {
              abi: [
                {
                  type: "function",
                  name: "balanceOf",
                  stateMutability: "view",
                  inputs: [{ type: "address" }],
                  outputs: [{ type: "uint256" }],
                },
                {
                  type: "function",
                  name: "decimals",
                  stateMutability: "view",
                  inputs: [],
                  outputs: [{ type: "uint8" }],
                },
                {
                  type: "function",
                  name: "symbol",
                  stateMutability: "view",
                  inputs: [],
                  outputs: [{ type: i }],
                },
              ],
              address: s,
            },
            [f, d, h] = await (0, l.J)(e, {
              allowFailure: !1,
              contracts: [
                { ...c, functionName: "balanceOf", args: [n], chainId: r },
                { ...c, functionName: "decimals", chainId: r },
                { ...c, functionName: "symbol", chainId: r },
              ],
            }),
            p = (0, o.b)(f ?? "0", u(a ?? d));
          return { decimals: d, formatted: p, symbol: h, value: f };
        }
        var h = n(27534),
          p = n(24432),
          m = n(44005),
          g = n(12364);
        function y() {
          var e, t;
          let n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { address: r, query: i = {} } = n,
            o = (0, g.Z)(n),
            s = (0, m.x)({ config: o }),
            a = (function (e, t = {}) {
              return {
                async queryFn({ queryKey: t }) {
                  let { address: n, scopeKey: r, ...i } = t[1];
                  if (!n) throw Error("address is required");
                  return (await f(e, { ...i, address: n })) ?? null;
                },
                queryKey: (function (e = {}) {
                  return ["balance", (0, h.OP)(e)];
                })(t),
              };
            })(o, {
              ...n,
              chainId: null !== (e = n.chainId) && void 0 !== e ? e : s,
            }),
            c = !!(r && (null === (t = i.enabled) || void 0 === t || t));
          return (0, p.aM)({ ...i, ...a, enabled: c });
        }
      },
      44005: function (e, t, n) {
        "use strict";
        function r(e) {
          return e.state.chainId;
        }
        n.d(t, {
          x: function () {
            return s;
          },
        });
        var i = n(2265),
          o = n(12364);
        function s() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = (0, o.Z)(e);
          return (0, i.useSyncExternalStore)(
            (e) =>
              (function (e, t) {
                let { onChange: n } = t;
                return e.subscribe((e) => e.chainId, n);
              })(t, { onChange: e }),
            () => r(t),
            () => r(t)
          );
        }
      },
      12364: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return u;
          },
        });
        var r = n(2265),
          i = n(10231),
          o = n(26129);
        let s = () => "wagmi@2.12.29";
        class a extends o.G {
          constructor() {
            super(...arguments),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WagmiError",
              });
          }
          get docsBaseUrl() {
            return "https://wagmi.sh/react";
          }
          get version() {
            return s();
          }
        }
        class c extends a {
          constructor() {
            super("`useConfig` must be used within `WagmiProvider`.", {
              docsPath: "/api/WagmiProvider",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WagmiProviderNotFoundError",
              });
          }
        }
        function u() {
          var e;
          let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            n =
              null !== (e = t.config) && void 0 !== e
                ? e
                : (0, r.useContext)(i.V);
          if (!n) throw new c();
          return n;
        }
      },
      60542: function (e, t, n) {
        "use strict";
        n.d(t, {
          $: function () {
            return f;
          },
        });
        var r = n(21770),
          i = n(13102);
        async function o(e, t) {
          let n;
          if (
            (n =
              "function" == typeof t.connector
                ? e._internal.connectors.setup(t.connector)
                : t.connector).uid === e.state.current
          )
            throw new i.wi();
          try {
            e.setState((e) => ({ ...e, status: "connecting" })),
              n.emitter.emit("message", { type: "connecting" });
            let r = await n.connect({ chainId: t.chainId }),
              i = r.accounts;
            return (
              n.emitter.off("connect", e._internal.events.connect),
              n.emitter.on("change", e._internal.events.change),
              n.emitter.on("disconnect", e._internal.events.disconnect),
              await e.storage?.setItem("recentConnectorId", n.id),
              e.setState((e) => ({
                ...e,
                connections: new Map(e.connections).set(n.uid, {
                  accounts: i,
                  chainId: r.chainId,
                  connector: n,
                }),
                current: n.uid,
                status: "connected",
              })),
              { accounts: i, chainId: r.chainId }
            );
          } catch (t) {
            throw (
              (e.setState((e) => ({
                ...e,
                status: e.current ? "connected" : "disconnected",
              })),
              t)
            );
          }
        }
        var s = n(2265),
          a = n(12364),
          c = n(52123);
        let u = [];
        function l(e) {
          let t = e.connectors;
          return (0, c.v)(u, t) ? u : ((u = t), t);
        }
        function f() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { mutation: t } = e,
            n = (0, a.Z)(e),
            {
              mutate: i,
              mutateAsync: c,
              ...u
            } = (0, r.D)({
              ...t,
              mutationFn: (e) => o(n, e),
              mutationKey: ["connect"],
            });
          return (
            (0, s.useEffect)(
              () =>
                n.subscribe(
                  (e) => {
                    let { status: t } = e;
                    return t;
                  },
                  (e, t) => {
                    "connected" === t && "disconnected" === e && u.reset();
                  }
                ),
              [n, u.reset]
            ),
            {
              ...u,
              connect: i,
              connectAsync: c,
              connectors: (function () {
                let e =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  t = (0, a.Z)(e);
                return (0, s.useSyncExternalStore)(
                  (e) =>
                    (function (e, t) {
                      let { onChange: n } = t;
                      return e._internal.connectors.subscribe((e, t) => {
                        n(Object.values(e), t);
                      });
                    })(t, { onChange: e }),
                  () => l(t),
                  () => l(t)
                );
              })({ config: n }),
            }
          );
        }
      },
      99778: function (e, t, n) {
        "use strict";
        n.d(t, {
          q: function () {
            return l;
          },
        });
        var r = n(21770);
        async function i(e, t = {}) {
          let n;
          if (t.connector) n = t.connector;
          else {
            let { connections: t, current: r } = e.state,
              i = t.get(r);
            n = i?.connector;
          }
          let r = e.state.connections;
          n &&
            (await n.disconnect(),
            n.emitter.off("change", e._internal.events.change),
            n.emitter.off("disconnect", e._internal.events.disconnect),
            n.emitter.on("connect", e._internal.events.connect),
            r.delete(n.uid)),
            e.setState((e) => {
              if (0 === r.size)
                return {
                  ...e,
                  connections: new Map(),
                  current: null,
                  status: "disconnected",
                };
              let t = r.values().next().value;
              return {
                ...e,
                connections: new Map(r),
                current: t.connector.uid,
              };
            });
          {
            let t = e.state.current;
            if (!t) return;
            let n = e.state.connections.get(t)?.connector;
            if (!n) return;
            await e.storage?.setItem("recentConnectorId", n.id);
          }
        }
        var o = n(12364),
          s = n(52123);
        let a = [];
        function c(e) {
          let t = [...e.state.connections.values()];
          return "reconnecting" === e.state.status || (0, s.v)(a, t)
            ? a
            : ((a = t), t);
        }
        var u = n(2265);
        function l() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { mutation: t } = e,
            n = (0, o.Z)(e),
            {
              mutate: a,
              mutateAsync: l,
              ...f
            } = (0, r.D)({
              ...t,
              mutationFn: (e) => i(n, e),
              mutationKey: ["disconnect"],
            });
          return {
            ...f,
            connectors: (function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                t = (0, o.Z)(e);
              return (0, u.useSyncExternalStore)(
                (e) =>
                  (function (e, t) {
                    let { onChange: n } = t;
                    return e.subscribe(() => c(e), n, { equalityFn: s.v });
                  })(t, { onChange: e }),
                () => c(t),
                () => c(t)
              );
            })({ config: n }).map((e) => e.connector),
            disconnect: a,
            disconnectAsync: l,
          };
        }
      },
      33507: function (e, t, n) {
        "use strict";
        n.d(t, {
          c: function () {
            return u;
          },
        });
        var r = n(96698),
          i = n(44199),
          o = n(27534),
          s = n(24432),
          a = n(44005),
          c = n(12364);
        function u() {
          var e, t;
          let n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { name: u, query: l = {} } = n,
            f = (0, c.Z)(n),
            d = (0, a.x)({ config: f }),
            h = (function (e, t = {}) {
              return {
                async queryFn({ queryKey: t }) {
                  let { name: n, scopeKey: o, ...s } = t[1];
                  if (!n) throw Error("name is required");
                  return (function (e, t) {
                    let { chainId: n, ...o } = t,
                      s = e.getClient({ chainId: n });
                    return (0, i.s)(s, r.r, "getEnsAvatar")(o);
                  })(e, { ...s, name: n });
                },
                queryKey: (function (e = {}) {
                  return ["ensAvatar", (0, o.OP)(e)];
                })(t),
              };
            })(f, {
              ...n,
              chainId: null !== (e = n.chainId) && void 0 !== e ? e : d,
            }),
            p = !!(u && (null === (t = l.enabled) || void 0 === t || t));
          return (0, s.aM)({ ...l, ...h, enabled: p });
        }
      },
      77861: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return u;
          },
        });
        var r = n(72609),
          i = n(44199),
          o = n(27534),
          s = n(24432),
          a = n(44005),
          c = n(12364);
        function u() {
          var e, t;
          let n =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { address: u, query: l = {} } = n,
            f = (0, c.Z)(n),
            d = (0, a.x)({ config: f }),
            h = (function (e, t = {}) {
              return {
                async queryFn({ queryKey: t }) {
                  let { address: n, scopeKey: o, ...s } = t[1];
                  if (!n) throw Error("address is required");
                  return (function (e, t) {
                    let { chainId: n, ...o } = t,
                      s = e.getClient({ chainId: n });
                    return (0, i.s)(s, r.w, "getEnsName")(o);
                  })(e, { ...s, address: n });
                },
                queryKey: (function (e = {}) {
                  return ["ensName", (0, o.OP)(e)];
                })(t),
              };
            })(f, {
              ...n,
              chainId: null !== (e = n.chainId) && void 0 !== e ? e : d,
            }),
            p = !!(u && (null === (t = l.enabled) || void 0 === t || t));
          return (0, s.aM)({ ...l, ...h, enabled: p });
        }
      },
      73701: function (e, t, n) {
        "use strict";
        n.d(t, {
          t: function () {
            return e8;
          },
        });
        var r = n(98158),
          i = n(65436),
          o = n(17283),
          s = n(93627),
          a = n(36826),
          c = n(59455),
          u = n(83348),
          l = n(21721),
          f = n(98707),
          d = n(82645),
          h = n(28766);
        async function p(
          e,
          {
            blockNumber: t,
            blockTag: n,
            coinType: p,
            name: m,
            gatewayUrls: g,
            strict: y,
            universalResolverAddress: b,
          }
        ) {
          let w = b;
          if (!w) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            w = (0, s.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let s = (0, o.R)({
                abi: r.X$,
                functionName: "addr",
                ...(null != p
                  ? { args: [(0, l.V)(m), BigInt(p)] }
                  : { args: [(0, l.V)(m)] }),
              }),
              u = {
                address: w,
                abi: r.k3,
                functionName: "resolve",
                args: [(0, c.NC)((0, f.T)(m)), s],
                blockNumber: t,
                blockTag: n,
              },
              y = (0, d.s)(e, h.L, "readContract"),
              b = g ? await y({ ...u, args: [...u.args, g] }) : await y(u);
            if ("0x" === b[0]) return null;
            let v = (0, i.k)({
              abi: r.X$,
              args: null != p ? [(0, l.V)(m), BigInt(p)] : void 0,
              functionName: "addr",
              data: b[0],
            });
            if ("0x" === v || "0x00" === (0, a.f)(v)) return null;
            return v;
          } catch (e) {
            if (y) throw e;
            if ((0, u.c)(e, "resolve")) return null;
            throw e;
          }
        }
        var m = n(96698),
          g = n(72609);
        async function y(
          e,
          { blockNumber: t, blockTag: n, name: r, universalResolverAddress: i }
        ) {
          let o = i;
          if (!o) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            o = (0, s.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let [a] = await (0, d.s)(
            e,
            h.L,
            "readContract"
          )({
            address: o,
            abi: [
              {
                inputs: [{ type: "bytes" }],
                name: "findResolver",
                outputs: [{ type: "address" }, { type: "bytes32" }],
                stateMutability: "view",
                type: "function",
              },
            ],
            functionName: "findResolver",
            args: [(0, c.NC)((0, f.T)(r))],
            blockNumber: t,
            blockTag: n,
          });
          return a;
        }
        var b = n(99861),
          w = n(25664);
        function v(e, { method: t }) {
          let n = {};
          return (
            "fallback" === e.transport.type &&
              e.transport.onResponse?.(
                ({ method: e, response: r, status: i, transport: o }) => {
                  "success" === i && t === e && (n[r] = o.request);
                }
              ),
            (t) => n[t] || e.request
          );
        }
        async function A(e) {
          let t = v(e, { method: "eth_newBlockFilter" }),
            n = await e.request({ method: "eth_newBlockFilter" });
          return { id: n, request: t(n), type: "block" };
        }
        var E = n(65531),
          C = n(81544);
        class x extends C.G {
          constructor(e) {
            super(`Filter type "${e}" is not supported.`, {
              name: "FilterTypeNotSupportedError",
            });
          }
        }
        var B = n(44659),
          I = n(13169),
          S = n(45392),
          P = n(30056),
          T = n(7275),
          O = n(64043);
        let k = "/docs/contract/encodeEventTopics";
        function R(e) {
          let { abi: t, eventName: n, args: r } = e,
            i = t[0];
          if (n) {
            let e = (0, O.mE)({ abi: t, name: n });
            if (!e) throw new E.mv(n, { docsPath: k });
            i = e;
          }
          if ("event" !== i.type) throw new E.mv(void 0, { docsPath: k });
          let o = (0, T.t)(i),
            s = (0, S.n)(o),
            a = [];
          if (r && "inputs" in i) {
            let e = i.inputs?.filter((e) => "indexed" in e && e.indexed),
              t = Array.isArray(r)
                ? r
                : Object.values(r).length > 0
                ? e?.map((e) => r[e.name]) ?? []
                : [];
            t.length > 0 &&
              (a =
                e?.map((e, n) =>
                  Array.isArray(t[n])
                    ? t[n].map((r, i) => N({ param: e, value: t[n][i] }))
                    : t[n]
                    ? N({ param: e, value: t[n] })
                    : null
                ) ?? []);
          }
          return [s, ...a];
        }
        function N({ param: e, value: t }) {
          if ("string" === e.type || "bytes" === e.type)
            return (0, I.w)((0, B.O0)(t));
          if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/))
            throw new x(e.type);
          return (0, P.E)([e], [t]);
        }
        async function M(e, t) {
          let {
              address: n,
              abi: r,
              args: i,
              eventName: o,
              fromBlock: s,
              strict: a,
              toBlock: u,
            } = t,
            l = v(e, { method: "eth_newFilter" }),
            f = o ? R({ abi: r, args: i, eventName: o }) : void 0,
            d = await e.request({
              method: "eth_newFilter",
              params: [
                {
                  address: n,
                  fromBlock: "bigint" == typeof s ? (0, c.eC)(s) : s,
                  toBlock: "bigint" == typeof u ? (0, c.eC)(u) : u,
                  topics: f,
                },
              ],
            });
          return {
            abi: r,
            args: i,
            eventName: o,
            id: d,
            request: l(d),
            strict: !!a,
            type: "event",
          };
        }
        async function L(
          e,
          {
            address: t,
            args: n,
            event: r,
            events: i,
            fromBlock: o,
            strict: s,
            toBlock: a,
          } = {}
        ) {
          let u = i ?? (r ? [r] : void 0),
            l = v(e, { method: "eth_newFilter" }),
            f = [];
          u &&
            ((f = [
              u.flatMap((e) => R({ abi: [e], eventName: e.name, args: n })),
            ]),
            r && (f = f[0]));
          let d = await e.request({
            method: "eth_newFilter",
            params: [
              {
                address: t,
                fromBlock: "bigint" == typeof o ? (0, c.eC)(o) : o,
                toBlock: "bigint" == typeof a ? (0, c.eC)(a) : a,
                ...(f.length ? { topics: f } : {}),
              },
            ],
          });
          return {
            abi: u,
            args: n,
            eventName: r ? r.name : void 0,
            fromBlock: o,
            id: d,
            request: l(d),
            strict: !!s,
            toBlock: a,
            type: "event",
          };
        }
        async function F(e) {
          let t = v(e, { method: "eth_newPendingTransactionFilter" }),
            n = await e.request({ method: "eth_newPendingTransactionFilter" });
          return { id: n, request: t(n), type: "transaction" };
        }
        var U = n(19775),
          D = n(34180),
          _ = n(8741);
        async function j(e, t) {
          let { abi: n, address: r, args: i, functionName: s, ...a } = t,
            c = (0, o.R)({ abi: n, args: i, functionName: s });
          try {
            return await (0, d.s)(
              e,
              _.Q,
              "estimateGas"
            )({ data: c, to: r, ...a });
          } catch (t) {
            let e = a.account ? (0, U.T)(a.account) : void 0;
            throw (0, D.S)(t, {
              abi: n,
              address: r,
              args: i,
              docsPath: "/docs/contract/estimateContractGas",
              functionName: s,
              sender: e?.address,
            });
          }
        }
        var G = n(6458),
          H = n(96174),
          q = n(32807);
        async function z(e) {
          return BigInt(await e.request({ method: "eth_blobBaseFee" }));
        }
        var Q = n(74587),
          W = n(13708),
          V = n(72932);
        async function K(
          e,
          { blockHash: t, blockNumber: n, blockTag: r = "latest" } = {}
        ) {
          let i;
          let o = void 0 !== n ? (0, c.eC)(n) : void 0;
          return (
            (i = t
              ? await e.request(
                  { method: "eth_getBlockTransactionCountByHash", params: [t] },
                  { dedupe: !0 }
                )
              : await e.request(
                  {
                    method: "eth_getBlockTransactionCountByNumber",
                    params: [o || r],
                  },
                  { dedupe: !!o }
                )),
            (0, V.ly)(i)
          );
        }
        var $ = n(12363);
        async function Z(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest" }
        ) {
          let i = void 0 !== n ? (0, c.eC)(n) : void 0,
            o = await e.request(
              { method: "eth_getCode", params: [t, i || r] },
              { dedupe: !!i }
            );
          if ("0x" !== o) return o;
        }
        var J = n(93637),
          Y = n(20556),
          X = n(33630),
          ee = n(2742);
        let et = "/docs/contract/decodeEventLog";
        function en(e) {
          let { abi: t, data: n, strict: r, topics: i } = e,
            o = r ?? !0,
            [s, ...a] = i;
          if (!s) throw new E.FM({ docsPath: et });
          let c =
            1 === t.length
              ? t[0]
              : t.find(
                  (e) => "event" === e.type && s === (0, S.n)((0, T.t)(e))
                );
          if (!(c && "name" in c) || "event" !== c.type)
            throw new E.lC(s, { docsPath: et });
          let { name: u, inputs: l } = c,
            f = l?.some((e) => !("name" in e && e.name)),
            d = f ? [] : {},
            h = l.filter((e) => "indexed" in e && e.indexed);
          for (let e = 0; e < h.length; e++) {
            let t = h[e],
              n = a[e];
            if (!n) throw new E.Gy({ abiItem: c, param: t });
            d[f ? e : t.name || e] = (function ({ param: e, value: t }) {
              return "string" === e.type ||
                "bytes" === e.type ||
                "tuple" === e.type ||
                e.type.match(/^(.*)\[(\d+)?\]$/)
                ? t
                : ((0, ee.r)([e], t) || [])[0];
            })({ param: t, value: n });
          }
          let p = l.filter((e) => !("indexed" in e && e.indexed));
          if (p.length > 0) {
            if (n && "0x" !== n)
              try {
                let e = (0, ee.r)(p, n);
                if (e) {
                  if (f) d = [...d, ...e];
                  else for (let t = 0; t < p.length; t++) d[p[t].name] = e[t];
                }
              } catch (e) {
                if (o) {
                  if (e instanceof E.xB || e instanceof X.lQ)
                    throw new E.SM({
                      abiItem: c,
                      data: n,
                      params: p,
                      size: (0, Y.d)(n),
                    });
                  throw e;
                }
              }
            else if (o)
              throw new E.SM({ abiItem: c, data: "0x", params: p, size: 0 });
          }
          return {
            eventName: u,
            args: Object.values(d).length > 0 ? d : void 0,
          };
        }
        function er(e) {
          let { abi: t, args: n, logs: r, strict: i = !0 } = e,
            o = (() => {
              if (e.eventName)
                return Array.isArray(e.eventName) ? e.eventName : [e.eventName];
            })();
          return r
            .map((e) => {
              try {
                let r = t.find(
                  (t) => "event" === t.type && e.topics[0] === (0, S.n)(t)
                );
                if (!r) return null;
                let s = en({ ...e, abi: [r], strict: i });
                if (
                  (o && !o.includes(s.eventName)) ||
                  !(function (e) {
                    let { args: t, inputs: n, matchArgs: r } = e;
                    if (!r) return !0;
                    if (!t) return !1;
                    function i(e, t, n) {
                      try {
                        if ("address" === e.type) return (0, J.E)(t, n);
                        if ("string" === e.type || "bytes" === e.type)
                          return (0, I.w)((0, B.O0)(t)) === n;
                        return t === n;
                      } catch {
                        return !1;
                      }
                    }
                    return Array.isArray(t) && Array.isArray(r)
                      ? r.every((e, r) => {
                          if (null == e) return !0;
                          let o = n[r];
                          return (
                            !!o &&
                            (Array.isArray(e) ? e : [e]).some((e) =>
                              i(o, e, t[r])
                            )
                          );
                        })
                      : !(
                          "object" != typeof t ||
                          Array.isArray(t) ||
                          "object" != typeof r ||
                          Array.isArray(r)
                        ) &&
                          Object.entries(r).every(([e, r]) => {
                            if (null == r) return !0;
                            let o = n.find((t) => t.name === e);
                            return (
                              !!o &&
                              (Array.isArray(r) ? r : [r]).some((n) =>
                                i(o, n, t[e])
                              )
                            );
                          });
                  })({ args: s.args, inputs: r.inputs, matchArgs: n })
                )
                  return null;
                return { ...s, ...e };
              } catch (r) {
                let t, n;
                if (r instanceof E.lC) return null;
                if (r instanceof E.SM || r instanceof E.Gy) {
                  if (i) return null;
                  (t = r.abiItem.name),
                    (n = r.abiItem.inputs?.some(
                      (e) => !("name" in e && e.name)
                    ));
                }
                return { ...e, args: n ? [] : {}, eventName: t };
              }
            })
            .filter(Boolean);
        }
        var ei = n(55668);
        async function eo(
          e,
          {
            address: t,
            blockHash: n,
            fromBlock: r,
            toBlock: i,
            event: o,
            events: s,
            args: a,
            strict: u,
          } = {}
        ) {
          let l = s ?? (o ? [o] : void 0),
            f = [];
          l &&
            ((f = [
              l.flatMap((e) =>
                R({ abi: [e], eventName: e.name, args: s ? void 0 : a })
              ),
            ]),
            o && (f = f[0]));
          let d = (
            n
              ? await e.request({
                  method: "eth_getLogs",
                  params: [{ address: t, topics: f, blockHash: n }],
                })
              : await e.request({
                  method: "eth_getLogs",
                  params: [
                    {
                      address: t,
                      topics: f,
                      fromBlock: "bigint" == typeof r ? (0, c.eC)(r) : r,
                      toBlock: "bigint" == typeof i ? (0, c.eC)(i) : i,
                    },
                  ],
                })
          ).map((e) => (0, ei.U)(e));
          return l ? er({ abi: l, args: a, logs: d, strict: u ?? !1 }) : d;
        }
        async function es(e, t) {
          let {
              abi: n,
              address: r,
              args: i,
              blockHash: o,
              eventName: s,
              fromBlock: a,
              toBlock: c,
              strict: u,
            } = t,
            l = s ? (0, O.mE)({ abi: n, name: s }) : void 0,
            f = l ? void 0 : n.filter((e) => "event" === e.type);
          return (0, d.s)(
            e,
            eo,
            "getLogs"
          )({
            address: r,
            args: i,
            blockHash: o,
            event: l,
            events: f,
            fromBlock: a,
            toBlock: c,
            strict: u,
          });
        }
        class ea extends C.G {
          constructor({ address: e }) {
            super(`No EIP-712 domain found on contract "${e}".`, {
              metaMessages: [
                "Ensure that:",
                `- The contract is deployed at the address "${e}".`,
                "- `eip712Domain()` function exists on the contract.",
                "- `eip712Domain()` function matches signature to ERC-5267 specification.",
              ],
              name: "Eip712DomainNotFoundError",
            });
          }
        }
        async function ec(e, t) {
          let { address: n, factory: r, factoryData: i } = t;
          try {
            let [t, o, s, a, c, u, l] = await (0, d.s)(
              e,
              h.L,
              "readContract"
            )({
              abi: eu,
              address: n,
              functionName: "eip712Domain",
              factory: r,
              factoryData: i,
            });
            return {
              domain: {
                name: o,
                version: s,
                chainId: Number(a),
                verifyingContract: c,
                salt: u,
              },
              extensions: l,
              fields: t,
            };
          } catch (e) {
            if (
              "ContractFunctionExecutionError" === e.name &&
              "ContractFunctionZeroDataError" === e.cause.name
            )
              throw new ea({ address: n });
            throw e;
          }
        }
        let eu = [
          {
            inputs: [],
            name: "eip712Domain",
            outputs: [
              { name: "fields", type: "bytes1" },
              { name: "name", type: "string" },
              { name: "version", type: "string" },
              { name: "chainId", type: "uint256" },
              { name: "verifyingContract", type: "address" },
              { name: "salt", type: "bytes32" },
              { name: "extensions", type: "uint256[]" },
            ],
            stateMutability: "view",
            type: "function",
          },
        ];
        async function el(
          e,
          {
            blockCount: t,
            blockNumber: n,
            blockTag: r = "latest",
            rewardPercentiles: i,
          }
        ) {
          var o;
          let s = n ? (0, c.eC)(n) : void 0;
          return {
            baseFeePerGas: (o = await e.request(
              { method: "eth_feeHistory", params: [(0, c.eC)(t), s || r, i] },
              { dedupe: !!s }
            )).baseFeePerGas.map((e) => BigInt(e)),
            gasUsedRatio: o.gasUsedRatio,
            oldestBlock: BigInt(o.oldestBlock),
            reward: o.reward?.map((e) => e.map((e) => BigInt(e))),
          };
        }
        async function ef(e, { filter: t }) {
          let n = "strict" in t && t.strict,
            r = await t.request({
              method: "eth_getFilterChanges",
              params: [t.id],
            });
          if ("string" == typeof r[0]) return r;
          let i = r.map((e) => (0, ei.U)(e));
          return "abi" in t && t.abi
            ? er({ abi: t.abi, logs: i, strict: n })
            : i;
        }
        async function ed(e, { filter: t }) {
          let n = t.strict ?? !1,
            r = (
              await t.request({ method: "eth_getFilterLogs", params: [t.id] })
            ).map((e) => (0, ei.U)(e));
          return t.abi ? er({ abi: t.abi, logs: r, strict: n }) : r;
        }
        var eh = n(25283);
        async function ep(
          e,
          { address: t, blockNumber: n, blockTag: r, storageKeys: i }
        ) {
          var o;
          let s = void 0 !== n ? (0, c.eC)(n) : void 0;
          return {
            ...(o = await e.request({
              method: "eth_getProof",
              params: [t, i, s || (r ?? "latest")],
            })),
            balance: o.balance ? BigInt(o.balance) : void 0,
            nonce: o.nonce ? (0, V.ly)(o.nonce) : void 0,
            storageProof: o.storageProof
              ? o.storageProof.map((e) => ({ ...e, value: BigInt(e.value) }))
              : void 0,
          };
        }
        async function em(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest", slot: i }
        ) {
          let o = void 0 !== n ? (0, c.eC)(n) : void 0;
          return await e.request({
            method: "eth_getStorageAt",
            params: [t, i, o || r],
          });
        }
        var eg = n(39277);
        async function ey(e, { hash: t, transactionReceipt: n }) {
          let [r, i] = await Promise.all([
              (0, d.s)(e, W.z, "getBlockNumber")({}),
              t ? (0, d.s)(e, eg.f, "getTransaction")({ hash: t }) : void 0,
            ]),
            o = n?.blockNumber || i?.blockNumber;
          return o ? r - o + 1n : 0n;
        }
        var eb = n(16689),
          ew = n(75848),
          ev = n(94797),
          eA = n(21541);
        async function eE(e, { filter: t }) {
          return t.request({ method: "eth_uninstallFilter", params: [t.id] });
        }
        var eC = n(89256);
        function ex(e, t) {
          return (0, I.w)(
            (function (e) {
              let t =
                  "string" == typeof e
                    ? (0, c.$G)(e)
                    : "string" == typeof e.raw
                    ? e.raw
                    : (0, c.ci)(e.raw),
                n = (0, c.$G)(`\x19Ethereum Signed Message:
${(0, Y.d)(t)}`);
              return (0, eC.zo)([n, t]);
            })(e),
            t
          );
        }
        var eB = n(45434),
          eI = n(20010),
          eS = n(23010),
          eP = n(31669),
          eT = n(93610);
        let eO =
          "0x6492649264926492649264926492649264926492649264926492649264926492";
        var ek = n(69921),
          eR = n(69021),
          eN = n(44101);
        async function eM(e, t) {
          let {
              address: n,
              factory: i,
              factoryData: s,
              hash: a,
              signature: u,
              universalSignatureVerifierAddress: l = e.chain?.contracts
                ?.universalSignatureVerifier?.address,
              ...f
            } = t,
            h = (0, eT.v)(u)
              ? u
              : "object" == typeof u && "r" in u && "s" in u
              ? (function ({ r: e, s: t, to: n = "hex", v: r, yParity: i }) {
                  let o = (() => {
                      if (0 === i || 1 === i) return i;
                      if (r && (27n === r || 28n === r || r >= 35n))
                        return r % 2n === 0n ? 1 : 0;
                      throw Error("Invalid `v` or `yParity` value");
                    })(),
                    s = `0x${new eN.secp256k1.Signature(
                      (0, V.y_)(e),
                      (0, V.y_)(t)
                    ).toCompactHex()}${0 === o ? "1b" : "1c"}`;
                  return "hex" === n ? s : (0, B.nr)(s);
                })(u)
              : (0, c.ci)(u),
            p = await (async () =>
              i || s
                ? (0, ek.p5)(h, -32) === eO
                  ? h
                  : (function (e) {
                      let {
                          address: t,
                          data: n,
                          signature: r,
                          to: i = "hex",
                        } = e,
                        o = (0, eC.SM)([
                          (0, P.E)(
                            [
                              { type: "address" },
                              { type: "bytes" },
                              { type: "bytes" },
                            ],
                            [t, n, r]
                          ),
                          eO,
                        ]);
                      return "hex" === i ? o : (0, B.nr)(o);
                    })({ address: i, data: s, signature: h })
                : h)();
          try {
            let t = l
                ? {
                    to: l,
                    data: (0, o.R)({
                      abi: r.$o,
                      functionName: "isValidSig",
                      args: [n, a, p],
                    }),
                    ...f,
                  }
                : {
                    data: (0, eS.w)({
                      abi: r.$o,
                      args: [n, a, p],
                      bytecode: eB.ST,
                    }),
                    ...f,
                  },
              { data: i } = await (0, d.s)(e, w.R, "call")(t);
            return (0, V.XA)(i ?? "0x0");
          } catch (e) {
            try {
              if (
                (0, J.E)(
                  (0, eP.K)(n),
                  await (0, eR.R)({ hash: a, signature: u })
                )
              )
                return !0;
            } catch {}
            if (e instanceof eI.cg) return !1;
            throw e;
          }
        }
        async function eL(
          e,
          {
            address: t,
            message: n,
            factory: r,
            factoryData: i,
            signature: o,
            ...s
          }
        ) {
          return eM(e, {
            address: t,
            factory: r,
            factoryData: i,
            hash: ex(n),
            signature: o,
            ...s,
          });
        }
        var eF = n(10052);
        class eU extends C.G {
          constructor({ primaryType: e, types: t }) {
            super(
              `Invalid primary type \`${e}\` must be one of \`${JSON.stringify(
                Object.keys(t)
              )}\`.`,
              {
                docsPath:
                  "/api/glossary/Errors#typeddatainvalidprimarytypeerror",
                metaMessages: [
                  "Check that the primary type is a key in `types`.",
                ],
              }
            );
          }
        }
        class eD extends C.G {
          constructor({ type: e }) {
            super(`Struct type "${e}" is invalid.`, {
              metaMessages: ["Struct type must not be a Solidity type."],
              name: "InvalidStructTypeError",
            });
          }
        }
        var e_ = n(4012);
        let ej = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
          eG =
            /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
        function eH({ data: e, primaryType: t, types: n }) {
          let r = (function e({ data: t, primaryType: n, types: r }) {
            let i = [{ type: "bytes32" }],
              o = [
                (function ({ primaryType: e, types: t }) {
                  let n = (0, c.NC)(
                    (function ({ primaryType: e, types: t }) {
                      let n = "",
                        r = (function e(
                          { primaryType: t, types: n },
                          r = new Set()
                        ) {
                          let i = t.match(/^\w*/u),
                            o = i?.[0];
                          if (r.has(o) || void 0 === n[o]) return r;
                          for (let t of (r.add(o), n[o]))
                            e({ primaryType: t.type, types: n }, r);
                          return r;
                        })({ primaryType: e, types: t });
                      for (let i of (r.delete(e), [e, ...Array.from(r).sort()]))
                        n += `${i}(${t[i]
                          .map(({ name: e, type: t }) => `${t} ${e}`)
                          .join(",")})`;
                      return n;
                    })({ primaryType: e, types: t })
                  );
                  return (0, I.w)(n);
                })({ primaryType: n, types: r }),
              ];
            for (let s of r[n]) {
              let [n, a] = (function t({
                types: n,
                name: r,
                type: i,
                value: o,
              }) {
                if (void 0 !== n[i])
                  return [
                    { type: "bytes32" },
                    (0, I.w)(e({ data: o, primaryType: i, types: n })),
                  ];
                if ("bytes" === i) {
                  let e = o.length % 2 ? "0" : "";
                  return (
                    (o = `0x${e + o.slice(2)}`),
                    [{ type: "bytes32" }, (0, I.w)(o)]
                  );
                }
                if ("string" === i)
                  return [{ type: "bytes32" }, (0, I.w)((0, c.NC)(o))];
                if (i.lastIndexOf("]") === i.length - 1) {
                  let e = i.slice(0, i.lastIndexOf("[")),
                    s = o.map((i) =>
                      t({ name: r, type: e, types: n, value: i })
                    );
                  return [
                    { type: "bytes32" },
                    (0, I.w)(
                      (0, P.E)(
                        s.map(([e]) => e),
                        s.map(([, e]) => e)
                      )
                    ),
                  ];
                }
                return [{ type: i }, o];
              })({ types: r, name: s.name, type: s.type, value: t[s.name] });
              i.push(n), o.push(a);
            }
            return (0, P.E)(i, o);
          })({ data: e, primaryType: t, types: n });
          return (0, I.w)(r);
        }
        async function eq(e, t) {
          let {
            address: n,
            factory: r,
            factoryData: i,
            signature: o,
            message: s,
            primaryType: a,
            types: u,
            domain: l,
            ...f
          } = t;
          return eM(e, {
            address: n,
            factory: r,
            factoryData: i,
            hash: (function (e) {
              let { domain: t = {}, message: n, primaryType: r } = e,
                i = {
                  EIP712Domain: (function ({ domain: e }) {
                    return [
                      "string" == typeof e?.name && {
                        name: "name",
                        type: "string",
                      },
                      e?.version && { name: "version", type: "string" },
                      "number" == typeof e?.chainId && {
                        name: "chainId",
                        type: "uint256",
                      },
                      e?.verifyingContract && {
                        name: "verifyingContract",
                        type: "address",
                      },
                      e?.salt && { name: "salt", type: "bytes32" },
                    ].filter(Boolean);
                  })({ domain: t }),
                  ...e.types,
                };
              !(function (e) {
                let { domain: t, message: n, primaryType: r, types: i } = e,
                  o = (e, t) => {
                    for (let n of e) {
                      let { name: e, type: r } = n,
                        s = t[e],
                        a = r.match(eG);
                      if (a && ("number" == typeof s || "bigint" == typeof s)) {
                        let [e, t, n] = a;
                        (0, c.eC)(s, {
                          signed: "int" === t,
                          size: Number.parseInt(n) / 8,
                        });
                      }
                      if (
                        "address" === r &&
                        "string" == typeof s &&
                        !(0, e_.U)(s)
                      )
                        throw new eF.b({ address: s });
                      let u = r.match(ej);
                      if (u) {
                        let [e, t] = u;
                        if (t && (0, Y.d)(s) !== Number.parseInt(t))
                          throw new E.KY({
                            expectedSize: Number.parseInt(t),
                            givenSize: (0, Y.d)(s),
                          });
                      }
                      let l = i[r];
                      l &&
                        ((function (e) {
                          if (
                            "address" === e ||
                            "bool" === e ||
                            "string" === e ||
                            e.startsWith("bytes") ||
                            e.startsWith("uint") ||
                            e.startsWith("int")
                          )
                            throw new eD({ type: e });
                        })(r),
                        o(l, s));
                    }
                  };
                if (
                  (i.EIP712Domain && t && o(i.EIP712Domain, t),
                  "EIP712Domain" !== r)
                ) {
                  if (i[r]) o(i[r], n);
                  else throw new eU({ primaryType: r, types: i });
                }
              })({ domain: t, message: n, primaryType: r, types: i });
              let o = ["0x1901"];
              return (
                t &&
                  o.push(
                    (function ({ domain: e, types: t }) {
                      return eH({
                        data: e,
                        primaryType: "EIP712Domain",
                        types: t,
                      });
                    })({ domain: t, types: i })
                  ),
                "EIP712Domain" !== r &&
                  o.push(eH({ data: n, primaryType: r, types: i })),
                (0, I.w)((0, eC.zo)(o))
              );
            })({ message: s, primaryType: a, types: u, domain: l }),
            signature: o,
            ...f,
          });
        }
        var ez = n(67348),
          eQ = n(99376),
          eW = n(59069),
          eV = n(36478),
          eK = n(41495),
          e$ = n(31853),
          eZ = n(77014);
        let eJ =
            /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\/\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\n)(?<address>0x[a-fA-F0-9]{40})\n\n(?:(?<statement>.*)\n\n)?/,
          eY =
            /(?:URI: (?<uri>.+))\n(?:Version: (?<version>.+))\n(?:Chain ID: (?<chainId>\d+))\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\n(?:Issued At: (?<issuedAt>.+))(?:\nExpiration Time: (?<expirationTime>.+))?(?:\nNot Before: (?<notBefore>.+))?(?:\nRequest ID: (?<requestId>.+))?/;
        async function eX(e, t) {
          let {
              address: n,
              domain: r,
              message: i,
              nonce: o,
              scheme: s,
              signature: a,
              time: c = new Date(),
              ...u
            } = t,
            l = (function (e) {
              let { scheme: t, statement: n, ...r } = e.match(eJ)?.groups ?? {},
                {
                  chainId: i,
                  expirationTime: o,
                  issuedAt: s,
                  notBefore: a,
                  requestId: c,
                  ...u
                } = e.match(eY)?.groups ?? {},
                l = e.split("Resources:")[1]?.split("\n- ").slice(1);
              return {
                ...r,
                ...u,
                ...(i ? { chainId: Number(i) } : {}),
                ...(o ? { expirationTime: new Date(o) } : {}),
                ...(s ? { issuedAt: new Date(s) } : {}),
                ...(a ? { notBefore: new Date(a) } : {}),
                ...(c ? { requestId: c } : {}),
                ...(l ? { resources: l } : {}),
                ...(t ? { scheme: t } : {}),
                ...(n ? { statement: n } : {}),
              };
            })(i);
          if (
            !l.address ||
            !(function (e) {
              let {
                address: t,
                domain: n,
                message: r,
                nonce: i,
                scheme: o,
                time: s = new Date(),
              } = e;
              if (
                (n && r.domain !== n) ||
                (i && r.nonce !== i) ||
                (o && r.scheme !== o) ||
                (r.expirationTime && s >= r.expirationTime) ||
                (r.notBefore && s < r.notBefore)
              )
                return !1;
              try {
                if (!r.address || (t && !(0, J.E)(r.address, t))) return !1;
              } catch {
                return !1;
              }
              return !0;
            })({
              address: n,
              domain: r,
              message: l,
              nonce: o,
              scheme: s,
              time: c,
            })
          )
            return !1;
          let f = ex(i);
          return eM(e, { address: l.address, hash: f, signature: a, ...u });
        }
        var e0 = n(86048),
          e1 = n(9769);
        function e2(e) {
          return {
            call: (t) => (0, w.R)(e, t),
            createBlockFilter: () => A(e),
            createContractEventFilter: (t) => M(e, t),
            createEventFilter: (t) => L(e, t),
            createPendingTransactionFilter: () => F(e),
            estimateContractGas: (t) => j(e, t),
            estimateGas: (t) => (0, _.Q)(e, t),
            getBalance: (t) => (0, q.s)(e, t),
            getBlobBaseFee: () => z(e),
            getBlock: (t) => (0, Q.Q)(e, t),
            getBlockNumber: (t) => (0, W.z)(e, t),
            getBlockTransactionCount: (t) => K(e, t),
            getBytecode: (t) => Z(e, t),
            getChainId: () => (0, $.L)(e),
            getCode: (t) => Z(e, t),
            getContractEvents: (t) => es(e, t),
            getEip712Domain: (t) => ec(e, t),
            getEnsAddress: (t) => p(e, t),
            getEnsAvatar: (t) => (0, m.r)(e, t),
            getEnsName: (t) => (0, g.w)(e, t),
            getEnsResolver: (t) => y(e, t),
            getEnsText: (t) => (0, b.g)(e, t),
            getFeeHistory: (t) => el(e, t),
            estimateFeesPerGas: (t) => (0, G.X)(e, t),
            getFilterChanges: (t) => ef(e, t),
            getFilterLogs: (t) => ed(e, t),
            getGasPrice: () => (0, eh.o)(e),
            getLogs: (t) => eo(e, t),
            getProof: (t) => ep(e, t),
            estimateMaxPriorityFeePerGas: (t) => (0, H._)(e, t),
            getStorageAt: (t) => em(e, t),
            getTransaction: (t) => (0, eg.f)(e, t),
            getTransactionConfirmations: (t) => ey(e, t),
            getTransactionCount: (t) => (0, eb.K)(e, t),
            getTransactionReceipt: (t) => (0, ew.a)(e, t),
            multicall: (t) => (0, ev.A)(e, t),
            prepareTransactionRequest: (t) => (0, e0.Z)(e, t),
            readContract: (t) => (0, h.L)(e, t),
            sendRawTransaction: (t) => (0, e1.p)(e, t),
            simulateContract: (t) => (0, eA.a)(e, t),
            verifyMessage: (t) => eL(e, t),
            verifySiweMessage: (t) => eX(e, t),
            verifyTypedData: (t) => eq(e, t),
            uninstallFilter: (t) => eE(e, t),
            waitForTransactionReceipt: (t) => (0, ez.e)(e, t),
            watchBlocks: (t) =>
              (function (
                e,
                {
                  blockTag: t = "latest",
                  emitMissed: n = !1,
                  emitOnBegin: r = !1,
                  onBlock: i,
                  onError: o,
                  includeTransactions: s,
                  poll: a,
                  pollingInterval: c = e.pollingInterval,
                }
              ) {
                let u, l, f, h;
                let p =
                    void 0 !== a
                      ? a
                      : "webSocket" !== e.transport.type &&
                        ("fallback" !== e.transport.type ||
                          "webSocket" !==
                            e.transport.transports[0].config.type),
                  m = s ?? !1;
                return p
                  ? (() => {
                      let s = (0, e$.P)(["watchBlocks", e.uid, t, n, r, m, c]);
                      return (0, eV.N7)(s, { onBlock: i, onError: o }, (i) =>
                        (0, eK.$)(
                          async () => {
                            try {
                              let r = await (0, d.s)(
                                e,
                                Q.Q,
                                "getBlock"
                              )({ blockTag: t, includeTransactions: m });
                              if (r.number && u?.number) {
                                if (r.number === u.number) return;
                                if (r.number - u.number > 1 && n)
                                  for (
                                    let t = u?.number + 1n;
                                    t < r.number;
                                    t++
                                  ) {
                                    let n = await (0, d.s)(
                                      e,
                                      Q.Q,
                                      "getBlock"
                                    )({
                                      blockNumber: t,
                                      includeTransactions: m,
                                    });
                                    i.onBlock(n, u), (u = n);
                                  }
                              }
                              (!u?.number ||
                                ("pending" === t && !r?.number) ||
                                (r.number && r.number > u.number)) &&
                                (i.onBlock(r, u), (u = r));
                            } catch (e) {
                              i.onError?.(e);
                            }
                          },
                          { emitOnBegin: r, interval: c }
                        )
                      );
                    })()
                  : ((l = !0),
                    (f = !0),
                    (h = () => (l = !1)),
                    (async () => {
                      try {
                        r &&
                          (0, d.s)(
                            e,
                            Q.Q,
                            "getBlock"
                          )({ blockTag: t, includeTransactions: m }).then(
                            (e) => {
                              l && f && (i(e, void 0), (f = !1));
                            }
                          );
                        let n = (() => {
                            if ("fallback" === e.transport.type) {
                              let t = e.transport.transports.find(
                                (e) => "webSocket" === e.config.type
                              );
                              return t ? t.value : e.transport;
                            }
                            return e.transport;
                          })(),
                          { unsubscribe: s } = await n.subscribe({
                            params: ["newHeads"],
                            onData(t) {
                              if (!l) return;
                              let n = (
                                e.chain?.formatters?.block?.format || eW.Z
                              )(t.result);
                              i(n, u), (f = !1), (u = n);
                            },
                            onError(e) {
                              o?.(e);
                            },
                          });
                        (h = s), l || h();
                      } catch (e) {
                        o?.(e);
                      }
                    })(),
                    () => h());
              })(e, t),
            watchBlockNumber: (t) => (0, eQ.q)(e, t),
            watchContractEvent: (t) =>
              (function (e, t) {
                let {
                  abi: n,
                  address: r,
                  args: i,
                  batch: o = !0,
                  eventName: s,
                  fromBlock: a,
                  onError: c,
                  onLogs: u,
                  poll: l,
                  pollingInterval: f = e.pollingInterval,
                  strict: h,
                } = t;
                return (
                  void 0 !== l
                    ? l
                    : "bigint" == typeof a ||
                      ("webSocket" !== e.transport.type &&
                        ("fallback" !== e.transport.type ||
                          "webSocket" !==
                            e.transport.transports[0].config.type))
                )
                  ? (() => {
                      let t = h ?? !1,
                        l = (0, e$.P)([
                          "watchContractEvent",
                          r,
                          i,
                          o,
                          e.uid,
                          s,
                          f,
                          t,
                          a,
                        ]);
                      return (0, eV.N7)(l, { onLogs: u, onError: c }, (c) => {
                        let u, l;
                        void 0 !== a && (u = a - 1n);
                        let h = !1,
                          p = (0, eK.$)(
                            async () => {
                              if (!h) {
                                try {
                                  l = await (0, d.s)(
                                    e,
                                    M,
                                    "createContractEventFilter"
                                  )({
                                    abi: n,
                                    address: r,
                                    args: i,
                                    eventName: s,
                                    strict: t,
                                    fromBlock: a,
                                  });
                                } catch {}
                                h = !0;
                                return;
                              }
                              try {
                                let a;
                                if (l)
                                  a = await (0, d.s)(
                                    e,
                                    ef,
                                    "getFilterChanges"
                                  )({ filter: l });
                                else {
                                  let o = await (0, d.s)(
                                    e,
                                    W.z,
                                    "getBlockNumber"
                                  )({});
                                  (a =
                                    u && u < o
                                      ? await (0, d.s)(
                                          e,
                                          es,
                                          "getContractEvents"
                                        )({
                                          abi: n,
                                          address: r,
                                          args: i,
                                          eventName: s,
                                          fromBlock: u + 1n,
                                          toBlock: o,
                                          strict: t,
                                        })
                                      : []),
                                    (u = o);
                                }
                                if (0 === a.length) return;
                                if (o) c.onLogs(a);
                                else for (let e of a) c.onLogs([e]);
                              } catch (e) {
                                l && e instanceof eZ.yR && (h = !1),
                                  c.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: f }
                          );
                        return async () => {
                          l &&
                            (await (0, d.s)(
                              e,
                              eE,
                              "uninstallFilter"
                            )({ filter: l })),
                            p();
                        };
                      });
                    })()
                  : (() => {
                      let t = (0, e$.P)([
                          "watchContractEvent",
                          r,
                          i,
                          o,
                          e.uid,
                          s,
                          f,
                          h ?? !1,
                        ]),
                        a = !0,
                        l = () => (a = !1);
                      return (0, eV.N7)(
                        t,
                        { onLogs: u, onError: c },
                        (t) => (
                          (async () => {
                            try {
                              let o = (() => {
                                  if ("fallback" === e.transport.type) {
                                    let t = e.transport.transports.find(
                                      (e) => "webSocket" === e.config.type
                                    );
                                    return t ? t.value : e.transport;
                                  }
                                  return e.transport;
                                })(),
                                c = s
                                  ? R({ abi: n, eventName: s, args: i })
                                  : [],
                                { unsubscribe: u } = await o.subscribe({
                                  params: ["logs", { address: r, topics: c }],
                                  onData(e) {
                                    if (!a) return;
                                    let r = e.result;
                                    try {
                                      let { eventName: e, args: i } = en({
                                          abi: n,
                                          data: r.data,
                                          topics: r.topics,
                                          strict: h,
                                        }),
                                        o = (0, ei.U)(r, {
                                          args: i,
                                          eventName: e,
                                        });
                                      t.onLogs([o]);
                                    } catch (o) {
                                      let e, n;
                                      if (
                                        o instanceof E.SM ||
                                        o instanceof E.Gy
                                      ) {
                                        if (h) return;
                                        (e = o.abiItem.name),
                                          (n = o.abiItem.inputs?.some(
                                            (e) => !("name" in e && e.name)
                                          ));
                                      }
                                      let i = (0, ei.U)(r, {
                                        args: n ? [] : {},
                                        eventName: e,
                                      });
                                      t.onLogs([i]);
                                    }
                                  },
                                  onError(e) {
                                    t.onError?.(e);
                                  },
                                });
                              (l = u), a || l();
                            } catch (e) {
                              c?.(e);
                            }
                          })(),
                          () => l()
                        )
                      );
                    })();
              })(e, t),
            watchEvent: (t) =>
              (function (
                e,
                {
                  address: t,
                  args: n,
                  batch: r = !0,
                  event: i,
                  events: o,
                  fromBlock: s,
                  onError: a,
                  onLogs: c,
                  poll: u,
                  pollingInterval: l = e.pollingInterval,
                  strict: f,
                }
              ) {
                let h, p;
                let m =
                    void 0 !== u
                      ? u
                      : "bigint" == typeof s ||
                        ("webSocket" !== e.transport.type &&
                          ("fallback" !== e.transport.type ||
                            "webSocket" !==
                              e.transport.transports[0].config.type)),
                  g = f ?? !1;
                return m
                  ? (() => {
                      let u = (0, e$.P)([
                        "watchEvent",
                        t,
                        n,
                        r,
                        e.uid,
                        i,
                        l,
                        s,
                      ]);
                      return (0, eV.N7)(u, { onLogs: c, onError: a }, (a) => {
                        let c, u;
                        void 0 !== s && (c = s - 1n);
                        let f = !1,
                          h = (0, eK.$)(
                            async () => {
                              if (!f) {
                                try {
                                  u = await (0, d.s)(
                                    e,
                                    L,
                                    "createEventFilter"
                                  )({
                                    address: t,
                                    args: n,
                                    event: i,
                                    events: o,
                                    strict: g,
                                    fromBlock: s,
                                  });
                                } catch {}
                                f = !0;
                                return;
                              }
                              try {
                                let s;
                                if (u)
                                  s = await (0, d.s)(
                                    e,
                                    ef,
                                    "getFilterChanges"
                                  )({ filter: u });
                                else {
                                  let r = await (0, d.s)(
                                    e,
                                    W.z,
                                    "getBlockNumber"
                                  )({});
                                  (s =
                                    c && c !== r
                                      ? await (0, d.s)(
                                          e,
                                          eo,
                                          "getLogs"
                                        )({
                                          address: t,
                                          args: n,
                                          event: i,
                                          events: o,
                                          fromBlock: c + 1n,
                                          toBlock: r,
                                        })
                                      : []),
                                    (c = r);
                                }
                                if (0 === s.length) return;
                                if (r) a.onLogs(s);
                                else for (let e of s) a.onLogs([e]);
                              } catch (e) {
                                u && e instanceof eZ.yR && (f = !1),
                                  a.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: l }
                          );
                        return async () => {
                          u &&
                            (await (0, d.s)(
                              e,
                              eE,
                              "uninstallFilter"
                            )({ filter: u })),
                            h();
                        };
                      });
                    })()
                  : ((h = !0),
                    (p = () => (h = !1)),
                    (async () => {
                      try {
                        let r = (() => {
                            if ("fallback" === e.transport.type) {
                              let t = e.transport.transports.find(
                                (e) => "webSocket" === e.config.type
                              );
                              return t ? t.value : e.transport;
                            }
                            return e.transport;
                          })(),
                          s = o ?? (i ? [i] : void 0),
                          u = [];
                        s &&
                          ((u = [
                            s.flatMap((e) =>
                              R({ abi: [e], eventName: e.name, args: n })
                            ),
                          ]),
                          i && (u = u[0]));
                        let { unsubscribe: l } = await r.subscribe({
                          params: ["logs", { address: t, topics: u }],
                          onData(e) {
                            if (!h) return;
                            let t = e.result;
                            try {
                              let { eventName: e, args: n } = en({
                                  abi: s ?? [],
                                  data: t.data,
                                  topics: t.topics,
                                  strict: g,
                                }),
                                r = (0, ei.U)(t, { args: n, eventName: e });
                              c([r]);
                            } catch (i) {
                              let e, n;
                              if (i instanceof E.SM || i instanceof E.Gy) {
                                if (f) return;
                                (e = i.abiItem.name),
                                  (n = i.abiItem.inputs?.some(
                                    (e) => !("name" in e && e.name)
                                  ));
                              }
                              let r = (0, ei.U)(t, {
                                args: n ? [] : {},
                                eventName: e,
                              });
                              c([r]);
                            }
                          },
                          onError(e) {
                            a?.(e);
                          },
                        });
                        (p = l), h || p();
                      } catch (e) {
                        a?.(e);
                      }
                    })(),
                    () => p());
              })(e, t),
            watchPendingTransactions: (t) =>
              (function (
                e,
                {
                  batch: t = !0,
                  onError: n,
                  onTransactions: r,
                  poll: i,
                  pollingInterval: o = e.pollingInterval,
                }
              ) {
                let s, a;
                return (void 0 !== i ? i : "webSocket" !== e.transport.type)
                  ? (() => {
                      let i = (0, e$.P)([
                        "watchPendingTransactions",
                        e.uid,
                        t,
                        o,
                      ]);
                      return (0, eV.N7)(
                        i,
                        { onTransactions: r, onError: n },
                        (n) => {
                          let r;
                          let i = (0, eK.$)(
                            async () => {
                              try {
                                if (!r)
                                  try {
                                    r = await (0, d.s)(
                                      e,
                                      F,
                                      "createPendingTransactionFilter"
                                    )({});
                                    return;
                                  } catch (e) {
                                    throw (i(), e);
                                  }
                                let o = await (0, d.s)(
                                  e,
                                  ef,
                                  "getFilterChanges"
                                )({ filter: r });
                                if (0 === o.length) return;
                                if (t) n.onTransactions(o);
                                else for (let e of o) n.onTransactions([e]);
                              } catch (e) {
                                n.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: o }
                          );
                          return async () => {
                            r &&
                              (await (0, d.s)(
                                e,
                                eE,
                                "uninstallFilter"
                              )({ filter: r })),
                              i();
                          };
                        }
                      );
                    })()
                  : ((s = !0),
                    (a = () => (s = !1)),
                    (async () => {
                      try {
                        let { unsubscribe: t } = await e.transport.subscribe({
                          params: ["newPendingTransactions"],
                          onData(e) {
                            if (!s) return;
                            let t = e.result;
                            r([t]);
                          },
                          onError(e) {
                            n?.(e);
                          },
                        });
                        (a = t), s || a();
                      } catch (e) {
                        n?.(e);
                      }
                    })(),
                    () => a());
              })(e, t),
          };
        }
        function e6(e, t = {}) {
          let n = (function (e, t = {}) {
            let n;
            try {
              n = e.getClient(t);
            } catch {}
            return n;
          })(e, t);
          return n?.extend(e2);
        }
        var e5 = n(35195),
          e3 = n(12364);
        function e8() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = (0, e3.Z)(e);
          return (0, e5.useSyncExternalStoreWithSelector)(
            (e) =>
              (function (e, t) {
                let { onChange: n } = t;
                return e.subscribe(() => e6(e), n, {
                  equalityFn: (e, t) => e?.uid === t?.uid,
                });
              })(t, { onChange: e }),
            () => e6(t, e),
            () => e6(t, e),
            (e) => e,
            (e, t) =>
              (null == e ? void 0 : e.uid) === (null == t ? void 0 : t.uid)
          );
        }
      },
      91196: function (e, t, n) {
        "use strict";
        n.d(t, {
          Q: function () {
            return s;
          },
        });
        var r = n(21770),
          i = n(31327),
          o = n(12364);
        function s() {
          var e;
          let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { mutation: n } = t,
            s =
              ((e = (0, o.Z)(t)),
              {
                mutationFn: (t) => (0, i.l)(e, t),
                mutationKey: ["signMessage"],
              }),
            { mutate: a, mutateAsync: c, ...u } = (0, r.D)({ ...n, ...s });
          return { ...u, signMessage: a, signMessageAsync: c };
        }
      },
      59233: function (e, t, n) {
        "use strict";
        n.d(t, {
          o: function () {
            return d;
          },
        });
        var r = n(21770),
          i = n(13102),
          o = n(14478);
        async function s(e, t) {
          let { addEthereumChainParameter: n, chainId: r } = t,
            s = e.state.connections.get(t.connector?.uid ?? e.state.current);
          if (s) {
            let e = s.connector;
            if (!e.switchChain) throw new o.O({ connector: e });
            return await e.switchChain({
              addEthereumChainParameter: n,
              chainId: r,
            });
          }
          let a = e.chains.find((e) => e.id === r);
          if (!a) throw new i.X4();
          return e.setState((e) => ({ ...e, chainId: r })), a;
        }
        var a = n(52123);
        let c = [];
        function u(e) {
          let t = e.chains;
          return (0, a.v)(c, t) ? c : ((c = t), t);
        }
        var l = n(2265),
          f = n(12364);
        function d() {
          let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            { mutation: t } = e,
            n = (0, f.Z)(e),
            {
              mutate: i,
              mutateAsync: o,
              ...a
            } = (0, r.D)({
              ...t,
              mutationFn: (e) => s(n, e),
              mutationKey: ["switchChain"],
            });
          return {
            ...a,
            chains: (function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                t = (0, f.Z)(e);
              return (0, l.useSyncExternalStore)(
                (e) =>
                  (function (e, t) {
                    let { onChange: n } = t;
                    return e._internal.chains.subscribe((e, t) => {
                      n(e, t);
                    });
                  })(t, { onChange: e }),
                () => u(t),
                () => u(t)
              );
            })({ config: n }),
            switchChain: i,
            switchChainAsync: o,
          };
        }
      },
      24432: function (e, t, n) {
        "use strict";
        n.d(t, {
          aM: function () {
            return o;
          },
        });
        var r = n(16593),
          i = n(27534);
        function o(e) {
          let t = (0, r.a)({ ...e, queryKeyHashFn: i.kq });
          return (t.queryKey = e.queryKey), t;
        }
      },
      89134: function (e, t, n) {
        "use strict";
        n.d(t, {
          XR: function () {
            return c;
          },
          mW: function () {
            return s;
          },
          tJ: function () {
            return l;
          },
        });
        let r = new Map(),
          i = (e) => {
            let t = r.get(e);
            return t
              ? Object.fromEntries(
                  Object.entries(t.stores).map(([e, t]) => [e, t.getState()])
                )
              : {};
          },
          o = (e, t, n) => {
            if (void 0 === e)
              return { type: "untracked", connection: t.connect(n) };
            let i = r.get(n.name);
            if (i) return { type: "tracked", store: e, ...i };
            let o = { connection: t.connect(n), stores: {} };
            return r.set(n.name, o), { type: "tracked", store: e, ...o };
          },
          s =
            (e, t = {}) =>
            (n, r, s) => {
              let c;
              let { enabled: u, anonymousActionType: l, store: f, ...d } = t;
              try {
                c = (null == u || u) && window.__REDUX_DEVTOOLS_EXTENSION__;
              } catch (e) {}
              if (!c) return e(n, r, s);
              let { connection: h, ...p } = o(f, c, d),
                m = !0;
              s.setState = (e, t, o) => {
                let a = n(e, t);
                if (!m) return a;
                let c =
                  void 0 === o
                    ? { type: l || "anonymous" }
                    : "string" == typeof o
                    ? { type: o }
                    : o;
                return (
                  void 0 === f
                    ? null == h || h.send(c, r())
                    : null == h ||
                      h.send(
                        { ...c, type: `${f}/${c.type}` },
                        { ...i(d.name), [f]: s.getState() }
                      ),
                  a
                );
              };
              let g = (...e) => {
                  let t = m;
                  (m = !1), n(...e), (m = t);
                },
                y = e(s.setState, r, s);
              if (
                ("untracked" === p.type
                  ? null == h || h.init(y)
                  : ((p.stores[p.store] = s),
                    null == h ||
                      h.init(
                        Object.fromEntries(
                          Object.entries(p.stores).map(([e, t]) => [
                            e,
                            e === p.store ? y : t.getState(),
                          ])
                        )
                      )),
                s.dispatchFromDevtools && "function" == typeof s.dispatch)
              ) {
                let e = !1,
                  t = s.dispatch;
                s.dispatch = (...n) => {
                  "__setState" !== n[0].type ||
                    e ||
                    (console.warn(
                      '[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'
                    ),
                    (e = !0)),
                    t(...n);
                };
              }
              return (
                h.subscribe((e) => {
                  var t;
                  switch (e.type) {
                    case "ACTION":
                      if ("string" != typeof e.payload) {
                        console.error(
                          "[zustand devtools middleware] Unsupported action format"
                        );
                        return;
                      }
                      return a(e.payload, (e) => {
                        if ("__setState" === e.type) {
                          if (void 0 === f) {
                            g(e.state);
                            return;
                          }
                          1 !== Object.keys(e.state).length &&
                            console.error(`
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);
                          let t = e.state[f];
                          if (null == t) return;
                          JSON.stringify(s.getState()) !== JSON.stringify(t) &&
                            g(t);
                          return;
                        }
                        s.dispatchFromDevtools &&
                          "function" == typeof s.dispatch &&
                          s.dispatch(e);
                      });
                    case "DISPATCH":
                      switch (e.payload.type) {
                        case "RESET":
                          if ((g(y), void 0 === f))
                            return null == h ? void 0 : h.init(s.getState());
                          return null == h ? void 0 : h.init(i(d.name));
                        case "COMMIT":
                          if (void 0 === f) {
                            null == h || h.init(s.getState());
                            break;
                          }
                          return null == h ? void 0 : h.init(i(d.name));
                        case "ROLLBACK":
                          return a(e.state, (e) => {
                            if (void 0 === f) {
                              g(e), null == h || h.init(s.getState());
                              return;
                            }
                            g(e[f]), null == h || h.init(i(d.name));
                          });
                        case "JUMP_TO_STATE":
                        case "JUMP_TO_ACTION":
                          return a(e.state, (e) => {
                            if (void 0 === f) {
                              g(e);
                              return;
                            }
                            JSON.stringify(s.getState()) !==
                              JSON.stringify(e[f]) && g(e[f]);
                          });
                        case "IMPORT_STATE": {
                          let { nextLiftedState: n } = e.payload,
                            r =
                              null == (t = n.computedStates.slice(-1)[0])
                                ? void 0
                                : t.state;
                          if (!r) return;
                          void 0 === f ? g(r) : g(r[f]),
                            null == h || h.send(null, n);
                          break;
                        }
                        case "PAUSE_RECORDING":
                          return (m = !m);
                      }
                      return;
                  }
                }),
                y
              );
            },
          a = (e, t) => {
            let n;
            try {
              n = JSON.parse(e);
            } catch (e) {
              console.error(
                "[zustand devtools middleware] Could not parse the received json",
                e
              );
            }
            void 0 !== n && t(n);
          },
          c = (e) => (t, n, r) => {
            let i = r.subscribe;
            return (
              (r.subscribe = (e, t, n) => {
                let o = e;
                if (t) {
                  let i = (null == n ? void 0 : n.equalityFn) || Object.is,
                    s = e(r.getState());
                  (o = (n) => {
                    let r = e(n);
                    if (!i(s, r)) {
                      let e = s;
                      t((s = r), e);
                    }
                  }),
                    (null == n ? void 0 : n.fireImmediately) && t(s, s);
                }
                return i(o);
              }),
              e(t, n, r)
            );
          },
          u = (e) => (t) => {
            try {
              let n = e(t);
              if (n instanceof Promise) return n;
              return {
                then: (e) => u(e)(n),
                catch(e) {
                  return this;
                },
              };
            } catch (e) {
              return {
                then(e) {
                  return this;
                },
                catch: (t) => u(t)(e),
              };
            }
          },
          l = (e, t) => (n, r, i) => {
            let o,
              s = {
                storage: (function (e, t) {
                  let n;
                  try {
                    n = e();
                  } catch (e) {
                    return;
                  }
                  return {
                    getItem: (e) => {
                      var t;
                      let r = (e) =>
                          null === e ? null : JSON.parse(e, void 0),
                        i = null != (t = n.getItem(e)) ? t : null;
                      return i instanceof Promise ? i.then(r) : r(i);
                    },
                    setItem: (e, t) => n.setItem(e, JSON.stringify(t, void 0)),
                    removeItem: (e) => n.removeItem(e),
                  };
                })(() => localStorage),
                partialize: (e) => e,
                version: 0,
                merge: (e, t) => ({ ...t, ...e }),
                ...t,
              },
              a = !1,
              c = new Set(),
              l = new Set(),
              f = s.storage;
            if (!f)
              return e(
                (...e) => {
                  console.warn(
                    `[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`
                  ),
                    n(...e);
                },
                r,
                i
              );
            let d = () => {
                let e = s.partialize({ ...r() });
                return f.setItem(s.name, { state: e, version: s.version });
              },
              h = i.setState;
            i.setState = (e, t) => {
              h(e, t), d();
            };
            let p = e(
              (...e) => {
                n(...e), d();
              },
              r,
              i
            );
            i.getInitialState = () => p;
            let m = () => {
              var e, t;
              if (!f) return;
              (a = !1),
                c.forEach((e) => {
                  var t;
                  return e(null != (t = r()) ? t : p);
                });
              let i =
                (null == (t = s.onRehydrateStorage)
                  ? void 0
                  : t.call(s, null != (e = r()) ? e : p)) || void 0;
              return u(f.getItem.bind(f))(s.name)
                .then((e) => {
                  if (e) {
                    if ("number" != typeof e.version || e.version === s.version)
                      return [!1, e.state];
                    if (s.migrate) return [!0, s.migrate(e.state, e.version)];
                    console.error(
                      "State loaded from storage couldn't be migrated since no migrate function was provided"
                    );
                  }
                  return [!1, void 0];
                })
                .then((e) => {
                  var t;
                  let [i, a] = e;
                  if ((n((o = s.merge(a, null != (t = r()) ? t : p)), !0), i))
                    return d();
                })
                .then(() => {
                  null == i || i(o, void 0),
                    (o = r()),
                    (a = !0),
                    l.forEach((e) => e(o));
                })
                .catch((e) => {
                  null == i || i(void 0, e);
                });
            };
            return (
              (i.persist = {
                setOptions: (e) => {
                  (s = { ...s, ...e }), e.storage && (f = e.storage);
                },
                clearStorage: () => {
                  null == f || f.removeItem(s.name);
                },
                getOptions: () => s,
                rehydrate: () => m(),
                hasHydrated: () => a,
                onHydrate: (e) => (
                  c.add(e),
                  () => {
                    c.delete(e);
                  }
                ),
                onFinishHydration: (e) => (
                  l.add(e),
                  () => {
                    l.delete(e);
                  }
                ),
              }),
              s.skipHydration || m(),
              o || p
            );
          };
      },
      27695: function (e, t, n) {
        "use strict";
        n.d(t, {
          U: function () {
            return a;
          },
        });
        var r = n(2265),
          i = n(90808);
        let o = (e) => e,
          s = (e) => {
            let t = (0, i.M)(e),
              n = (e) =>
                (function (e, t = o) {
                  let n = r.useSyncExternalStore(
                    e.subscribe,
                    () => t(e.getState()),
                    () => t(e.getInitialState())
                  );
                  return r.useDebugValue(n), n;
                })(t, e);
            return Object.assign(n, t), n;
          },
          a = (e) => (e ? s(e) : s);
      },
      90808: function (e, t, n) {
        "use strict";
        n.d(t, {
          M: function () {
            return i;
          },
        });
        let r = (e) => {
            let t;
            let n = new Set(),
              r = (e, r) => {
                let i = "function" == typeof e ? e(t) : e;
                if (!Object.is(i, t)) {
                  let e = t;
                  (t = (null != r ? r : "object" != typeof i || null === i)
                    ? i
                    : Object.assign({}, t, i)),
                    n.forEach((n) => n(t, e));
                }
              },
              i = () => t,
              o = {
                setState: r,
                getState: i,
                getInitialState: () => s,
                subscribe: (e) => (n.add(e), () => n.delete(e)),
              },
              s = (t = e(r, i, o));
            return o;
          },
          i = (e) => (e ? r(e) : r);
      },
    },
  ]);
